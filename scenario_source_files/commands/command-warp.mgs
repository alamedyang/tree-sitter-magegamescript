include "header.mgs";

// REGISTER

register_warp {
	// NOTE: No need to branch any of these (WOPR excepting); you only get warping powers when the castle has been entirely explored

	command warp = command_warp;
	command warp fail = warp_fail;

	command man + warp = man_warp;

	// convenience numbers -- not documented in game, but useful for debugging if nothing else
	command warp + "1" = warp_ch2_1;
	command warp + "11" = warp_ch2_11;
	command warp + "12" = warp_ch2_12;
	command warp + "13" = warp_ch2_13;
	command warp + "14" = warp_ch2_14;
	command warp + "21" = warp_ch2_21;
	command warp + "22" = warp_ch2_22;
	command warp + "23" = warp_ch2_23;
	command warp + "31" = warp_ch2_31;
	command warp + "32" = warp_ch2_32;
	command warp + "33" = warp_ch2_33;
	command warp + "34" = warp_ch2_34;
	command warp + "99" = warp_ch2_99;
	// end debug

	// CH2 ROOMS

	command warp + "castle exterior" = warp_ch2_castle_exterior;
	command warp + "castle entrance" = warp_ch2_1;
	command warp + "castle hallway front" = warp_ch2_11;
	command warp + "castle hallway back" = warp_ch2_12;

	command warp + "castle throne room" = warp_ch2_13;
	command warp + "throne room" = warp_ch2_13;
	
	command warp + "castle bedroom" = warp_ch2_14;
	command warp + "gibson's bedroom" = warp_ch2_14;
	command warp + "gibsons bedroom" = warp_ch2_14;
	command warp + "gibson bedroom" = warp_ch2_14;
	command warp + "king gibson's bedroom" = warp_ch2_14;
	command warp + "king gibsons bedroom" = warp_ch2_14;
	command warp + "king gibson bedroom" = warp_ch2_14;

	command warp + workshop = warp_ch2_21;
	command warp + "server room" = warp_ch2_22;
	command warp + "power plant" = warp_ch2_23;

	command warp + "grand hall" = warp_ch2_31;
	command warp + "castle hall" = warp_ch2_31;

	command warp + "castle kitchen" = warp_ch2_32;

	command warp + hydroponics = warp_ch2_33;
	command warp + "castle hydroponics" = warp_ch2_33;
	command warp + "hydroponics room" = warp_ch2_33;
	
	command warp + "castle pantry" = warp_ch2_34;

	command warp + "secret lab" = warp_ch2_99;

	// CH1 ROOMS
	
	command warp + town = warp_ch2_town;
	command warp + bakery = warp_ch2_bakery;
	command warp + greenhouse = warp_ch2_greenhouse;

	command warp + "wopr room" = warp_ch2_wopr;
	command warp + wopr = warp_ch2_wopr;

	command warp + library = warp_ch2_library;
	command warp + lodge = warp_ch2_library;

	command warp + "inner sanctum" = warp_ch2_rtfmroom;
	command warp + "rtfm room" = warp_ch2_rtfmroom;
	command warp + rtfm = warp_ch2_rtfmroom;

	command warp + home = warp_ch2_magehouse;
	command warp + "my home" = warp_ch2_magehouse;
	command warp + "my house" = warp_ch2_magehouse;
	
	command warp + bobsclub = warp_ch2_bobsclub;
	command warp + "bobs club" = warp_ch2_bobsclub;
	command warp + "bob's club" = warp_ch2_bobsclub;
	command warp + "bobs club basement" = warp_ch2_bobsclub_basement;
	command warp + "bob's club basement" = warp_ch2_bobsclub_basement;
	
	command warp + "beatrice's house" = warp_ch2_oldcouplehouse;
	command warp + "beatrices house" = warp_ch2_oldcouplehouse;
	command warp + "beatrice house" = warp_ch2_oldcouplehouse;
	command warp + bea = warp_ch2_oldcouplehouse;

	command warp + "smith's house" = warp_ch2_smithfamily;
	command warp + "smiths house" = warp_ch2_smithfamily;
	command warp + "smith house" = warp_ch2_smithfamily;
	command warp + smith = warp_ch2_smithfamily;
}

// MAN PAGE

man_warp {
	show serial_dialog spacer;
	show serial_dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - WARP</>"
		" "
		"A powerful command that teleports you to a room you've been to before."
		" "
		"To see a list of valid warp desinations, use <c>WARP</> on its own (without a room name)."
		" "
		"NOTE: Long distance warps may require access to the Gibson wifi network. If encountering problems, please reduce your distance to the nearest castle wireless base station."
	};
}

// FAIL

warp_fail {
	show serial_dialog spacer;
	show serial_dialog {
		"<bold><r>WARP FAILED!</> You have not been to that destination yet or that destination does not exist."
	};
}

// COMMAND

command_warp {
	show serial_dialog spacer;
	show serial_dialog {
		"List of valid <c>WARP</> destinations:"
		" "
		"<bold>-------------------- CASTLE --------------------</>"
		"  Castle exterior          Server room"
		"  Castle entrance          Power plant"
		"  Castle hallway front     Grand hall"
		"  Castle hallway back      Castle kitchen"
		"  Castle throne room       Hydroponics room"
		"  King Gibson's bedroom    Castle pantry"
		"  Workshop                 Secret lab"
		" "
		"<bold>-------------------- TOWN ----------------------</>"
		"  Town                     Bob's Club"
		"  Bakery                   Bob's Club basement"
		"  Greenhouse               Beatrice's house"
		"  Library                  Smith's house"
		"  RTFM room                My house"
	};
	if (wopr_backdoor_found) {
		show serial_dialog { "  WOPR room" };
	}
}

// common

warp_common {
	if (ch2_wait_for_hat_touch) {
		goto ch2_wait_for_hat_touch_message;
	}
	// all warps will fail before the computer is ok
	// if you're PHYSICALLY OUTSIDE the castle
	if (!ch2_ring_zero_enabled_in_castle) {
		if (!debug_mode) {
			if (ch2_in_room == 0) {
				goto warp_ch2_town_check_fail_message;
			}
		}
	}
	ch2_in_room = 0;
	current_chapter = 2; // todo: remove this; it's here for ch2 debug mode protection for the WOPR room
	copy!(warping_out_fade_out)
}

warp_ch2_castle_exterior {
	copy!(warp_common)
	load map "ch2-castle-outside";
}
warp_ch2_1 {
	copy!(warp_common)
	copy!(ch2_load_castle_1_special)
}
warp_ch2_11 {
	copy!(warp_common)
	copy!(ch2_load_castle_11_special)
}
warp_ch2_12 {
	copy!(warp_common)
	copy!(ch2_load_castle_12_special)
}
warp_ch2_13 {
	copy!(warp_common)
	copy!(ch2_load_castle_13_special)
}
warp_ch2_14 {
	copy!(warp_common)
	copy!(ch2_load_castle_14_special)
}
warp_ch2_21 {
	copy!(warp_common)
	copy!(ch2_load_castle_21_special)
}
warp_ch2_22 {
	copy!(warp_common)
	copy!(ch2_load_castle_22_special)
}
warp_ch2_23 {
	copy!(warp_common)
	copy!(ch2_load_castle_23_special)
}
warp_ch2_31 {
	copy!(warp_common)
	copy!(ch2_load_castle_31_special)
}
warp_ch2_32 {
	copy!(warp_common)
	copy!(ch2_load_castle_32_special)
}
warp_ch2_33 {
	copy!(warp_common)
	load map "ch2-castle-33";
}
warp_ch2_34 {
	copy!(warp_common)
	load map "ch2-castle-34";
}
warp_ch2_99 {
	copy!(warp_common)
	load map "ch2-castle-99";
}

// ch1 stuff

warp_ch2_town_destination_check {
	// all warps will fail before the computer is ok
	// if your DESTINATION is outside the castle
	if (!ch2_ring_zero_enabled_in_castle) {
		if (!debug_mode) {
			goto warp_ch2_town_check_fail_message;
		}
	}
}

warp_ch2_town_check_fail_message {
	show serial_dialog spacer;
	show serial_dialog {
		"<bold><r>ERROR</>: <bold>warp-assistant</> timed out"
		" "
		"DNS lookup for warp destination failed. Could not confirm coordinates of destination. Aborting!"
		" "
		"Check your wifi connection and try again."
		" "
		"<bold>warp-assistant</>: exited with code -1"
	};
}

warp_ch2_town {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-town";
}
warp_ch2_bakery {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-bakery";
}
warp_ch2_greenhouse {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-greenhouse";
}
warp_ch2_wopr {
	if (wopr_backdoor_found || debug_mode) {
		copy!(warp_ch2_town_destination_check)
		copy!(warp_common)
		load map woprhouse;
	} else {
		goto warp_fail;
	}
}
warp_ch2_library {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-lodge";
}
warp_ch2_rtfmroom {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-lodge-rtfm";
}
warp_ch2_magehouse {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-magehouse";
}
warp_ch2_bobsclub {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-bobsclub";
}
warp_ch2_bobsclub_basement {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-bobsclub-basement";
}
warp_ch2_oldcouplehouse {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-oldcouplehouse";
}
warp_ch2_smithfamily {
	copy!(warp_ch2_town_destination_check)
	copy!(warp_common)
	load map "ch2-smithfamily";
}

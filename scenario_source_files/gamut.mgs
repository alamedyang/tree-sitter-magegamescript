include "header.mgs";
add dialog settings {
	default { alignment BL }
	label PLAYER {
		alignment BR
		entity "%PLAYER%"
	}
}
add serial_dialog settings {
	wrap 75
}

dialog "goatGreeting" {
	PLAYER emote 1 portrait goat3 "Who are you?"
	name "Goat King" "Why, I am the goat of mystery!"
	> "Really?" = reallyscript
	> "I don't believe you" = failscript
}
serial_dialog terminal_start {
	"You are in the meadow. It is a wonderous place."
	_ "Bee" = flowerscript
	_ "Butterflies" = flutterscript
}

$trombones = 76;
$hamburgers = "steamed hams";

branch_on_bool_equality {
	// CHECK_DEBUG_MODE
	if (debug_mode) { wait 1; }
	if (!debug_mode) { wait 2; }

	// CHECK_SERIAL_DIALOG_OPEN
	if (serial_dialog open) { wait 1; }
	if (!serial_dialog open) { wait 2; }
	if (!serial_dialog closed) { wait 3; }
	if (serial_dialog closed) { wait 4; }
	
	// CHECK_DIALOG_OPEN
	if (dialog open) { wait 1; }
	if (!dialog open) { wait 2; }
	if (!dialog closed) { wait 3; }
	if (dialog closed) { wait 4; }

	// CHECK_SAVE_FLAG
	if (flagName) { wait 1; }
	if (!flagName) { wait 2; }

	// CHECK_FOR_BUTTON_PRESS
	if (button MEM1 pressed) { wait 1; }
	if (!button MEM1 pressed) { wait 2; }
	
	// CHECK_FOR_BUTTON_STATE
	if (button BIT1 down) { wait 1; }
	if (!button BIT1 down) { wait 2; }
	if (!button BIT1 up) { wait 3; }
	if (button BIT1 up) { wait 4; }

	// CHECK_IF_ENTITY_IS_IN_GEOMETRY
	if (self intersects geometry "bounding box") { wait 1; }
	if (!self intersects geometry "bounding box") { wait 2; }
	
	// CHECK_ENTITY_GLITCHED
	if (entity "Bob" glitched) { wait 1; }
	if (!entity Bob glitched) { wait 2; }
}
branch_on_int_equality {
	// CHECK_ENTITY_X
	if (player x == 0) { wait 1; }
	if (player x != 0) { wait 2; }
	
	// CHECK_ENTITY_Y
	if (player y == 0) { wait 1; }
	if (player y != 0) { wait 2; }
	
	// CHECK_ENTITY_PRIMARY_ID
	if (player primary_id == 0) { wait 1; }
	if (player primary_id != 0) { wait 2; }
	
	// CHECK_ENTITY_SECONDARY_ID
	if (player secondary_id == 0) { wait 1; }
	if (player secondary_id != 0) { wait 2; }
	
	// CHECK_ENTITY_PRIMARY_ID_TYPE
	if (player primary_id_type == 0) { wait 1; }
	if (player primary_id_type != 0) { wait 2; }
	
	// CHECK_ENTITY_CURRENT_ANIMATION
	if (self current_animation == 0) { wait 1; }
	if (self current_animation != 0) { wait 2; }
	
	// CHECK_ENTITY_CURRENT_FRAME
	if (entity Bob animation_frame == 0) { wait 1; }
	if (entity Bob animation_frame != 0) { wait 2; }
}
branch_on_int_comparison {
	// CHECK_VARIABLE
	if (i < 10) { wait 1; }

	// CHECK_VARIABLES
	if (i < varName) { wait 1; }
}
branch_on_string_equality {
	// CHECK_WARP_STATE
	if (warp_state == "goat") { wait 1; }
	if (warp_state != "goat") { wait 2; }

	// CHECK_ENTITY_NAME
	if (player name == "goat") { wait 1; }
	if (player name != "goat") { wait 2; }
	
	// CHECK_ENTITY_TYPE
	if (player type == "goat") { wait 1; }
	if (player type != "goat") { wait 2; }

	// CHECK_ENTITY_INTERACT_SCRIPT
	if (player on_interact == "goat") { wait 1; }
	if (player on_interact != "goat") { wait 2; }

	// CHECK_ENTITY_TICK_SCRIPT
	if (player on_tick == "goat") { wait 1; }
	if (player on_tick != "goat") { wait 2; }

	// CHECK_ENTITY_LOOK_SCRIPT
	if (player on_look == "goat") { wait 1; }
	if (player on_look != "goat") { wait 2; }

	// CHECK_ENTITY_DIRECTION
	if (player direction == "goat") { wait 1; }
	if (player direction != "goat") { wait 2; }

	// CHECK_ENTITY_PATH
	if (player path == "goat") { wait 1; }
	if (player path != "goat") { wait 2; }
}

set_bool_exp_ok {
	// SET_SAVE_FLAG
	flagName = true;
	
	// SET_HEX_EDITOR_STATE
	hex_editor = on;

	// SET_HEX_EDITOR_DIALOG_MODE
	hex_dialog_mode = down;

	// SET_HEX_EDITOR_CONTROL
	hex_control = open;

	// SET_HEX_EDITOR_CONTROL_CLIPBOARD
	hex_clipboard = false;

	// SET_SERIAL_DIALOG_CONTROL
	serial_control = off;

	// SET_PLAYER_CONTROL
	player_control = up;

	// SET_LIGHTS_CONTROL
	lights_control = open;

	// SET_LIGHTS_STATE
	light MEM1 = on;

	// SET_ENTITY_GLITCHED
	entity Bob glitched = true;

	// expressions
	entity Bob glitched = debug_mode;
	entity Bob glitched = debug_mode || isGoatGrumpy;
	entity Bob glitched = debug_mode && isGoatGrumpy;
	entity Bob glitched = !(debug_mode || isGoatGrumpy);
	entity Bob glitched = !(debug_mode || !isGoatGrumpy);
}
set_int_exp_ok {
	// MUTATE_VARIABLES
	goatCount = index;

	// MUTATE_VARIABLE
	goatCount = 0;

	// COPY_VARIABLE
	goatCount = player x;
	player y = goatCount;

	//expressions
	goatCount = 1 + player x;
	goatCount = player y + player x;
	goatCount = player y + player x * 99;
	goatCount = 7 * (self x + player primary_id);
}
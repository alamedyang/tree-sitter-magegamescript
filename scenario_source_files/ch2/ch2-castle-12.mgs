include "header.mgs";
add dialog settings {
	label Concierge {
		entity Concierge
		portrait "concierge"
	}
}

/* ---------- LOOK SCRIPTS ---------- */

look_ch2_castle_12 {
	show serial_dialog spacer;
	show serial_dialog {
		"You looked around the <c>CASTLE HALLWAY BACK</>."
	};
	if (ch2_storyflag_round < 5) {
		show serial_dialog {
			"\tThe air is a little stuffier here than it had been nearer the entrance. Perhaps more was destroyed in this room, more dust scattered and more moisture entrapped, or perhaps it's a sign that you've come deeper into the castle."
			" "
		};
	} else {
		show serial_dialog {
			"\tCleared of debris, the hall is much larger than it appeared when you first arrived. Without the monitor and it's welcoming slideshow, however, the room feels quite a bit emptier as well."
			" "
		};
	}
}

look_ch2_concierge {
	show serial_dialog spacer;
	show serial_dialog {
		"You looked at the <m>%SELF%</>."
		"\tThe man is professionalism itself, from his well-fitten suit and his professional body language -- apart from the expression on his face, which is incongruously aggressive. You think you can make out the sound of growling."
	};
}

look_ch2_guest_book {
	show serial_dialog spacer;
	show serial_dialog {
		"You looked at the <m>%SELF%</>."
		"\tIt's a massive volume open to a page filled with names in eclectic handwriting. An elegant gold bookmark, attached to the book at the top of the spine, is draped across the opposite page."
	};
}

look_ch2_stereo {
	show serial_dialog spacer;
	show serial_dialog {
		"You looked at <m>%SELF%</>."
		"\tThis machine is massive by modern standards, large enough to house four CDs in the CD changer up top and two cassette decks side-by-side the front face. It's thoroughly wired into the wall."
	};
}

/* ---------- ON_LOAD ---------- */

on_load_ch2_castle_12_postgame {
	ch2_in_room = 12;
	// entrance text
	show serial_dialog spacer;
	show serial_dialog { "Entering <bold>CASTLE HALLWAY BACK</>..." };
	if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	} else if (warp_state == "walk_from-east") {
		player position = geometry "walk_from-east";
	}
	copy!(ch2_map_init)
}

on_load_ch2_castle_12 {
	// ch2 room state
	ch2_in_room = 12;
	
	// entrance text
	show serial_dialog spacer;
	if (!ch2_seen_room_12) {
		show serial_dialog { "Discovered <bold><c>CASTLE HALLWAY BACK</>! Room added to <c>MAP</>!" };
		ch2_seen_room_12 = true;
	} else {
		show serial_dialog { "Entering <bold>CASTLE HALLWAY BACK</>..." };
	}

	// room unique stuff
	if (ch2_installed_needle || ch2_carrying_needle) {
		copy!(ch2_hide_needle)
	}
	
	// initialize everything
	copy!(ch2_map_init)

	// check if you do the cutscene or not
	if (!ch2_cutseen_castle12) {
		show dialog {
			Concierge "Welcome!"
		};
		interrupt = true;
		ch2_cutseen_castle12 = true;
	}
}

/* ---------- ON_TICK ---------- */

on_tick_ch2_castle_12 {}
on_tick_ch2_castle_12_postgame {
	if (player intersects geometry "south-hitbox") {
		copy!(on_exit_ch2_castle_12)
		warp_state = "walk_from-north";
		copy!(ch2_load_castle_11_special)
	} else if (player intersects geometry "north-hitbox") {
		copy!(on_exit_ch2_castle_12)
		warp_state = "walk_from-south";
		copy!(ch2_load_castle_13_special)
	} else if (player intersects geometry "east-hitbox") {
		copy!(on_exit_ch2_castle_12)
		warp_state = "walk_from-west";
		copy!(ch2_load_castle_31_special)
	}
}

/* ---------- EXIT STUFF ---------- */

on_exit_ch2_castle_12 { // sanitize ch2 room state
	ch2_in_room = 0;
}

// SERIAL: go

on_go_castle_12_north {
	copy!(on_exit_ch2_castle_12)
	copy!(warping_out_fade_out)
	copy!(ch2_load_castle_13_special)
}
on_go_castle_12_east {
	copy!(on_exit_ch2_castle_12)
	copy!(warping_out_fade_out)
	copy!(ch2_load_castle_31_special)
}
on_go_castle_12_south {
	copy!(on_exit_ch2_castle_12)
	copy!(warping_out_fade_out)
	copy!(ch2_load_castle_11_special)
}

/* ---------- ENTITIES ---------- */

interact_ch2_guestbook {
	interrupt = false;
	if (!ch2_guestbook_signed) {
		if (!interrupt3) {
			show dialog {
				PLAYER "Huh? It's just a book with a bunch of people's names."
				Concierge "Oh, yes! Do sign our guest book before you go!"
			};
			interrupt3 = true;
		}
		show dialog {
			name "" "(Sign the guest book?)"
			> "Yes" = interact_ch2_guestbook_signyes
			> "No" = interact_ch2_guestbook_signno
		};
	} else {
		show dialog {
			PLAYER "There's my name, logged for the ages."
			Concierge "Thank you for signing the guest book! I hope you enjoy the remainder of your stay!"
		};
	}
}
interact_ch2_guestbook_signyes {
	show dialog {
		PLAYER "All right, here I go."
		name "" "(scribble scribble scribble)"
		Concierge "Thank you for signing!"
	};
	ch2_guestbook_signed = true;
	self on_interact = interact_ch2_guestbook;
}
interact_ch2_guestbook_signno {
	show dialog {
		PLAYER "Maybe later."
	};
	self on_interact = interact_ch2_guestbook;
}

ch2_stereo_fix_proposal {
	show dialog ch2_stereo_fix_proposal {
		PLAYER "Um, about that phonograph. I actually need to borrow the needle for something."
		Concierge "Hmm? Whatever for?"
		PLAYER "It'll help me fix the castle. Trust me."
		Concierge "I could not in good conscience leave this room bereft of welcome music. But, perhaps...."
		"You say you are going to fix the castle, therefore you must be the fixing type."
		"Might you be able to fix that stereo behind me, perhaps? Were it repaired, I would have no need of this phonograph or its needle."
		PLAYER "Fix the stereo? I can take a look."
	};
	ch2_ws_backstory = true;
	ch2_needle_firstlook = true;
}

interact_ch2_concierge {
	if (!ch2_concierge_backstory) {
		if (interrupt) {
			show dialog {
				PLAYER "Welcome?"
				Concierge "Yes, welcome to King Gibson's castle. I do hope you enjoy your visit!"
			};
		} else {
			show dialog {
				Concierge "Welcome to King Gibson's castle. I do hope you enjoy your visit!"
			};
		}
		show dialog {
			PLAYER "Um, thanks. Listen, I know things are messed up right now...."
			Concierge "Fear not! I am confident everyone is working to clear the doors and restore the intercom system."
			"You, at least, seem to have overcome the door problem on your own, and should be applauded for your resourcefulness."
			"You have my full support -- though alas, the best I can do to help is keep this phonograph turning."
			"You'll have moral support music, if nothing else!"
		};
		ch2_concierge_backstory = true;
		if (ch2_storyflag_round >= 2) {
			copy!(ch2_stereo_fix_proposal)
			ch2_ws_backstory = true;
		}
	} else if (ch2_storyflag_round < 2 || ch2_needle_permission) {
		if (!ch2_needle_permission) {
			show dialog ch2_trying_times { //reused
				Concierge "In trying times, we may find ourselves with limited resources or a constrictive environment."
				"How admirable it is to acquire and leverage one's limited resources and perform great work anyway! I'll be cheering you on from here. Good luck!"
			};
		} else {
			if (ch2_carrying_needle || ch2_installed_needle) {
				show dialog ch2_trying_times;
			} else {
				show dialog ch2_needle_prompt; // defined when concierge is originally surprised
			}
		}
	} else {
		if (ch2_ws_won) {
			copy!(ch2_ws_cutscene)
		} else if (!ch2_ws_backstory) {
			copy!(ch2_stereo_fix_proposal)
		} else {
			show dialog {
				Concierge "Go on, now. I'll let you have the needle off this phonograph is you get the stereo working again. It's the black thing behind me."
			};
		}
	}
}
interact_ch2_concierge_end {
	show dialog {
		Concierge "King Gibson's castle is now under (mostly) normal operation! Please enjoy your stay!"
	};
}

/* ---------- NEEDLE (ADMIN) ---------- */

ch2_hide_needle {
	entity phonograph secondary_id = 0;
}

ch2_touch_needle {
	interrupt = false;
	if (ch2_carrying_needle || ch2_installed_needle) {
		show dialog {
			PLAYER "Too bad the record won't work as a plate for the hard drive. It's the perfect size."
		};
		return;
	}
	if (!interrupt2) {
		if (!ch2_needle_firstlook) {
			show dialog {
				PLAYER "That's a funny looking trumpet."
				Concierge "It mechanically amplifies the vibrations captured by the needle upon the vinyl record."
				"I dusted it off after the earthquake damaged the intercom system and the stereo. I couldn't bear how quiet it was in here."
			};
			ch2_needle_firstlook = true;
		} else {
			show dialog {
				PLAYER "Definitely an old-timey look, isn't it?"
				Concierge "If you like this, you should see King Gibson's bedroom."
			};
		}
	}
	if (ch2_storyflag_round >= 2) {
		if (ch2_needle_permission) {
			show dialog {
				name "" "(Pick up the phonograph needle?)"
				> "Yes" = ch2_touch_needle_yes
				> "No" = ch2_touch_needle_no
			};
		} else {
			if (!ch2_ws_backstory) {
				show dialog {
					PLAYER "(Will the concierge get mad at me if I take the needle from this record player? I guess I should ask.)"
				};
			} else {
				show dialog {
					PLAYER "(I can have the needle off the phonograph once I fix the stereo. I better get on that.)"
				};
			}
		}
	}
}

ch2_touch_needle_yes {
	show dialog {
		name "" "(You pick up the needle!)"
	};
	copy!(ch2_hide_needle)
	copy!(ch2_pickup_needle)
	interrupt2 = false;
	self on_interact = ch2_touch_needle;
}
ch2_touch_needle_no {
	show dialog {
		PLAYER "Maybe later, then."
	};
	self on_interact = ch2_touch_needle;
}

/* ---------- WORD SEARCH (non-auto generated stuff) ---------- */

 // make sure these are the same as in the auto one
$toWin = 20;
$miss = 4;
$cheat = 5;

serial_dialog ch2_ws_rowstart { "<r>" }
serial_dialog ch2_ws_col { "</>   " }

ch2_ws_doturn {
	show serial_dialog spacer;
	copy!(ch2_ws_count_flags)
	show serial_dialog {
		wrap 100
		"                          <bold>WORD SEARCH!</>"
		"Find words meaningful to the stereo system to cut through its amnesia."
		"         Type a word! (or type Q to quit)            <y>Pts to win: $ch2_ws_flags_tally$/20</>"
	};
	copy!(ch2_ws_draw_map)
	copy!(ch2_ws_turn_message)
	show serial_dialog ch2_ws_input;
	// if you didn't trigger one of the defined inputs, it counts as a miss:
	ch2_ws_turn_value = 0;
	ch2_ws_turn_status = $miss;
	goto ch2_ws_doturn;
}
include "header.mgs";

// QUIT

ch2_ws_guess_quit {
	ch2_ws_turn_value = 0;
	ch2_ws_turn_status = 0;
	copy!(ch2_ws_count_flags)
	show serial_dialog spacer;
	if (ch2_ws_flags_tally == 0) {
		show serial_dialog {
			"<y>STEREO</>: All done for now? Well, thanks for taking a look."
		};
	} else if (ch2_ws_flags_tally < $toWin) {
		diff = $toWin;
		diff -= ch2_ws_flags_tally;
		if (diff == 1) {
			show serial_dialog {
				"<y>STEREO</>: Oh oh oh, so close! I bet I only need <y>one more</> word before everything comes together! Try again soon, would ya?"
			};
		} else {
			show serial_dialog {
				"<y>STEREO</>: Done for now? Okay, thanks for trying."
				"\tOh, you know what? I bet if you found <y>$diff$</> more words, I'd be as right as rain. Try again later, if you would?"
			};
		}
	} else if (ch2_ws_won) {
		show serial_dialog {
			"<y>STEREO</>: Hey! Thanks for helping me remember who I am! Good luck out there!"
		};
	} else {
		ch2_ws_won = true;
		// todo: make this happen if you talk to the concierge or whatever. Maybe make it so any badge button press will trigger the ws quit behavior, too?
		show serial_dialog {
			"<y>STEREO</>: Oh! Oh! Oh! Goodness! I think you've done it! I <bold>remember!</> I'm a <bold><y>STEREO SYSTEM</>! Hey, check this out! There's music inside me! LET'S GOOOOO!"
			" "
			# "Good for you!" = ch2_ws_cutscene
		};
	}
	entity stereo on_interact = ch2_stereo_interact;
}

ch2_ws_cutscene {
	show serial_dialog spacer;
	show dialog {
		Concierge "Oh! Oh! I can hear it! The old, reliable stereo is back in business!"
	};
	show dialog ch2_needle_prompt { // reused as a reminder
		Concierge "Go ahead and take the needle off that phonograph. Many thanks!"
	};
	interrupt2 = true;
	ch2_needle_permission = true;
	entity stereo on_interact = ch2_stereo_interact;
}

ch2_stereo_interact {
	interrupt = false;
	if (!ch2_ws_backstory) {
		show dialog { PLAYER "A CD player or something? Looks half damaged." };
	} else if (!ch2_stereo_backstory) {
		show dialog {
			PLAYER "?"
			"Oh, there's a place where the artifact can plug into it."
		};
		goto ch2_stereo_intro1;
	} else {
		show dialog { PLAYER "All right, plugging in the artifact again." };
		goto ch2_ws_doturn;
	}
}

ch2_stereo_intro1 {
	show serial_dialog spacer;
	show serial_dialog {
		"<y>STEREO</>: Huh? Is there someone there? I-I think I hear a voice!"
		" "
		# "Hello." = ch2_stereo_intro2a
		# "Howdy." = ch2_stereo_intro2b
		# "Ahoy." = ch2_stereo_intro2c
	};
}

ch2_stereo_intro2a {
	show serial_dialog spacer;
	show serial_dialog { "<c>YOU</>: Hello. Are you okay?" };
	goto ch2_stereo_intro2;
}
ch2_stereo_intro2b {
	show serial_dialog spacer;
	show serial_dialog { "<c>YOU</>: Howdy. Are you okay?" };
	goto ch2_stereo_intro2;
}
ch2_stereo_intro2c {
	show serial_dialog spacer;
	show serial_dialog { "<c>YOU</>: Ahoy. Are you okay?" };
	goto ch2_stereo_intro2;
}

ch2_stereo_intro2 {
	show serial_dialog {
		" "
		"<y>STEREO</>: Sure! Um, maybe? I can't remember. I think I might be hurt. Last thing I remember was some shaking, then a thud. But I can't remember who I am or what I'm doing here. Other than that, I'm doing great."
		" "
		# "You have amnesia?" = ch2_stereo_intro3
	};
}
ch2_stereo_intro3 {
	show serial_dialog spacer;
	show serial_dialog {
		"<c>YOU</>: You have amnesia?"
		" "
		"<y>STEREO</>: I don't know. Would I remember if I had amnesia?"
		" "
		# "You're a stereo system. You're supposed to play music." = ch2_stereo_intro4
	};
}
ch2_stereo_intro4 {
	show serial_dialog spacer;
	show serial_dialog {
		"<c>YOU</>: You're a stereo system. You're supposed to play music."
		" "
		"<y>STEREO</>: I don't know what that stuff is. My mind is all jumbled up. Let's see... can you get any closer? I'm on the cusp of understanding what you're talking about, but I need a little help."
		" "
		# "Help like what?" = ch2_stereo_intro5
	};
}
ch2_stereo_intro5 {
	ch2_stereo_backstory = true;
	show serial_dialog spacer;
	show serial_dialog {
		"<c>YOU</>: Help like what?"
		" "
		"<y>STEREO</>: Can you dig through my mind and help me find the right words? The words I need to remember? They're all mixed up, top to down, left to right... and maybe diagonal."
		"\tHere. I'll just show you:"
		" "
		# "(Get closer)" = ch2_ws_doturn
	};
}

"on_load-bobsclub1" {
	if ("tuesdayd") {
		command "rtfm" = "command-rtfm";
	}
	if (!"storyflag-bobmoss") {
		entity "Bob Moss" position = geometry "bobsclub-hidingplace";
		entity "Bob Moss" name = " ";
		entity "Bob Moss" on_interact = "null_script";
		entity "Bob Moss" type = "exa";
	}
	if (!"bobsclub-entered") {
		goto "show_dialog-bobsclub"; // JUMP: Bob's club entrance cutscene
	}
}

"show_dialog-bobsclub" {
	player_control = off;
	player position -> geometry "bob_path" origin over 500ms;
	wait 800ms;
	show dialog {
		name "????"
		"Oh, hello. You must be here for the annual Bobs-Only Party, right?"
	};
	player position -> geometry "bob_path" length over 3500ms;
	player direction = entity "Guardian Bob";
	entity "Guardian Bob" direction = player;
	wait 100ms;
	show dialog {
		entity "Guardian Bob"
		"Well, I hate to tell you this, but it's canceled this year."

		PLAYER "What? Canceled?"

		entity "Guardian Bob"
		"Yeah. This time, for real."
		"I mean, every year they SAY its canceled, but this time it's actually genuinely canceled."

		entity "Strong Bad"
		"Wait, canceled?!"
	};
	wait 300ms;
	camera -> geometry "strongbad_camera" origin over 1200ms;
	wait 150ms;
	player direction = entity "Strong Bad";
	wait 200ms;
	entity "Guardian Bob" direction = entity "Strong Bad";
	wait 100ms;
	show dialog {
		entity "Strong Bad" alignment TL
		"But what about all the ladies?!"

		PLAYER alignment TR
		"Ladies? I'm pretty sure Bob is a masculine name, traditionally."

		entity "Strong Bad" alignment TL
		"Nuh-uh!"
		"What about Bob... rietta? Bob... velyn?"
		"Barbara? I mean, Bob-ara?"
		"They're still gonna come to the party, aren't they?"

		PLAYER alignment TR
		"Sorry, dude! Not if the party's canceled."
		"...Also not if none of them are named Bob."

		entity "Strong Bad" alignment TL
		"Sure, they'll come! I just gotta wait a little more!"

		PLAYER alignment TR
		"I think you came to the wrong party."
	};
	wait 200ms;
	camera -> player position over 700ms;
	wait 200ms;
	entity "Guardian Bob" direction = south;
	show dialog {
		entity "Guardian Bob"
		"Well, this place should be full of Bobs... next year."
	};
	copy!("begin-flail")
	show dialog {
		entity "Strong Bad"
		"Bob-alina!\nBob-cine!\nBob-quelyn!\nCome baaaack!"
	};
	copy!("end-flail")
	player_control = on;
	"bobsclub-entered" = true;
	if (!"baker-backstory") {
		goto "null_script"; // end it here
	}
	player direction = entity "Guardian Bob";
	entity "Guardian Bob" direction = player;
	show dialog {
		PLAYER
		"So I guess I can tell the baker to cancel the donut order then, huh?"

		entity "Guardian Bob"
		"Guess so. Sorry about this."
	};
}

"show_dialog-bobmoss-start" {
	copy!("face-player")
	if (self glitched) {
		copy!("show_dialog-bobmoss-deglitch")
		self on_interact = "show_dialog-bobmoss-start";
	}
	if ("storyflag-bobmoss") {
		goto "show_dialog-bobmoss-start-s";
	}
	show dialog {
		SELF "Oh, hello, there."
	};
	entity "Bob Moss" on_tick = "spin_self_clockwise";
	show dialog {
		SELF "I was just admiring the forest, with its happy little trees...."
		"I've made so many squirrel friends, and...."
	};
	entity "Bob Moss" on_tick = "null_script";
	copy!("face-player")
	show dialog {
		SELF "Oh!"
		"I didn't realize how late it was getting. I think I might be late for work."
		"I'd better head out. Hope to see you again."
	};
	player_control = off;
	camera fade out -> #000000 over 500ms;
	entity "Bob Moss" position = geometry "catwalk-hide";
	"storyflag-bobmoss" = true;
	copy!("calculate-hint-tracking-series")
	if ("hint-tracking-check" == 3) {
		// if the hint series is the same, reset hint
		copy!("set-hint-none")
	}
	camera fade in -> #000000 over 500ms;
	player_control = on;
}

"show_dialog-verthandi-start" {
	copy!("face-player")
	if (self glitched) {
		goto "show_dialog-verthandi-glitched"; // JUMP
	}
	if ("storyflag-verthandi") {
		show dialog { SELF "Thank you for everything you've done!" };
	} else {
		// find unglitch count
		"unglitch_count" = 0;
		if ("goldfish-unglitched") { "unglitch_count" += 1; }
		if ("timmy-unglitched") { "unglitch_count" += 1; }
		if ("fountain-unglitched") { "unglitch_count" += 1; }
		if ("lodge_cat-unglitched") { "unglitch_count" += 1; }
		if ("billy-unglitched") { "unglitch_count" += 1; }
		if ("kid-unglitched") { "unglitch_count" += 1; }
		if ("main_hamster-unglitched") { "unglitch_count" += 1; }
		"total_glitches" = 7;
		"total_glitches" -= "unglitch_count";
		// use unglitch count
		if ("total_glitches" == 0) {
			if (!"verthandi-backstory") {
				show dialog {
					SELF "Oh! It appears you've already restored everyone that was glitched!"
					"How wonderful! I can't thank you enough!"
				};
			} else {
				show dialog {
					SELF "You've restored everyone! Oh, how wonderful!"
					"Oh, thank you, %PLAYER%!"
				};
			}
			copy!("calculate-hint-tracking-series")
			if ("hint-tracking-check" == 11) {
				copy!("set-hint-none")
			}
			"storyflag-verthandi" = true;
			"goats-both-unglitched" = true;
		} else if ("verthandi-backstory") {
			if ("goats-both-unglitched") {
				if ("total_glitches" == 1) {
					show dialog { SELF "I hear one more glitched soul that needs help!" };
				} else {
					show dialog { SELF "I can hear the cries of $total_glitches$ glitched souls...." };
				}
				if (!"timmy-unglitched" || !"lodge_cat-unglitched") {
					show dialog { SELF "Perhaps... somewhere in the library?" };
				} else if (!"main_hamster-unglitched" || !"fountain-unglitched") {
					show dialog { SELF "Perhaps... somewhere outdoors?" };
				} else if (!"goldfish-unglitched") {
					show dialog { SELF "Perhaps... somewhere in your home?" };
				}
			} else if (entity "Billy" glitched || entity "Kid" glitched) {
				show dialog { SELF "Oh, won't you help the baby goats?" };
			} else {
				show dialog {
					SELF "You've restored the baby goats! Oh, thank you!"
					"But I still hear cries for help elsewhere in town. Please, can you help?"
				};
				"goats-both-unglitched" = true;
			}
			copy!("set-hint-glitch")
		} else {
			show dialog {
				SELF "Some time ago, the Big Bad brought chaos to this place."
				"To amuse himself, he scrambled the outward appearance of many of the people, animals, and objects around town."
			};
			if (entity "Billy" glitched || entity "Kid" glitched) {
				show dialog {
					SELF "These dear baby goats were among his many victims."
					"They are so young, and so full of life.... yet you cannot even hear their cheerful bleats!"
					"You have been blessed with the power to undo what had been done to them. Would you please help them?"
				};
			} else {
				show dialog {
					SELF "These dear baby goats are back to normal, but I still hear cries for help elsewhere in town."
					"There is more to unglitch! Please, will you set things right?"
				};
				"goats-both-unglitched" = true;
			}
			"verthandi-backstory" = true;
			copy!("set-hint-glitch")
		}
	}
	goto "show_dialog-verthandi-wrapup";
}

"on_load-map-main" {
	if ("tuesdayd") {
		command "rtfm" = "command-rtfm";
	}
	// if you haven't started ch1 yet
	if (!"begunthegame") {
		"begunthegame" = true;
		hex_control = off;
		camera fade in -> #000000 over 1ms; 
		load map "magehouse";
	}
	// assuming you have ring zero
	hex_control = on;
	if ("storyflag-bobmoss") {
		entity "Bob Moss" position = geometry "catwalk-hide";
	} 
	if ("storyflag-rake") {
		copy!("rake-in-lake")
		entity "Goose" on_interact = "honk-to-make-rake-float";
	}
	if ("billy-unglitched") {
		entity "Billy" glitched = false;
	}
	if ("kid-unglitched") {
		entity "Kid" glitched = false;
	}
	if ("fountain-unglitched") {
		entity "Fountain" glitched = false;
	}
	if ("main_hamster-unglitched") {
		entity "Hamster" glitched = false;
	}
	if ("storyflag-shepherd") {
		copy!("sheep-in-pen")
	}
	if ("storyflag-bender") {
		copy!("bender-happybutt")
	}
	if (!"walked-to-lodge") {
		goto "walk-to-lodge";
	}
	player_control = off;
	if (!"hintman-explanation") {
		player position -> geometry "enter_from-lodge" length over 400ms; 
		copy!("hintman-cutscene") // see script-elders.json for this
		"hintman-explanation" = true;
	} else if (warp_state == "enter_from-east") {
		player position -> geometry "enter_from-east" length over 1000ms; 
	} else if (warp_state == "enter_from-west") {
		player position -> geometry "enter_from-west" length over 1000ms; 
	} else if (warp_state == "exit_from-bobsclub") {
		player position -> geometry "enter_from-bobsclub" length over 200ms; 
	} else if (warp_state == "exit_from-bakery") {
		player position -> geometry "enter_from-bakery" length over 200ms; 
	} else if (warp_state == "exit_from-lodge") {
		player position -> geometry "enter_from-lodge" length over 200ms; 
	} else if (warp_state == "exit_from-greenhouse") {
		player position -> geometry "enter_from-greenhouse" length over 200ms; 
	} else if (warp_state == "exit_from-magehouse") {
		player position -> geometry "enter_from-magehouse" length over 200ms; 
	} else if (warp_state == "exit_from-oldcouplehouse") {
		player position -> geometry "enter_from-oldcouplehouse" length over 200ms; 
	} else if (warp_state == "exit_from-family") {
		player position -> geometry "enter_from-family" length over 200ms; 
	} else if (warp_state == "exit_from-woprhouse") {
		player position -> geometry "enter_from-woprhouse" length over 200ms; 
	} else if (warp_state == "exit_from-credits") {
		player position = geometry "from-credits-spot";
		camera fade in -> #000000 over 800ms;
		player_control = on;
		if (!"ch1_finished") {
			goto "null_script";
		}
		if (!"storyflag-catwork") {
			goto "null_script";
		}
		if (!"storyflag-shepherd") {
			goto "null_script";
		}
		if (!"storyflag-bender") {
			goto "null_script";
		}
		if (!"storyflag-baker") {
			goto "null_script";
		}
		if (!"storyflag-bobmoss") {
			goto "null_script";
		}
		if (!"storyflag-bea1") {
			goto "null_script";
		}
		if (!"storyflag-trekkie") {
			goto "null_script";
		}
		if (!"storyflag-sportskid") {
			goto "null_script";
		}
		if (!"storyflag-bea2") {
			goto "null_script";
		}
		if (!"storyflag-rake") {
			goto "null_script";
		}
		if (!"storyflag-verthandi") {
			goto "null_script";
		}
		if ("demobonus-jackob-informed") {
			goto "null_script";
		}
		"demobonus" = true;
		// ^^ set now because all story flags and credits confirmed true; use this flag for same check hereafter
		show dialog {
			Jackob "While you were gone, I saw an odd flash of light coming from the library."
			"You might want to investigate."
		};
		"demobonus-jackob-informed" = true;
	}
	player_control = on;
}

"show_dialog-bea-part1" {
	if (!"storyflag-bea1") { // you did NOT beat part1
		if (entity "Delmar" type == "old_man") { // win condition met
			// currently no backstory/!backstory difference
			player_control = off;
			copy!("clear-own-tick")
			copy!("slow-stare-at-delmar")
			player_control = on;
			show dialog {
				SELF "Oh, %Delmar%, it's you! You're a man again! At last!"
				Delmar "Whazzat, %Beatrice%? Something seems different."
				SELF "Oh, it's my %Delmar%! Thank you, %PLAYER%!"
			};
			self direction = entity "Delmar";
			copy!("calculate-hint-tracking-series")
			if ("hint-tracking-check" == 4) {
				copy!("set-hint-none")
			}
			"bea1-backstory" = true;
			"storyflag-bea1" = true;
		} else { // win condition NOT met
			if (!"bea1-backstory") { // you did NOT hear the backstory
				if (entity "Delmar" type == "sheep "|| entity "Delmar" type == "helga") { // is sheep
					show dialog {
						SELF "Forty years ago, things were sure different."
						"I was a lot younger then, and my husband, %Delmar%...."
					};
					copy!("clear-own-tick")
					copy!("slow-stare-at-delmar")
					show dialog { SELF "My husband was a real man! Not a farm animal!" };
					copy!("slow-stare-at-player")
					player_control = on;
				} else { // is rando
					copy!("clear-own-tick")
					copy!("slow-stare-at-delmar")
					show dialog { SELF "Oh, %Delmar%! You're... oh...." };
					copy!("face-player")
					show dialog {
						SELF "Oh, goodness. Well, this isn't my %Delmar%, but I suppose it's nice he's not a sheep anymore, at least."
						"He's been a sheep for so long... well, I suppose it's been forty years."
					};
				}
				show dialog { // is sheep OR rando
					SELF "That ghastly hacker ruffian hacked him into a sheep on a whim!"
					"%Delmar% didn't even do anything to him!"
					"...Other than insult his character, and that of his mother."
					"...And eat his lunch."
					"...And cut his brake line."
					"The point is, child, that %Delmar%'s been stuck as a sheep ever since!"
					"But you, now that you have Ring Zero...."
					"You can make things right again, can't you?"
					"I miss my %Delmar%!"
					PLAYER "Make things right? Well, I can change what he looks like, anyway."
					SELF "That works for me!"
				};
				"bea1-backstory" = true;
			} else { // you DID hear the backstory (sheep or rando)
				show dialog { SELF "Oh, %Delmar%... we'll fix you up real soon!" };
			}
			copy!("set_tick-watch-player")
			copy!("set-hint-bea1")
		}
	} else { // you DID beat part1
		if (entity "Delmar" type == "old_man") {
			show dialog { SELF "Thank you, %PLAYER%!" };
		} else if (entity "Delmar" type == "sheep "|| entity "Delmar" type == "helga") {
			show dialog {
				SELF "Oh! That's a nasty trick, %PLAYER%!"
				"How could you?"
				"Although... I sort of get the feeling he'll be back to normal in a few minutes."
			};
		} else {
			show dialog {
				SELF "Oh, %Delmar%, you're... uh...."
			};
		}
	}
	entity "Beatrice" on_interact = "show_dialog-bea-start";
}

"show_dialog-bea-part2" {
	if (!"storyflag-bea2") { // !part2won
		if (entity "Delmar" type == "sheep "|| entity "Delmar" type == "helga") {
			if (!"bea2-backstory") {
				show dialog {
					SELF "Oh! And I was just thinking how I wanted him to become a sheep again!"
					"So gentle... and so quiet!"
					"Thank you, %PLAYER%!"
				};
			} else { // you DID hear the backstory
				show dialog {
					SELF "Thank you, child!"
					"...And, erm, we need not mention this to anyone! You understand?"
				};
			}
			self direction = entity "Delmar";
			copy!("calculate-hint-tracking-series")
			if ("hint-tracking-check" == 9) {
				copy!("set-hint-none")
			}
			"bea2-backstory" = true;
			"storyflag-bea2" = true;
		} else { // not a sheep
			if (entity "Delmar" type == "old_man") {
				if (!"bea2-backstory") {
					show dialog { SELF "...." "You know, I appreciate what you did, %PLAYER%. I really do." };
					copy!("clear-own-tick")
					copy!("slow-stare-at-delmar")
					show dialog { SELF "...." };
					copy!("slow-stare-at-player")
					show dialog {
						SELF "But now I find myself longing for quiet."
						"It was so peaceful, before. %Delmar% and I used to get along so well."
						"And it's so difficult to fall asleep recently."
						"I hate to ask it, child, but...."
						"I can't hear myself think! Please change him back!"
					};
				} else { // you DID hear the backstory
					show dialog {
						SELF "I'm sure he won't mind being a sheep again. In fact, I'm not sure he'll notice."
						"But I sure will! I won't have peace otherwise!"
					};
				}
			} else { // not a sheep nor a man
				show dialog {
					SELF "Oh, um...."
					"Actually, I was hoping he could become a sheep again."
				};
			}
			copy!("set_tick-watch-player")
			"bea2-backstory" = true;
			copy!("set-hint-bea2")
		}
	} else { // part2won
		if (entity "Delmar" type == "sheep "|| entity "Delmar" type == "helga") {
			show dialog {
				SELF "Peace at last!"
			};
		} else if (entity "Delmar" type == "old_man") {
			show dialog {
				SELF "...." "I suddenly have the strangest feeling of deja vu."
			};
		} else {
			show dialog {
				SELF "Well, I suppose we could give this a try instead...."
			};
		}
	}
	entity "Beatrice" on_interact = "show_dialog-bea-start";
}

"ch2-interact-mainframe" {
	if ("ch2-wait-for-hat-touch") {
		player direction = entity "Wizard";
		entity "Wizard" direction = player;
		show dialog {
			PLAYER "Um, how do I get the hex editor to come up again?"
			Wizard "Don't look at me. I don't use touch screens."
			PLAYER "Touch screens?"
			Wizard "Capacitive buttons. Same diff. My little paws don't trigger them right."
			"But there must be some kind of shiny copper surface on your whatsit, right? Try touching it with your finger. That's probably how it's done."
		};
		return;
	} else if ("ch2-carrying-mainframeos") {
		copy!("ch2-install-wizard")
		return;
	} else if ("ch2-installed-mainframeos") {
		show dialog "mainframe-working"; // references above
		return;
	} else if (!"ch2-toot-done") {
		show dialog { PLAYER "What is this hunk of junk?" };
		return;
	}
	"temp" = false;
	// wizard comes up if down
	if (entity "Wizard" current_animation == 0) { // WIZARD IS DOWN
		entity "Wizard" on_tick = "tick-ch2-wizard-ascend-and-watch";
	}
	// normal
	if (!"ch2-installed-heatsink") {
		if ("ch2-carrying-heatsink") {
			show dialog {
				name "" "(Now installing... the heat sink!)"
				"(Or you would, but you can't install it until the CPU is in place. You set it aside for now.)"
			};
			"temp" = true;
			copy!("ch2-install-heatsink")
		}
	}
	if (!"ch2-installed-powersupply") {
		if ("ch2-carrying-powersupply") {
			show dialog {
				name "" "(Now installing... the power supply!)"
				"(2 kW may be overkill, but better safe than sorry.)"
			};
			"temp" = true;
			copy!("ch2-install-powersupply")
		}
	}
	if (!"ch2-installed-monitor") {
		if ("ch2-carrying-monitor") {
			show dialog {
				name "" "(Now installing... the monitor!)"
				"(...Or rather, it's now plugged into the back. That one was easy!)"
			};
			"temp" = true;
			copy!("ch2-install-monitor")
		}
	}
	// abstract
	if (!"ch2-installed-harddrive") {
		if ("ch2-carrying-harddrive") {
			show dialog {
				name "" "(Now installing... the hard drive!)"
				"(What's the read head going to be? Will this work?!)"
			};
			"temp" = true;
			copy!("ch2-install-harddrive")
		}
	}
	if (!"ch2-installed-keyboard") {
		if ("ch2-carrying-keyboard") {
			show dialog {
				name "" "(Now installing... the keyboard!)"
				"(Good thing the keytar can connect over USB, or this wouldn't have worked.)"
			};
			"temp" = true;
			copy!("ch2-install-keyboard")
		}
	}
	if (!"ch2-installed-mouse") {
		if ("ch2-carrying-mouse") {
			show dialog {
				name "" "(Now installing... the mouse!)"
				"(...Or at least, installing the dongle.)"
			};
			"temp" = true;
			copy!("ch2-install-mouse")
		}
	}
	// desperate
	if (!"ch2-installed-ramchips") {
		if ("ch2-carrying-ramchips") {
			show dialog {
				name "" "(Now installing... the RAM chips!)"
				"(The RAM chips went in with a terrifying SNAP, but they seem snug now. You better wash your hands, though.)"
			};
			"temp" = true;
			copy!("ch2-install-ramchips")
		}
	}
	if (!"ch2-installed-clock") {
		if ("ch2-carrying-clock") {
			show dialog {
				name "" "(Now installing... the grandfather clock!)"
				"(Somehow, that enormous, analog relic works great for a system clock.)"
			};
			"temp" = true;
			copy!("ch2-install-clock")
		}
	}
	if (!"ch2-installed-cpu") {
		if ("ch2-carrying-cpu") {
			show dialog {
				name "" "(Now installing... the CPU!)"
				"(Now the mainframe can compute! And... blow bubbles?)"
			};
			"temp" = true;
			copy!("ch2-install-cpu")
		}
	}
	// final
	if (!"temp") { // no components were installed
		show dialog {
			name "" "(You don't have any new components to install.)"
		};
	} else {
		"temp" = false;
		show dialog { PLAYER "That's all for now." };
		copy!("ch2-count-flags")
		// the below are separate scripts so that multiple things can trigger them
		// (^^ should this be the case?) (todo: determine this)
		if ("ch2-storyflags-tally" == $goto_round_2) {
			copy!("ch2-start-round-2")
		} else if ("ch2-storyflags-tally" == $goto_round_3) {
			copy!("ch2-start-round-3")
		} else if ("ch2-storyflags-tally" == $goto_round_4) {
			copy!("ch2-start-round-4")
		}
	}
}

"ch2-serial-light-manager-mouse" {
	if (!"ch2-mousegame") {
		goto "ch2-serial-light-manager";
	}
}

"on_load-ch2-bakery" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>BAKERY</>..." };
	// The part of Aunt Zippy is being played by Jackob
	if (
		"ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" == 4
	) {
		if ("ch2-storyflag-round" == 3) {
			entity "Jackob" position = geometry "zippy-spot1";
		} else if ("ch2-storyflag-round" == 4) {
			entity "Jackob" position = geometry "zippy-spot2";
		}
		entity "Jackob" name = "Aunt Zippy";
		entity "Jackob" on_look = "look-ch2-zippy";
		entity "Jackob" on_tick = "null_script";
		entity "Jackob" on_interact = "interact-ch2-zippy";
		entity "Jackob" type = "lightning_boy";
		entity "Jackob" direction = north;
	} else if ("ch2-storyflag-round" != 2) {
		entity "Jackob" on_tick = "yeet";
	}
	// All the rest
	copy!("ch2-map-init")
}

"on_load-ch2-magehouse-birthday" {
	hex_control = on;
	player_control = off;
	if (debug_mode) {
		serial_control = on;
		command "skip" = "cutscene-ch2-birthday-exit"; // this shows up twice if put first in the script O.o
		show serial_dialog {
			" "
			"<y>DEBUG></> <c>SKIP</>: skip this cutscene"
		};
	} else {
		serial_control = off;
	}
	hex_editor = close;
	player current_animation = 0;
	camera fade out -> #000000 over 0ms;
	player direction = east;
	camera = geometry "cake-camera-1";
	entity "Stunt Cake" current_animation = 1;
	wait 1000ms;
	camera fade in -> #000000 over 1000ms;
	wait 500ms;
	show dialog {
		name " " // blank dialog label
		border_tileset transparent
		"Happy birthday to you!\nHappy birthday to you!"
		"Happy birthday, dear %PLAYER%!\nHappy birthday to you!"
	};
	wait 200ms;
	entity "Stunt Cake" animation -> 2 once;
	entity "Stunt Cake" current_animation = 3;
	camera fade out -> #000000 over 0ms;
	camera = geometry "cake-camera-2";
	camera fade in -> #000000 over 500ms;
	show dialog {
		ZIPPY "Now you're an official mage, %PLAYER%!"
		PLAYER "Blowing out the candle didn't make me a mage, %Aunt Zippy%!"
		ZIPPY "Well, you're officially sixteen now!"
		PLAYER "I'm pretty sure I officially turned sixteen at midnight last night."
		ZAPPY "Well, you're officially our favorite birthday mage!"
		PLAYER "Aw, thanks, %Uncle Zappy%!"
		ZIPPY "All right, everyone! Dig in!"
	};
	camera fade out -> #000000 over 500ms;
	entity "Cake" current_animation = 4;
	show dialog {
		name " "
		border_tileset menu
		"*munch munch munch*"
	};
	camera fade in -> #000000 over 1000ms;
	show dialog {
		ZAPPY
		"How was your day, %PLAYER%? Are you getting used to Ring Zero?"

		PLAYER
		"Yeah, today was pretty wild. I went around town and fixed a lot of the stuff the Big Bad had ruined."
		"I changed the color of some ether nettle blossoms, teleported some sheep, and impersonated a cat!"
		"Oh, and I changed my name to Bob and drank some Cactus Cooler with a stone golem."

		ZIPPY "I love that the water feature in the center of town is unglitched again. It really feels like old times."
		ZAPPY "But then that earthquake hit. That was like old times, too."

		PLAYER
		"Yeah, that was scary."
		"I guess it's a sign that the Big Bad might be coming back."
	};
	wait 180ms;
	player direction = south;
	wait 400ms;
	show dialog {
		PLAYER "First thing tomorrow, I'm supposed to meet the village elders and visit the castle."
		ZAPPY "They're really sending you to get the artifacts, then?"
	};
	player direction = east;
	show dialog {
		PLAYER
		"I guess so. The village elders say the artifacts are the only thing that can stop the Big Bad for good."

		ZIPPY
		"It's a lot to ask a sixteen year old, but if Ring Zero chose you...."
		"Well, perhaps you're exactly the right mage for the job."

		ZAPPY
		"In which case we'd best get to bed soon. You'll need a good night's rest."

		PLAYER
		"Yeah."
		"Good night, %Aunt Zippy%, %Uncle Zappy%."
	};
	camera fade out -> #000000 over 1200ms;
	wait 200ms;
	goto "cutscene-ch2-birthday-exit";
}

"ch2-escort-cutscene" {
	if (debug_mode) {
		serial_control = on;
		command "skip" = "cutscene-ch2-escort-exit";
		show serial_dialog {
			" "
			"<y>DEBUG></> <c>SKIP</>: skip this cutscene"
		};
	} else {
		serial_control = off;
	}
	camera fade out -> #000000 over 0ms;
	player_control = off;
	hex_editor = close;
	entity "Alfonso" position = geometry "birthday-alfonso";
	entity "Bert" position = geometry "birthday-bert";
	entity "Jackob" position = geometry "birthday-jackob";
	entity "Alfonso" direction = north;
	entity "Bert" direction = north;
	entity "Jackob" direction = north;
	camera = geometry "escort-camera";
	camera fade in -> #000000 over 1000ms;
	player direction = south;
	wait 800ms;
	player position = geometry "walk_from-magehouse";
	player position -> geometry "walk_from-magehouse" length over 400ms;
	wait 1200ms;
	show dialog {
		PLAYER "Oh, um...."
		Alfonso "The time has come to tackle the first challenge, %PLAYER%."
		PLAYER "Yeah."
		Alfonso "Ready to go?"
		PLAYER "Yeah. I mean, no. I mean...."
	};
	wait 150ms;
	player on_tick = "look-left-and-right-fast";
	wait 300ms;
	show dialog {
		PLAYER "Wait, weren't you supposed to bring me a book this morning? A book about the cereal castle?"
	};
	player on_tick = "null_script";
	player direction = south;
	show dialog {
		Jackob
		"The serial castle, yes. We did have a book about that."
		"But... it's gone."

		PLAYER "Gone? You lost the book?"
		Alfonso "No, not lost! It's just missing!"
		PLAYER "But you're in charge of the library! How did you lose a whole book?"
		
		Bert
		"We will keep looking for it. But first you go."
		"More important for you to get started right away."
		
		Alfonso "You have demonstrated incredible competence with what you've already done with Ring Zero, so we are confident you can work your way through the castle on your own."
	};
	wait 100ms;
	player on_tick = "look-left-and-right-fast";
	wait 200ms;
	show dialog {
		PLAYER "On my own? You aren't coming inside with me?"
	};
	player on_tick = "null_script";
	player direction = south;
	show dialog {
		Jackob "We are not hackers and cannot pass the gate."
		Alfonso "Ring Zero should grant you access...."
		PLAYER "\"Should?\""
	};
	wait 150ms;
	entity "Alfonso" direction = south;
	wait 500ms;
	show dialog {
		Alfonso "If I remember correctly...."
		PLAYER "You don't know? What kind of wise old men are you?"
		Jackob "We'll certainly see, won't we?"
	};
	entity "Alfonso" direction = player;
	show dialog {
		PLAYER "That book... what did it say? Can you give me a summary at least?"
	};
	entity "Jackob" on_tick = "gossip-right-down";
	entity "Alfonso" on_tick = "gossip-left-and-right-down";
	entity "Bert" on_tick = "gossip-left-down";
	wait 200ms;
	show dialog {
		Jackob "I must have read it once...."
		Alfonso "Wasn't it something about...?"
		Bert "I don't know."
	};
	wait 500ms;
	entity "Alfonso" on_tick = "null_script";
	entity "Jackob" on_tick = "null_script";
	entity "Bert" on_tick = "null_script";
	wait 100ms;
	entity "Alfonso" direction = north;
	wait 50ms;
	entity "Bert" direction = north;
	wait 40ms;
	entity "Jackob" direction = north;
	show dialog {
		Jackob "I can't remember."
		Alfonso "Something about rooms... and magic words...."
		PLAYER "Ho boy."
		
		Jackob
		"We had hoped that book would give you a leg up, but ultimately, I doubt it was that important, %PLAYER%."
		"Instead you will need to rely on XA, who will be able to provide you with a great deal of information."
		
		PLAYER "Exay?"
		Bert "XA sits just inside. Is robot."
		Alfonso "It literally has insider information about the place."
		
		Jackob
		"I realize it's disappointing that we cannot help you very much in this chapter of your journey as a mage."
		"But we promise you, %PLAYER%, that you will not be entirely on your own."
		"Trust us. You'll be just fine."

		Alfonso "You will not be in danger at any point!"
		Bert "Unless Big Bad comes back."
		Alfonso "Yes! And that is why you must hurry!"
		PLAYER "All right. Let's not waste any more time."
	};
	"ch2-escort-cutscene" = true;
	wait 160ms;
	entity "Jackob" on_tick = "birthday-march-on-own-path";
	wait 180ms;
	entity "Alfonso" on_tick = "birthday-march-on-own-path";
	wait 90ms;
	entity "Bert" on_tick = "birthday-march-on-own-path";
	player on_tick = "birthday-march-on-own-path-player";
}

"on_load-ch2-bobsclub-basement" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>BOB'S CLUB BASEMENT</>..." };
	if (!"ch2-cutseen-bob-party") {
		camera = geometry "gasp-spot";
	} else {
		entity "Guardian Bob" position = geometry "bob-walk2";
		entity "Guardian Bob" on_tick = "loiter-slow";
	}
	copy!("ch2-map-init")
	command "look" + "bob" = "look-ch2-bob";
	if (!"ch2-cutseen-bob-party") {
		copy!("ch2-cutscene-bob-party")
	}
}

"on_load-ch2-bobsclub" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>BOB'S CLUB</>..." };
	// do unique stuff first (but player_control = serial / off first, if you do)
	"ch2-rattle-count" = 0;
	
	copy!("ch2-map-init")

	// DEBUG
	if (debug_mode) {
		command "find" + "cc" = "find-cc";
		command "unfind" + "cc" = "unfind-cc";
		command "want" + "cc" = "want-cc";
		command "unwant" + "cc" = "unwant-cc";
		command "basement" = "basement";
		command "unbasement" = "unbasement";
		command "toot" = "toot";
		command "untoot" = "untoot";
		command "carry" + "cc" = "ch2-pickup-cactuscooler";
		command "uncarry" + "cc" = "ch2-unpickup-cactuscooler";
		command "reset" = "reset";
		show serial_dialog {
			" "
			"<y>DEBUG></> Bob's Club</>"
			"<y>></> <c>FIND CC</>: you found CC in ch1"
			"<y>></> <c>UNFIND CC</>: you didn't find CC in ch1"
			"<y>></> <c>WANT CC</>: you know you want CC"
			"<y>></> <c>UNWANT CC</>: you don't yet know you want CC"
			"<y>></> <c>CARRY CC</>: you have CC on you"
			"<y>></> <c>UNCARRY CC</>: you don't have CC on you"
			"<y>></> <c>BASEMENT</>: you've been to the Bob's Club basement already"
			"<y>></> <c>UNBASEMENT</>: you've haven't been to the Bob's Club basement yet"
			"<y>></> <c>TOOT</>: you've finished Lambda's artifact tutorial already"
			"<y>></> <c>UNTOOT</>: you haven't finished Lambda's artifact tutorial yet"
			"<y>></> <c>RESET</>: set all above flags to false, and set the 'heard a dubstep rattle' to 0"
		};
	}
	// END DEBUG

	// Have NOT been in the basement
	if (!"ch2-cutseen-bob-party") {
		player_control = off;
		if (warp_state != "warped") {
			player position -> geometry "walk-spot" origin over 400ms;
		}
		wait 220ms;
		// Intro words
		if (!"ch2-saw-emptybobroom") {
			player on_tick = "look-left-and-right-fast";
			show dialog {
				PLAYER "Huh? That's weird. Where did everyone go?"
				"And what's that muffled thumping noise?"
			};
			"ch2-saw-emptybobroom" = true;
		} else {
			show dialog {
				PLAYER "Huh. Still empty... apart from that muffled thumping noise."
			};
		}
		copy!("player-look-down")
		// CC followup
		if ("ch2-want-cactuscooler") { // You KNOW you need CC
			if ("ch1-found-cactuscooler") {
				show dialog {
					PLAYER "At least I can grab some Cactus Cooler while I'm here. I know I saw some in the fridge yesterday."
				};
			}
			else {
				show dialog {
					PLAYER "There might be Cactus Cooler around somewhere, though. This place has drinks and stuff, right?"
				};
			}
		}
		else { // You DON'T know you need CC
			show dialog {
				PLAYER "Maybe I should take a look around."
			};
		}
		player_control = on;
	}
	else { // You HAVE been in the basement
		if ("ch2-want-cactuscooler") { // If you know you need CC
			if ( // You've already collected the CC
				"ch2-carrying-cactuscooler"
				|| "ch2-cactuscooler-delivered"
			) {
				// DO NOTHING
			}
			else {
				// REMIND THEM TO GET IT!
				if ("ch1-found-cactuscooler") {
					show dialog {
						PLAYER "Oh, yeah. I found Cactus Cooler in the fridge here yesterday. I should grab some while I'm here."
					};
				}
				else {
					show dialog {
						PLAYER "Oh, right. They had drinks and stuff at the party. I wonder if they'll have a rare soda like Cactus Cooler?"
					};
				}
			}
		}
	}
}

"on_load-ch2-castle-1-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 1;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE ENTRANCE</>..." };

	entity "Wizard" on_interact = "interact-ch2-wizard-mainframedone";
	entity "Wizard" current_animation = 3; // head poking up
	if (warp_state == "raw_game_load-ch2") {
		copy!("restore_player_state")
	} else if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	}
	copy!("ch2-map-init")
	copy!("ch2-player-spawn-click-protection")
}

"on_load-ch2-castle-1" {
	if (warp_state == "ch2 ending") {
		goto "ch2-castle-1-ending";
	}
	// ch2 room state
	"ch2-in-room" = 1;
	"ch2-seen-room-1" = true;

	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE ENTRANCE</>..." };

	// room unique stuff
	if ("ch2-cutseen-bert-secret") {
		entity "Bert" on_tick = "yeet";
		// so his name is blank for when Ring Zero is back
	}

	if ("ch2-ring-zero-enabled-in-castle") {
		entity "Wizard" on_interact = "interact-ch2-wizard-mainframedone";
		entity "Wizard" current_animation = 3; // head poking up
	}
	if ("ch2-has-artifact") {
		entity "Artifact" on_tick = "yeet";
	}
	if (warp_state == "raw_game_load-ch2") {
		copy!("restore_player_state")
	} else if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	} else if (warp_state == "ch2-ending") {
		player position = geometry "mainframe-look-spot";
	}
	if ("ch2-carrying-mainframeos") {
		entity "Wizard" current_animation = 3;
	}
	copy!("ch2-map-init")

	// DEBUG
	if (debug_mode) {
		command "credits" = "debug-ch2-credits";
		command "toot" = "debug-finish-toot";
		command "walk" = "debug-walk";
		command "get" + "monitor" = "ch2-pickup-monitor";
		command "get" + "heatsink" = "ch2-pickup-heatsink";
		command "get" + "cactuscooler" = "ch2-pickup-cactuscooler";
		command "get" + "powersupply" = "ch2-pickup-powersupply";
		command "get" + "keyboard" = "ch2-pickup-keyboard";
		command "get" + "mouse" = "ch2-pickup-mouse";
		command "get" + "harddrive" = "ch2-solder-harddrive";
		command "get" + "plate" = "ch2-pickup-plate";
		command "get" + "needle" = "ch2-pickup-needle";
		command "get" + "ramchips" = "ch2-pickup-ramchips";
		command "get" + "clock" = "ch2-pickup-clock";
		command "get" + "goldfish" = "ch2-pickup-goldfish";
		command "get" + "abacus" = "ch2-pickup-abacus";
		command "get" + "cpu" = "ch2-solder-cpu";
		command "round" + "1" = "debug-get-items-for-round1";
		command "round" + "2" = "debug-get-items-for-round2";
		command "round" + "3" = "debug-get-items-for-round3";
		show serial_dialog {
			" "
			"<y>DEBUG></> this room only"
			"<y>></> <c>TOOT</>: skip tutorial"
			"<y>></> <c>CREDITS</>: roll credits as if you've beaten the game"
			"<y>></> <c>GET _</>: pick up the named item"
			"<y>></> <c>ROUND _</>: collect the items for that round"
			"<y>></> <c>WALK</>: set XA on_interact to do the walk part"
		};
	}
	// END DEBUG
	copy!("ch2-player-spawn-click-protection")
}

"ch2-artifact-walk" {
	player_control = off; // temp (take out of final)
	wait 70ms;
	entity "XA" on_tick = "ch2-camera-to-artifact";
	wait 500ms;
	// a dumbwaiter-esque thing opens
	entity "Artifact" on_tick = "tick-artifact-open";
	wait 400ms;
	player direction = geometry "artifact-look";
	wait 1700ms;
	if (player intersects geometry "artifact-watchbox") {
	} else if (player intersects geometry "artifact-watchdonut") {
		player position -> geometry "artifact-watchpoint" origin over 400ms;
	} else {
		player position -> geometry "artifact-watchpoint" origin over 600ms;
	}
	player direction = geometry "artifact-look";
	wait 444ms;
	show dialog {
		PLAYER "What, over there?"
	};
	player position -> geometry "artifact-approach" origin over 400ms;
	player direction = north;
	wait 1000ms;
	// bling
	entity "Artifact" animation -> 1 once;
	entity "Artifact" current_animation = 3;
	wait 550ms;
	player position -> geometry "artifact-approach" length over 350ms;
	wait 170ms;
	player direction = east;
	wait 700ms;
	player direction = north;
	wait 80ms;
	// walks up to it
	player position -> geometry "artifact-get" origin over 200ms;
	wait 600ms;
	entity "Artifact" on_tick = "yeet";
	// remove artifact
	wait 100ms;
	entity "XA" on_tick = "ch2-camera-from-artifact";
	wait 200ms;
	player position -> geometry "artifact-approach" origin over 600ms;
	wait 300ms;
	player direction = west;
	camera fade out -> $calc over 800ms;
	entity "calc1" animation_frame = 55;
	entity "calc2" animation_frame = 55;
	entity "calc1" position = geometry "calc1-spot";
	entity "calc2" position = geometry "calc2-spot";
	camera = geometry "artifact-approach";
	player position = geometry "hiding-spot";
	camera fade in -> $calc over 800ms;
	wait 2800ms;
	camera -> geometry "calc-camera" origin over 900ms;
	wait 200ms;
	show dialog {
		PLAYER "Huh. Almost looks like one of those old, fancy calculators."
	};
	camera -> geometry "artifact-approach" origin over 700ms;
	wait 300ms;
	camera fade out -> $calc over 800ms;
	player position = geometry "artifact-approach";
	camera = player position;
	entity "calc1" on_tick = "yeet";
	entity "calc2" on_tick = "yeet";
	camera fade in -> $calc over 800ms;
	player direction = south;
}

"on_tick-ch2-castle-1-doorless" {
	if (player intersects geometry "south-hitbox") {
		copy!("on_exit-ch2-castle-1")
		warp_state = "walk_from-north";
		load map "ch2-castle-outside";
	}
	if (player intersects geometry "north-hitbox") {
		copy!("on_exit-ch2-castle-1")
		warp_state = "walk_from-south";
		copy!("ch2-load-castle-11-special")
	}
}

"on_tick-ch2-castle-1" {
	if (player intersects geometry "south-hitbox") {
		copy!("on_exit-ch2-castle-1")
		warp_state = "walk_from-north";
		load map "ch2-castle-outside";
	}
	if ("ch2-wait-for-hat-touch") {
		// show serial_dialog {"if ("ch2-wait-for-hat-touch") {"};
		goto "on_tick-ch2-castle-1-hexwait1";
	}
	// if there's a dialog open currently, don't do anything! But...
	if (dialog closed) {
		// check for hax button press
		// (Not going to do shenanigans like this for other rooms because if you've left room 1 then you've seen the tutorial already)
		if (!"ch2-ring-zero-enabled-in-castle") {
			if (button HAX pressed) { // You're attempting to use Ring Zero and...
				// ...you've been told Ring Zero won't work
				if ("ch2-toot-done") {
					show dialog {
						PLAYER "Oh, yeah. Ring Zero won't work in in the castle until I fix the mainframe."
					};
				}
				// ...you've discovered Ring Zero won't work
				else if ("ch2-hax-attempted") {
					show dialog {
						PLAYER "Why doesn't Ring Zero work?"
					};
				}
				// ...you've tried the door already
				else if ("ch2-door-attempted") {
					show dialog {
						PLAYER "Weird. I can't get Ring Zero to work, either."
					};
				}
				// ...you did NOT try the door yet
				else {
					show dialog {
						PLAYER "Weird. I can't get Ring Zero to work."
					};
				}
				"ch2-hax-attempted" = true;
			}
		}
	}
}

"on_tick-ch2-castle-1-hexwait1" {
	copy!("on_tick-ch2-castle-1-hexwait-protec")
	if (button HAX pressed) {
		goto "on_tick-ch2-castle-1-hexwait2";
	}
}

"on_exit-ch2-castle-1" { // sanitize ch2 room state
	if ("ch2-wait-for-hat-touch") {
		goto "ch2-wait-for-hat-touch-message";
	}
	"ch2-in-room" = 0;
}

"on_go-castle-1-north" {
	if (!"ch2-toot-done") {
		goto "on_go_ch2-notyet";
	} else {
		copy!("on_exit-ch2-castle-1")
		copy!("warping-out-fade-out")
		copy!("ch2-load-castle-11-special")
	}
}

"on_go-castle-1-south" {
	if (!"ch2-toot-done") {
		goto "on_go_ch2-notyet";
	} else {
		copy!("on_exit-ch2-castle-1")
		copy!("warping-out-fade-out")
		load map "ch2-castle-outside";
	}
}

"interact-ch2-wizard" {
	if (self current_animation == 0) { // WIZARD IS DOWN
		// go up
		copy!("ch2-wizard-ascend")
		// wizard is up now
	} else { // WIZARD IS UP (but should go down)
		if (!"ch2-toot-done") {
			show dialog { SELF "Bye." };
			copy!("ch2-wizard-descend")
			return;
		}
	}
	// wizard is up now and can talk normally
	if (!"ch2-toot-done") {// pre-toot version
		show dialog { SELF "Hi." };
	}
	else if ("ch2-wait-for-hat-touch") {
		player direction = entity "Wizard";
		entity "Wizard" direction = player;
		show dialog {
			PLAYER "Um, how do I get the hex editor to come up again?"
			Wizard "Don't look at me. I don't use touch screens."
			PLAYER "Touch screens?"
			Wizard "Capacitive buttons. Same diff. My paw pads won't trigger them right."
			"But there must be some kind of shiny copper surface on your whatsit, right? Try touching it with your finger. That's probably how it's done."
		};
	}
	else if ("ch2-lambda-paging") {
		show dialog {
			SELF "Looks like whats-his-name is paging you. Better answer him on the terminal."
		};
	}
	else if ("ch2-carrying-mainframeos") {
		copy!("ch2-install-wizard")
	}
	else {
		if (!"ch2-wizard-backstory") {
			show dialog {
				SELF "Hey."
				PLAYER "Hi."
				SELF "Heard you talking to whats-his-name. Building a computer?"
				PLAYER "Yeah, we're going to fix the castle mainframe."
				SELF "Cool, cool."
				"So you should know... I'm an installation wizard. I'm pretty great with computers."
				PLAYER "Oh, yeah? Could you help me install computer parts into the mainframe?"
				SELF "Nah, I'm a software guy, actually."
				PLAYER "Oh."
				SELF "But once it's built, I can help install the OS or whatever programs you might need to do whatever. Always happy to help."
			};
			"ch2-wizard-backstory" = true;
			"interrupt2" = true; // `interrupt` is used for Bert cutscene 
		} else {
			if ("interrupt2") {
				show dialog {
					SELF "So mysterious-voice-man wants to put that thing back together, huh? I don't really get it, but okie-dokie."
					"Let me know when the hardware is done and I can help install the OS and stuff. I'm great with software."
				};
			} else {
				if (!"interrupt3") {
					show dialog {
						SELF "Hey."
						PLAYER "Hi."
						SELF "Finished building that computer yet?"
						PLAYER "Not yet."
						SELF "Cool, cool. So anyway, let me know when the hardware is done and I can help install the OS and stuff. I'm great with software."
						PLAYER "Okay. Thanks."
					};
					"interrupt3" = true; // OwO
				} else {
					show dialog {
						SELF "Finished it already?"
						PLAYER "Not exactly."
						SELF "Yeah, didn't think so."
						"Later, gator."
					};
				}
				copy!("ch2-wizard-descend")
			}
		}
	}
}

"ch2-install-wizard" {
	serial_control = off;
	player_control = off;
	show dialog {
		Wizard "Oh! Oh! You have software for the new computer?"
		"Can I help install it? Please?"
		PLAYER "I wouldn't have it any other way."
	};
	entity "Wizard" on_tick = "null_script";
	copy!("ch2-spin-wizard")
	show dialog {
		Wizard "Awesome!"
		"First off, what's it on? A thumb drive? Floppy?"
		PLAYER "Well, it's like a flat disk thing, all rainbowy on one side...."
		Wizard "A CD or DVD or something? Cool, cool."
	};
	entity "Wizard" direction = entity "mainframe";
	show dialog {
		Wizard "Press the button on that slot there and the disc tray will open. Then set the disc on the tray, rainbow side down, and press the button again to close it."
	};
	player_control = off;
	if (player intersects geometry "mainframe-watchbox") {
		// :3
	} else if (player intersects geometry "mainframe-watchdonut") {
		player position -> geometry "mainframe-look-spot" origin over 300ms;
	} else {
		player position -> geometry "mainframe-look-spot" origin over 500ms;
	}
	player direction = north;
	wait 900ms;
	player direction = entity "Wizard";
	show dialog {
		PLAYER "Okay, now what?"
		Wizard "Hit the power button."
	};
	player direction = entity "mainframe";
	show dialog {
		Wizard "The machine will try to boot from the hard drive first. If there's nothing there, it should try the optical drive next."
		"Not sure if that disc will give us a full installer with a bunch of settings, or if it'll just start up on its own."
	};
	wait 800ms;
	serial_control = off;
	show serial_dialog "spacer";
	show serial_dialog {
		"Starting"
	};
	wait 100ms;
	show dialog {
		PLAYER "!!"
	};
	player direction = entity "Wizard";
	show dialog {
		PLAYER "Look! It's working!"
	};
	player direction = entity "mainframe";
	entity "Wizard" direction = west;
	wait 200ms;
	entity "Wizard" direction = east;
	wait 200ms;
	entity "Wizard" direction = west;
	wait 200ms;
	entity "Wizard" direction = east;
	show dialog {
		Wizard "Aw, come on! Straight to boot? No startup settings at least?"
	};
	entity "Wizard" direction = south;
	show dialog {
		Wizard "Oh well. Guess that's how things are gonna play out. Not much fun for me though. Guess I still helped, technically."
	};
	entity "Wizard" direction = east;
	player on_tick = "ch2-wait-for-boot";
	copy!("ch2-bootup")
	serial_control = off;
	player_control = off;
	wait 1200ms;
	show dialog {
		Wizard "Hey hey! There you go!"
	};
	// goto "ch2-install-wizard2";
	goto "ch2-install-wizard-resume2";
}

"interact-ch2-xa" {
	if ("ch2-toot-done") {
		goto "ch2-terminal-setup-check";
	} else {
		if (!"ch2-has-artifact") {
			player_control = off;
			show dialog {
				name "???" border_tileset codec
				"..."
				"...huh?"
				"Oh! Ohhh, is the light on? Hello?"
				"Oh my goodness. Is there actually someone there? Hello? Can you hear me?"

				PLAYER "I can hear you."

				name "???" border_tileset codec
				"Oh! It's a person! Yes, hello! My name is...."

				Lambda "Lambda! Yeah, call me Lambda!"
				"I'm speaking to you through XA, the Exa! It's this old intercom I set up ages ago. Looks like you're in the castle entrance. I'm surprised XA was still..."
				"Wait. Who are you? How did you even get in?"

				PLAYER "I'm %PLAYER%. The village elders sent me here to collect the castle artifact so I could defeat the Big Bad."
				"And I'm not a hacker, I just...\n...you know...\n...hack things. With Ring Zero."
				
				Lambda "No, no, that can't be right."
				"The village elders are the ones who told me to PROTECT the artifact! I have to keep it away from everyone at all costs!"

				PLAYER "Well we're going to need it soon. I don't know if you felt that earthquake last night, but the Big Bad is returning and I need it to defeat him."

				Lambda "The Big Bad, returning? Yes, I see. He might still have the power to trigger an earthquake, even after...."
				"I, um, don't know why the village elders would have changed their minds about this, but...."
				"Well, you're welcome to the castle artifact. It's over there, just to your left, inside the pillar."
			};
			copy!("ch2-artifact-walk")
			wait 300ms;
			show dialog {
				PLAYER "That was easy. I thought there would be a quest or something. Puzzles, at least."
				Lambda "Well, it doesn't exactly work right now, so...."
			};
			player direction = east;
			show dialog {
				PLAYER "Wait. What?"
				Lambda "That little thing can't do much on its own. The real powerful stuff was handled by the castle mainframe. They were linked wirelessly."
				"But the mainframe was crippled."
			};
			// player walks closer
			show dialog {
				PLAYER "Crippled? What happened?"
				Lambda "Well, ahh, I crippled it."
			};
			// player walks closer
			show dialog {
				PLAYER "What? Why?!"
				Lambda "I couldn't let the Big Bad have access to it again."
				"And we weren't using it for much otherwise."
				PLAYER "But now no one can use it!"
				Lambda "Small price to pay for keeping that power out of the Big Bad's hands. Although...."
				"That was easier to say before the earthquake. With the mainframe down we can't fix anything."
				"It's why you might as well have the portable interface. You could help out around here while I vet your story."
				PLAYER "Vet my story? You don't believe the village elders sent me?"
				Lambda "Well, um... this is all very complicated. I need to be sure that this isn't a trap."
				"If it helps, I don't think you're the Big Bad. He would have caused more mischief in that room, even with Ring Zero disabled."
			};
			if ("ch2-hax-attempted") {
				show dialog {
					PLAYER "Yeah, about that... why won't Ring Zero work in here?"
				};
			} else {
				show dialog {
					PLAYER "Ring Zero is disabled? Since when?"
					Lambda "Since you crossed the threshold."
				};
			}
			show dialog {
				Lambda "The castle walls are lined with aluminum. Acts as a Faraday cage. And Ring Zero's hex editor relies on some wireless services."
				"Normally, XA bridges the town's network with...."
				"You know what? There's a lot to explain, and it might be easier to chat with the artifact. Let's set it up."
			};
			player_control = on;
			"ch2-has-artifact" = true;
		} else {
			show dialog {
				Lambda "Let's get the artifact set up. I can help walk you through it."
			};
		}
		show dialog {
			Lambda "Er, that is, do you want help?"
			> "Yes, please!" = "ch2-terminal-setup-start"
			> "No, thanks." = "ch2-terminal-setup-nevermind"
		};
	}
}

"ch2-terminal-setup-nevermind" {
	if (!"ch2-toot-done") {
		show dialog {
			Lambda "Ah, okay! Um, if you change your mind, speak to XA again and I'll walk you through everything."
		};
		copy!("register-manual")
		"can-interrupt-dialog" = true;
		serial_control = on;
		show dialog {
			Lambda "To finish our conversation, type \"MAN\" into the console."
		};
		"can-interrupt-dialog" = false;
		if (serial_dialog closed) {
			show serial_dialog "spacer";
			show serial_dialog {
				"(Type <c>MAN</> to finish your conversation with Lambda.)"
			};
		}
	} else {
		"can-interrupt-dialog" = true;
		show dialog {
			Lambda "Ah, okay. Carry on!\n\nAlso, remember you can speak to me in the console with the command \"MAN\"."
		};
		"can-interrupt-dialog" = false;
	}
	self on_interact = "ch2-terminal-setup-check";
}

"ch2-terminal-message-test-success" {
	if (!"ch2-toot-done") {
		copy!("register-manual")
		"can-interrupt-dialog" = true;
		serial_control = on;
		show dialog {
			Lambda "Excellent! Let's continue our conversation using the terminal. Type \"MAN\" into the console to get things started."
		};
		"can-interrupt-dialog" = false;
		if (serial_dialog closed) {
			show serial_dialog "spacer";
			show serial_dialog {
				"(Type <c>MAN</> to continue your conversation with Lambda.)"
			};
		}
	} else {
		show dialog {
			Lambda "Excellent! You're all set!"
		};
	}
	self on_interact = "ch2-terminal-setup-check";
}

"on_load-ch2-castle-11-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 11;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE HALLWAY FRONT</>..." };
	if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	} else if (warp_state == "walk_from-west") {
		player position = geometry "walk_from-west";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-11" {
	// ch2 room state
	"ch2-in-room" = 11;
	
	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-11") {
		show serial_dialog { "Discovered <bold><c>CASTLE HALLWAY FRONT</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-11" = true;
	} else {
		show serial_dialog { "Entering <bold>CASTLE HALLWAY FRONT</>..." };
	}


	// room unique things

	if (
		"ch2-installed-monitor"
		|| "ch2-carrying-monitor"
	) {
		copy!("ch2-hide-monitor")
	}

	// initialize everything
	copy!("ch2-map-init")

	// check if you do the cutscene or not
	if (!"ch2-cutseen-castle11") {
		copy!("ch2-cutscene-castle11")
	}
}

"on_load-ch2-castle-12-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 12;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE HALLWAY BACK</>..." };
	if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	} else if (warp_state == "walk_from-east") {
		player position = geometry "walk_from-east";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-12" {
	// ch2 room state
	"ch2-in-room" = 12;
	
	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-12") {
		show serial_dialog { "Discovered <bold><c>CASTLE HALLWAY BACK</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-12" = true;
	} else {
		show serial_dialog { "Entering <bold>CASTLE HALLWAY BACK</>..." };
	}

	// room unique stuff
	if (
		"ch2-installed-needle"
		|| "ch2-carrying-needle"
	) {
		copy!("ch2-hide-needle")
	}
	
	// initialize everything
	copy!("ch2-map-init")

	// check if you do the cutscene or not
	if (!"ch2-cutseen-castle12") {
		show dialog {
			Concierge "Welcome!"
		};
		"interrupt" = true;
		"ch2-cutseen-castle12" = true;
	}
}

"on_load-ch2-castle-13-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 13;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE THRONE ROOM</>..." };
	if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-13" {
	if (warp_state == "ch2 ending") {
		entity "door" on_tick = "yeet";
		entity "King Gibson" position = geometry "king-examine1";
		entity "Sebastian" position = geometry "end-sebastian";
		entity "Templeton" position = geometry "end-templeton1";
		goto "ch2-castle-13-ending";
	}
	// ch2 room state
	"ch2-in-room" = 13;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-13") {
		show serial_dialog { "Discovered <bold><c>CASTLE THRONE ROOM</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-13" = true;
	} else {
		show serial_dialog { "Entering <bold>CASTLE THRONE ROOM</>..." };
	}

	// room unique stuff

	if (warp_state == "Ch2 King Returns") {
		entity "door" on_tick = "yeet";
		camera = geometry "camera-spot2";
	} else if ("ch2-king-rescued") {
		entity "door" on_tick = "yeet";
		entity "King Gibson" position = geometry "king-examine1";
		entity "Sebastian" position = geometry "end-sebastian";
		entity "Templeton" position = geometry "end-templeton1";
		entity "Aurelius" position = geometry "end-fish";
		entity "Templeton" on_tick = "templeton-catalog-search";
		entity "King Gibson" on_tick = "king-debris-ponder";
	} else {
		entity "King Gibson" on_tick = "yeet";
	}

	if (
		"ch2-installed-goldfish"
		|| "ch2-carrying-goldfish"
	) {
		entity "Aurelius" on_tick = "yeet";
	}

	copy!("ch2-map-init")
	
	// check if you do the cutscene or not
	if (warp_state == "Ch2 King Returns") {
		"ch2-cutseen-castle13" = true; // in case you didn't see the whole prev cutscene, set this flag so the reunion cutscene will play out correctly
		copy!("ch2-cutscene-kingreturns")
	} else {
		if (!"ch2-cutseen-castle13") {
			copy!("ch2-cutscene-castle12")
		}
	}
}

"ch2-templeton-pace" {
	self position -> geometry "templeton1" origin over 400ms;
	self position -> geometry "templeton2" origin over 400ms;
	if (!"ch2-templeton-pace") {
		goto "null_script";
	}
}

"on_load-ch2-castle-14" {
	if (warp_state == "king returns teleport") {
		goto "ch2-cutscene-kingreturns-bedroom";
	}
	// ch2 room state
	"ch2-in-room" = 14;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-14") {
		show serial_dialog { "Discovered <bold><c>KING GIBSON'S BEDROOM</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-14" = true;
	} else {
		show serial_dialog { "Entering <bold>KING GIBSON'S BEDROOM</>..." };
	}

	// room unique stuff
	if (
		"ch2-installed-clock"
		|| "ch2-carrying-clock"
	) {
		copy!("ch2-hide-clock")
	}
	if (
		"ch2-storyflag-round" >= 5
		|| "ch2-king-rescued"
	) {
		entity "King Gibson" on_tick = "yeet";
		entity "keypad" on_interact = "null_script";
	}

	// initialize everything
	copy!("ch2-map-init")

	if ("ch2-storyflag-round" < 5) {
		// check if you do the cutscene or not
		if (!"ch2-cutseen-castle14") {
			player_control = off;
			wait 400ms;
			entity "King Gibson" current_animation = 2;
			show dialog {
				KING emote 1 "?"
			};
			entity "King Gibson" on_tick = "ch2-gibson-scramble";
			entity "King Gibson" current_animation = 3;
			show dialog {
				KING emote 2 "!!!"
				"Intruder! Someone's in my bedroom!"
			};
			player direction = entity "King Gibson";
			show dialog {
				KING emote 2 "Help! Guards!"
			};
			entity "King Gibson" on_tick = "null_script";
			entity "King Gibson" current_animation = 2;
			wait 400ms;
			show dialog {
				KING emote 1 "But no, of course. I'm alone."
			};
			entity "King Gibson" current_animation = 0;
			wait 1100ms;
			entity "King Gibson" direction = west;
			wait 350ms;
			show dialog {
				KING emote 3 "They locked me in here to rot. Why would they bother with me now?"
			};
			entity "King Gibson" direction = north;
			show dialog {
				KING emote 3 "Well, assassin, do your worst. Get it over with."
				PLAYER "Whoa, whoa, whoa! Calm down, sir! Er, Your Majesty! I'm not an assassin!"
			};
			entity "King Gibson" direction = south;
			show dialog {
				KING "Then you've come to mock me."
				PLAYER "No, of course not. I'm here to check up on you. Your -- um, advisors? -- are very worried about you."
				KING "I doubt that. They've disabled the locking mechanism on the door, and they won't answer the intercom. I've tried to reach them dozens of times."
				PLAYER "Intercom?"
				KING "Yes. That panel by the door, next to the keypad."
			};
			entity "King Gibson" direction = north;
			show dialog {
				KING emote 3 "Hmph. I'm sure Sebastian is halfway through a coup d'etat by now."
				PLAYER "But they said they've tried calling you."
				"Could it be... perhaps the intercom is broken, too?"
			};
			entity "King Gibson" direction = south;
			show dialog {
				KING "Broken?"
				PLAYER "Well, there was an earthquake. Maybe that's what busted the lock."
				"They said they've tried to call you, but haven't heard anything back. In fact, they think YOU'RE ignoring THEM."
				KING "Ignoring them? No, I would never...."
				PLAYER "They said you had an argument last night."
				KING "Yes but --"
			};
			entity "King Gibson" direction = west;
			show dialog {
				KING emote 3 "*sigh*"
				"I thought... I thought maybe I had gone too far this time. That they had finally written me off."
			};
			entity "King Gibson" direction = south;
			show dialog {
				KING "They really tried to call me?"
				"This whole time, it was only a broken line of communication? They don't hate me?"
				PLAYER "The big, blue one is worried you might be hurt from the earthquake."
				"It was the goldfish who asked me to check up on you."
				KING "I am relieved to hear that."
			};
			entity "King Gibson" position -> geometry "walk-spot" origin over 800ms;
			show dialog {
				KING "If you were able to enter this room, you must have the serial artifact working. Is that correct?"
				PLAYER "Yeah."
				KING "If the intercom -- and the door locks -- were broken in the earthquake, then you should be able to plug the artifact into the keypad and do some diagnostics."
				"If you would?"
			};
			entity "King Gibson" on_tick = "face-player";
			"ch2-cutseen-castle14" = true;
			player_control = on;
		}
	}
}

"on_load-ch2-castle-21-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 21;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>WORKSHOP</>..." };
	if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-east") {
		player position = geometry "walk_from-east";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-21" {
	if (warp_state == "ch2 ending") {
		goto "ch2-castle-21-ending";
	}
	// ch2 room state
	"ch2-in-room" = 21;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-21") {
		show serial_dialog { "Discovered <bold><c>WORKSHOP</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-21" = true;
	} else {
		show serial_dialog { "Entering <bold>WORKSHOP</>..." };
	}

	// room unique stuff
	if (
		"ch2-installed-abacus"
		|| "ch2-carrying-abacus"
	) {
		copy!("ch2-hide-abacus")
	}
	copy!("ch2-map-init")
	if (!"ch2-cutseen-castle21") {
		player_control = off;
		wait 500ms;
		entity "Frankie" direction = player;
		wait 250ms;
		entity "Jean-Paul" direction = player;
		wait 140ms;
		entity "Jean-Paul" strafe = 2;
		entity "Jean-Paul" position -> geometry "birdstep" origin over 150ms;
		entity "Jean-Paul" strafe = 0;
		entity "Jean-Paul" direction = east;
		wait 200ms;
		player direction = entity "Jean-Paul";
		show dialog {
			// TR because their portrait will block them otherwise
			// Player is okay to still use BR (their default)
			JEANPAUL "Whoa! WHOA! Someone's here!"
		};
		wait 300ms;
		entity "Jean-Paul" position -> geometry "birdstep2" origin over 240ms;
		wait 100ms;
		player direction = entity "Frankie";
		show dialog {
			Frankie "You can move between rooms? How are you doing that?"
			PLAYER "I have this handheld artifact thingy, which lets me type --"
		};
		player direction = entity "Jean-Paul";
		show dialog {
			JEANPAUL "You have a portable terminal with you?"
			"Oh, wow. We'd appreciate any help you can lend us. Maybe we can get on top of things now!"
		};
		wait 100ms;
		entity "Jean-Paul" direction = north;
		wait 500ms;
		entity "Jean-Paul" direction = east;
		wait 200ms;
		entity "Jean-Paul" direction = south;
		entity "Frankie" direction = south;
		player_control = on;
		"ch2-cutseen-castle21" = true;
	}
}

"on_load-ch2-castle-22-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 22;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>SERVER ROOM</>..." };
	if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	} else if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-22" {
	if (warp_state == "ch2 ending") {
		goto "ch2-castle-22-ending";
	}
	// ch2 room state
	"ch2-in-room" = 22;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-22") {
		show serial_dialog { "Discovered <bold><c>SERVER ROOM</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-22" = true;
	} else {
		show serial_dialog { "Entering <bold>SERVER ROOM</>..." };
	}

	// room unique stuff
	if (
		"ch2-installed-powersupply"
		|| "ch2-carrying-powersupply"
	) {
		copy!("ch2-hide-powersupply")
	}
	
	copy!("ch2-map-init")
}

"on_load-ch2-castle-23-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 23;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>POWER PLANT</>..." };
	if (warp_state == "walk_from-south") {
		player position = geometry "walk_from-south";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-23" {
	// ch2 room state
	"ch2-in-room" = 23;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-23") {
		show serial_dialog { "Discovered <bold><c>POWER PLANT</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-23" = true;
	} else {
		show serial_dialog { "Entering <bold>POWER PLANT</>..." };
	}

	// initialize everything
	copy!("ch2-map-init")
	// DEBUG
	if (debug_mode) {
		command "get" + "thing" = "ch2-pickup-cactuscooler";
		show serial_dialog {
			" "
			"<y>DEBUG></> <c>GET THING</> to acquire Cactus Cooler"
		};
	}
}

"simon-player-turn-loop-start" {
	if ("i" >= "simon-round") {
		goto "simon-player-turn-end";
	}
	if ("i" == 0) { "simon-pos-curr" = "simon-pos1" *1; }
	else if ("i" == 1) { "simon-pos-curr" = "simon-pos2" *1; }
	else if ("i" == 2) { "simon-pos-curr" = "simon-pos3" *1; }
	else if ("i" == 3) { "simon-pos-curr" = "simon-pos4" *1; }
	else if ("i" == 4) { "simon-pos-curr" = "simon-pos5" *1; }
	else if ("i" == 5) { "simon-pos-curr" = "simon-pos6" *1; }
	else if ("i" == 6) { "simon-pos-curr" = "simon-pos7" *1; }
	// see $roundcount

	// loopy
	goto "simon-player-listen";
}

"simon-player-listen" {
	player direction = south;
	// CHECK FAILS FIRST

	// high-only positions
	if ("ch2-simon-high") {
		if ("simon-pos-curr" != 4) {
			if (button $button4 pressed) {
				// show serial_dialog {"PRESSED BUTTON 4 (listening for $simon-pos-curr$)"};
				"simon-player-move" = 4;
				"ch2-simon-move-fail" = true;
				goto "simon-player-do-move";
			}
		}
		if ("simon-pos-curr" != 5) {
			if (button $button5 pressed) {
				// show serial_dialog {"PRESSED BUTTON 5 (listening for $simon-pos-curr$)"};
				"simon-player-move" = 5;
				"ch2-simon-move-fail" = true;
				goto "simon-player-do-move";
			}
		}
	}
	// low-only positions
	else {
		if ("simon-pos-curr" != 0) {
			if (button $button0 pressed) {
				// show serial_dialog {"PRESSED BUTTON 0 (listening for $simon-pos-curr$)"};
				"simon-player-move" = 0;
				"ch2-simon-move-fail" = true;
				goto "simon-player-do-move";
			}
		}
		if ("simon-pos-curr" != 1) {
			if (button $button1 pressed) {
				// show serial_dialog {"PRESSED BUTTON 1 (listening for $simon-pos-curr$)"};
				"simon-player-move" = 1;
				"ch2-simon-move-fail" = true;
				goto "simon-player-do-move";
			}
		}
	}
	// positions for both low and high
	if ("simon-pos-curr" != 2) {
		if (button $button2 pressed) {
			// show serial_dialog {"PRESSED BUTTON 2 (listening for $simon-pos-curr$)"};
			"simon-player-move" = 2;
			"ch2-simon-move-fail" = true;
			goto "simon-player-do-move";
		}
	}
	if ("simon-pos-curr" != 3) {
		if (button $button3 pressed) {
			// show serial_dialog {"PRESSED BUTTON 3 (listening for $simon-pos-curr$)"};
			"simon-player-move" = 3;
			"ch2-simon-move-fail" = true;
			goto "simon-player-do-move";
		}
	}
	// (We don't want buttons not involved to trigger a fail)

	// CHECK SUCCESSES

	// high-only positions
	if ("ch2-simon-high") {
		if ("simon-pos-curr" == 4) {
			if (button $button4 pressed) {
				"simon-player-move" = 4;
				goto "simon-player-do-move";
			}
		}
		if ("simon-pos-curr" == 5) {
			if (button $button5 pressed) {
				"simon-player-move" = 5;
				goto "simon-player-do-move";
			}
		}
	}
	// low-only positions
	else {
		if ("simon-pos-curr" == 0) {
			if (button $button0 pressed) {
				"simon-player-move" = 0;
				goto "simon-player-do-move";
			}
		}
		if ("simon-pos-curr" == 1) {
			if (button $button1 pressed) {
				"simon-player-move" = 1;
				goto "simon-player-do-move";
			}
		}
	}
	// positions for both low and high
	if ("simon-pos-curr" == 2) {
		if (button $button2 pressed) {
			"simon-player-move" = 2;
			goto "simon-player-do-move";
		}
	}
	if ("simon-pos-curr" == 3) {
		if (button $button3 pressed) {
			"simon-player-move" = 3;
			goto "simon-player-do-move";
		}
	}
	entity "Simon" on_tick = "simon-player-listen"; // reset this loop (on next game tick?)
}

"simon-player-animation-pose_bottom_left-wait" {
	if (button $button0 up) {
		"simon-player-wait-finished" = true;
		goto "null_script";
	}
}

"simon-player-animation-pose_bottom_right-wait" {
	if (button $button1 up) {
		"simon-player-wait-finished" = true;
		goto "null_script";
	}
}

"simon-player-animation-pose_left-wait" {
	if (button $button2 up) {
		"simon-player-wait-finished" = true;
		goto "null_script";
	}
}

"simon-player-animation-pose_right-wait" {
	if (button $button3 up) {
		"simon-player-wait-finished" = true;
		goto "null_script";
	}
}

"simon-player-animation-pose_top_left-wait" {
	if (button $button4 up) {
		"simon-player-wait-finished" = true;
		goto "null_script";
	}
}

"simon-player-animation-pose_top_right-wait" {
	if (button $button5 up) {
		"simon-player-wait-finished" = true;
		goto "null_script";
	}
}

"simon-player-wait" {
	if ("simon-player-wait-finished") {
		goto "simon-player-wait-finished";
	}
}

"simon-player-wait-finished" {
	"simon-player-wait-finished" = false;
	player current_animation = $guitar_idle;
	light ALL = off;
	"i" += 1;
	// show serial_dialog {
	// 	"YOUR MOVE WAS $simon-player-move$"
	// };
	if ("ch2-simon-move-fail") {
		goto "simon-game-lose";
	}
	goto "simon-player-turn-loop-start";
}

"simon-player-turn-end" {
	"simon-round" += 1;
	if ("simon-round" > $roundcount) {
		goto "simon-game-win";
	}
	goto "simon-enemy-turn-start";
}

"on_load-ch2-castle-31-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 31;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>GRAND HALL</>..." };
	entity "Simon" current_animation = 12;
	entity "Sea Moss" direction = west;
	if (warp_state == "walk_from-north") {
		player position = geometry "walk_from-north";
	} else if (warp_state == "walk_from-west") {
		player position = geometry "walk_from-west";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-castle-31" {
	// ch2 room state
	"ch2-in-room" = 31;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-31") {
		show serial_dialog { "Discovered <bold><c>GRAND HALL</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-31" = true;
	} else {
		show serial_dialog { "Entering <bold>GRAND HALL</>..." };
	}

	// room unique stuff
	if (
		"ch2-installed-keyboard"
		|| "ch2-carrying-keyboard"
	) {
		copy!("ch2-hide-keyboard")
	}

	"ch2-simon-heard-high" = false;
	"ch2-simon-heard-low" = false;

	copy!("ch2-map-init")
	//DEBUG STUFF
	if (debug_mode) {
		command "simon" = "debug-simon";
		command "simon" + "high" = "debug-simon-high";
		command "simon" + "low" = "debug-simon-low";
		command "simon" + "win" = "debug-simon-win";
		command "simon" + "lose" = "debug-simon-lose";
		show serial_dialog {
			" "
			"<y>DEBUG></> Play Simon Says!"
			"<y>></> <c>SIMON</>: replay last game type (default: low)"
			"<y>></> <c>SIMON HIGH</>: play high game (easier on desktop)"
			"<y>></> <c>SIMON LOW</>: play low game (easier on the real badge)"
			"<y>></> <c>SIMON WIN</>: play the win animation(s)"
			"<y>></> <c>SIMON LOSE</>: play the lose animation(s)"
		};
	}
}

"interact-ch2-simon" {
	if ("ch2-storyflag-round" < 2) {
		show dialog {
			Simon "There's no audience! I can't play in these conditions! COME ON! What's the holdup? Where is everybody?"
		};
	}
	else if (!"ch2-simon-won-before") {
		if (!"ch2-simon-backstory") {
			show dialog {
				PLAYER "So, about your keyboard -- erm, \"keytar?\""
				"I sort of need one for --"
			};
			entity "Simon" current_animation = 13;
			entity "Alvin" on_tick = "camera-angry-shake";
			show dialog {
				Simon emote 2 "WHOA WHOA WHOA hey, hands off! I'm not just going to give you my precious Rosetta!"
				PLAYER "(Rosetta?)"
			};
			entity "Alvin" on_tick = "null_script";
			entity "Simon" current_animation = 0;
			show dialog {
				Simon emote 1 "But hey, you know what? I'll give you the chance to prove you deserve this beauty."
			};
			entity "Simon" current_animation = 12;
			show dialog {
				Simon emote 1 "I'm bored to death, so how about a keytar battle? If you win, I'll let you keep Rosetta, and I'll use my backup keytar for the show instead."
			};
			"ch2-simon-backstory" = true;
		} else {
			entity "Simon" current_animation = 12;
			show dialog {
				Simon emote 1 "Change your mind about a keytar battle? I'll let you keep the keyboard if you win. Come on, I'm bored to tears!"
			};
		}
		copy!("simon-game-launcher")
	}
	else if ("interrupt") {
		entity "Simon" current_animation = 12;
		show dialog {
			Simon emote 1 "Ah, man! I'm still sweatin' after that last one!"
			"But I'm not out for the count yet! Want another go?"
		};
		copy!("simon-game-launcher")
	}
	else {
		entity "Simon" current_animation = 12;
		if (!"ch2-simon-repeat-backstory") {
			show dialog {
				Simon emote 1 "Hey hey hey, look who it is! It's the keytar wizard!"
				"Aw, man! I haven't had that much fun in ages! I'm all pumped up, just thinking about it!"
				"I'm dying for another keytar battle!"
			};
			"ch2-simon-repeat-backstory" = true;
		} else {
			show dialog {
				Simon emote 1 "Hey, keytar wizard! My soul is thirsting for another keytar battle!"
			};
		}
		if (
			"ch2-carrying-keyboard"
			|| "ch2-simon-repeat-brunhilda-backstory"
		) {
			/* Do nothing extra... */
		} else {
			entity "Simon" current_animation = 0;
			show dialog {
				PLAYER "So, uh, I don't exactly have Rosetta with me right now."
			};
			entity "Simon" current_animation = 12;
			show dialog {
				Simon emote 1 "Not a problem, not a problem! Here, you can borrow Brunhilda, just for now. But don't walk away with it, you hear?"
				PLAYER "How many keytars do you have with you, exactly?"
			};
			entity "Simon" current_animation = 0;
			show dialog {
				Simon "Only my favorite four or five."
			};
			"ch2-simon-repeat-brunhilda-backstory" = true;
		}
		copy!("simon-game-launcher")
	}
}

"on_load-ch2-castle-32-doorless" {
	// abbreviated copy-pasta of the below
	"ch2-in-room" = 32;
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE KITCHEN</>..." };
	if (warp_state == "walk_from-northeast") {
		player position = geometry "walk_from-northeast";
	} else if (warp_state == "walk_from-northwest") {
		player position = geometry "walk_from-northwest";
	}
	command "look" + "vending machine" = "look-ch2-vendingmachine";
	copy!("ch2-map-init")
}

"on_load-ch2-castle-32" {
	// ch2 room state
	"ch2-in-room" = 32;
	entity "Gloria" position = geometry "worry-walk2";
	entity "Gloria" direction = entity "Samson";

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-32") {
		show serial_dialog { "Discovered <bold><c>CASTLE KITCHEN</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-32" = true;
	} else {
		show serial_dialog { "Entering <bold>CASTLE KITCHEN</>..." };
	}

	// room unique stuff
	if (!"ch2-ramchips-dispensed") {
		copy!("ch2-hide-ramchips")
	}
	
	if (warp_state == "walk_from-northeast") {
		player position = geometry "walk_from-northeast";
	} else if (warp_state == "walk_from-northwest") {
		player position = geometry "walk_from-northwest";
	}
	
	command "look" + "vending machine" = "look-ch2-vendingmachine";
	copy!("ch2-map-init")

	// DEBUG
	if (debug_mode) {
		command "want" + "chips" = "debug-want-chips";
		show serial_dialog {
			" "
			"<y>DEBUG></> <c>WANT CHIPS</>"
		};
	}
	// END DEBUG
}

"on_load-ch2-castle-33" {
	// ch2 room state
	"ch2-in-room" = 33;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-33") {
		show serial_dialog { "Discovered <bold><c>HYDROPONICS ROOM</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-33" = true;
	} else {
		show serial_dialog { "Entering <bold>HYDROPONICS ROOM</>..." };
	}

	// room unique stuff
	if (
		"ch2-installed-mouse"
		|| "ch2-carrying-mouse"
	) {
		copy!("ch2-hide-mouse")
	}
	"ch2-mousegame" = false;

	copy!("ch2-map-init")
	if (debug_mode) {
		command "mousegame" = "ch2-debug-mousegame";
		show serial_dialog {
			" "
			"<y>DEBUG></> <c>MOUSEGAME</>: start the mouse game!"
		};
	}
	if (!"ch2-cutseen-castle33") {
		player_control = off;
		if (warp_state != "warped") {
			wait 600ms;
			show dialog {
				Gregory alignment BR "Oh!"
			};
			player direction = entity "Gregory";
			show dialog {
				Gregory alignment BR "Well, that's a new face, isn't it?"
			};
		} else {
			wait 200ms;
			show dialog {
				Gregory alignment TR "Oh!"
			};
			player direction = entity "Gregory";
			show dialog {
				Gregory alignment TR "Well, that's a new face, isn't it?"
			};
		}
		player_control = on;
		"ch2-cutseen-castle33" = true;
	}
}

"on_tick-ch2-castle-33" {
	if (player intersects geometry "south-hitbox") {
		if ("ch2-mousegame") {
			player_control = off;
			player current_animation = 0;
			show dialog {
				PLAYER "Wait, I shouldn't leave before giving back this mouse detector."
			};
			player position -> geometry "south-hitbox-bounce" origin over 300ms;
			player_control = on;
		} else {
			warp_state = "walk_from-northwest";
			copy!("ch2-load-castle-32-special")
		}
	}
	if ("ch2-mousegame") {
		goto "ch2-mousegame-tick"; // this script also resets to this script
	}
}

"ch2-interact-gregory" {
	copy!("face-player")
	if ("ch2-mousegame") {
		if (!"interrupt") {
			show dialog {
				SELF "That bluetooth proximity detector will tell you how close you are to the mouse. The closer you are to it, the more lights will light up."
				"Or did you want to take a break?"
				> "Yes, I want to take a break." = "ch2-interact-gregory-breakyes"
				> "No, I want to keep trying." = "ch2-interact-gregory-breakno"
			};
			"interrupt" = true;
		} else {
			show dialog {
				SELF "Did you want to take a break?"
				> "Yes, I want to take a break." = "ch2-interact-gregory-breakyes"
				> "No, I want to keep trying." = "ch2-interact-gregory-breakno"
			};
		}
	}
	if ("ch2-storyflag-round" < 2) {
		if (!"ch2-gregory-backstory") {
			show dialog {
				SELF "Not sure how you got in, but..."
				"Oh! Unless the blockage is gone at last?"
				PLAYER "No, the door by the vending machine is still blocked."
			};
			player direction = south;
			show dialog {
				PLAYER "But why isn't the door to this room crushed, damaged, or blocked like the rest?"
			};
			player direction = entity "Gregory";
			entity "Gregory" on_tick = "spin_self_clockwise";
			show dialog {
				SELF "This wing was recently redone to install a bunch of fancy tech."
				"These hydroponics trays, the induction stovetops in the next room... that kind of thing."
			};
			entity "Gregory" on_tick = "face-player";
			copy!("face-player")
			show dialog {
				SELF "They did some structural reinforcement, too, but don't remember specifics."
				"At the time, the only thing I cared about was my new stovetop."
			};
			"ch2-gregory-backstory" = true;
			if (
				!"ch2-want-cactuscooler"
				|| "ch2-carrying-cactuscooler"
				|| "ch2-cactuscooler-delivered"
			) { /*NADA*/ } else {
				show dialog {
					PLAYER "Gotcha. So, um...."
				};
				show dialog "ch2-gregory-cactus-help" { // reused bit
					PLAYER "I was looking for this soda called Cactus Cooler. Do you know if the castle has any stocked?"
					SELF "Hmm, doubt it, but I don't know for certain. I haven't been in charge of vending machine stocking for -- goodness, two or three decades."
					"You might check the vending machine itself, though."
				};
			}
		} else {
			if (
				!"ch2-want-cactuscooler"
					|| "ch2-carrying-cactuscooler"
					|| "ch2-cactuscooler-delivered"
			) {
				show dialog {
					SELF "I'm slowing down in my old age, but even so, I don't want my habits ingrained to the point that I'm sabotaging myself. I try to keep my mind spry."
					"So when new tech comes out, I make an effort to give it a fair shot, and I learn how to use it properly, even if there's a tradeoff."
					"I can't use my favorite wok on my new stovetop, but all my other pans heat more quickly and evenly with induction. For me, that's a good trade."
					"As for my new bluetooth mouse...."
					"Bad trade. For me, it'll be wired mice forever!"
					"But hey, at least I know I don't hate bluetooth mice because I'm old and stubborn."
				};
				"ch2-bluetooth-mouse-rant" = true;
			} else {
				show dialog "ch2-gregory-cactus-help"; // from above
			}
		}
	} else {
		if ("ch2-carrying-mouse" || "ch2-installed-mouse") {
			show dialog {
				SELF "I like my mouse to be physically connected to my computer."
				"Hmm, is that too on the nose?"
			};
		} else if (!"ch2-mousegame-backstory") {
			show dialog {
				PLAYER "This is kind of random, but I need a mouse for something, and was wondering --"
				SELF "A mouse? A rodent, or a computer mouse?"
				PLAYER "A computer mouse."
				SELF "A bit cliche to ask a cat about this, don't you think?"
				PLAYER "It wasn't my idea."
			};
			if (!"ch2-bluetooth-mouse-rant") {
				show dialog { SELF "Well, you're in luck. I have a spare bluetooth mouse I'm not using anymore. You're welcome to it if you can catch it." };
			} else {
				show dialog { SELF "Well, you can have my old bluetooth mouse if you can catch it." };
			}
			show dialog {
				PLAYER "Catch it?"
			};
			entity "Gregory" on_tick = "spin_self_clockwise";
			show dialog {
				SELF "It's loose in this room somewhere, but I'm not as fast as I used to be, and can't quite get ahold of it."
			};
			entity "Gregory" on_tick = "face-player";
			copy!("face-player")
			show dialog {
				SELF "It's hiding in one of the hydroponics bins, I should think."
				PLAYER "I'm sorry... your bluetooth mouse is hiding in the vegetables?"
			};
			if (!"ch2-bluetooth-mouse-rant") {
				show dialog { SELF "Well, it's not fond of cats. And I'm not fond of it, to be honest." };
			} else {
				show dialog { SELF "Well, it's not fond of cats." };
			}
			show dialog {
				PLAYER "We ARE talking about a computer mouse, right?"
				SELF "We are indeed."
			};
			player_control = off;
			entity "Gregory" on_tick = "null_script";
			entity "Gregory" direction += 1;
			wait 800ms;
			entity "Gregory" direction -= 1;
			entity "Gregory" on_tick = "face-player";
			show dialog {
				SELF "Here, this is a bluetooth proximity detector. It's got eight lights that will turn on depending on how close you are to the mouse."
				PLAYER "Eight lights?"
			};
			lights_control = on;
			light ALL = off;
			entity "Lights" on_tick = "screen-lights-flash-bits";
			show dialog {
				SELF "Yes, these eight lights in a line, here along the bottom. You see?"
				PLAYER "Um...."
				SELF "The more lights come on, the closer you are to finding it. Walk around a bit and see for yourself."
			};
			copy!("ch2-map-init-hex")
			entity "Lights" on_tick = $lightsdefault;
			show dialog {
				SELF "Well, let me know when you want to have a go, anyway."
			};
			player_control = on;
			"interrupt" = true;
			"ch2-mousegame-backstory" = true;
		} else {
			if (!"interrupt") {
				show dialog {
					SELF "You still need that bluetooth mouse? I've still got that bluetooth proximity detector right here."
				};
			}
			show dialog {
				SELF "Want to try to catch the mouse?"
				> "Yes" = "ch2-interact-gregory-gameyes"
				> "No" = "ch2-interact-gregory-gameno"
			};
		}
	}
}

"on_load-ch2-castle-34" {
	// ch2 room state
	"ch2-in-room" = 34;

	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-34") {
		show serial_dialog { "Discovered the <bold><c>CASTLE PANTRY</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-34" = true;
	} else {
		show serial_dialog { "Entering the <bold>CASTLE PANTRY</>..." };
	}

	// room unique stuff
	
	copy!("ch2-map-init")
}

"on_load-ch2-castle-99" {
	// ch2 room state
	"ch2-in-room" = 99;
	
	// entrance text
	show serial_dialog "spacer";
	if (!"ch2-seen-room-99") {
		show serial_dialog { "Discovered <bold><c>SECRET LAB</>! Room added to <c>MAP</>!" };
		"ch2-seen-room-99" = true;
	} else {
		show serial_dialog { "Entering <bold>SECRET LAB</>..." };
	}

	// room unique stuff
	camera = geometry "camera";

	// cutscene pre-fade :/
	if (!"ch2-cutseen-castle99") {
		entity "Lambda" current_animation = $lowered
	}

	// Check if rake has been obtained
	if ("ch2-carrying-minirake-99") {
		copy!("ch2-minirake-99-hide")
	}
	
	// initialize everything
	copy!("ch2-map-init")

	// check if you do the cutscene or not
	if (!"ch2-cutseen-castle99") {
		if (debug_mode) {
			command "skip" = "ch2-skip-99";
			show serial_dialog {
				" "
				"<y>DEBUG></> <c>SKIP</>: skip this cutscene"
			};
		}
		goto "ch2-cutscene-castle99"; // NOTE: branching means `goto`! Deadend things here!
	}
}

"on_load-ch2-castle-outside" {
	player_control = off;
	if (!"ch2-full-escort-cutseen") {
		// todo: cutscene: leading you inside
	}
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>CASTLE EXTERIOR</>..." };
	// Village elders hiding
	if ("ch2-storyflag-round" != 0) {
		entity "Bert" on_tick = "yeet";
	}
	if (
		"ch2-storyflag-round" == 1
		|| "ch2-storyflag-round" == 2
		|| "ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" >= 5
	) {
		entity "Jackob" on_tick = "yeet";
		entity "Alfonso" on_tick = "yeet";
	}
	// unique stuff done
	copy!("ch2-map-init") // (player control comes back here)
	// animations
	if (warp_state == "walk_from-north") {
		player position -> geometry "walk_from-north" length over 200ms;
	} else if (warp_state == "walk_from-east") {
		player path = "walk_from-east";
		player on_tick = "on_tick-ch2-town-walkfadein";
			// borrowing this from town scripts
		camera fade in -> #000000 over 400ms;
	} else if (warp_state == "ch2-ending") {
		goto "ch2-post-credits";
	}
}

"on_load-ch2-greenhouse" {
	command "look" + "ethernettles" = "look-ch2-ethernettles";
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>GREENHOUSE</>..." };
	"ethernettle_id" = entity "EtherNettle1" primary_id;
	"EtherNettle1" = entity "EtherNettle1" primary_id;
	"EtherNettle2" = entity "EtherNettle2" primary_id;
	"EtherNettle3" = entity "EtherNettle3" primary_id;
	"EtherNettle4" = entity "EtherNettle4" primary_id;
	"EtherNettle5" = entity "EtherNettle5" primary_id;
	"EtherNettle6" = entity "EtherNettle6" primary_id;
	"EtherNettle7" = entity "EtherNettle7" primary_id;
	"EtherNettle8" = entity "EtherNettle8" primary_id;
	copy!("ch2-map-init")
}

"on_load-ch2-lodge-rtfm" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>RTFM ROOM</>..." };
	// do unique stuff first (but player_control = serial / off first, if you do)
	
	// Village elders hiding
	if ("ch2-storyflag-round" != 1) {
		entity "Bert" on_tick = "yeet";
	}
	if ("ch2-storyflag-round" != 3) {
		entity "Jackob" on_tick = "yeet";
		entity "Alfonso" on_tick = "yeet";
	}
	// unique stuff done
	copy!("ch2-map-init")
}

"on_load-ch2-lodge" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>LIBRARY</>..." };
	// do unique stuff first (but player_control = serial / off first, if you do)
	if ("ch2-storyflag-round" != 1) {
		entity "Alfonso" on_tick = "yeet";
	}
	// The part of Uncle Zappy is being played by Jackob
	if (
		"ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" == 4
	) {
		entity "Jackob" position = geometry "zappy-spot";
		entity "Jackob" name = "Uncle Zappy";
		entity "Jackob" on_look = "look-ch2-zappy";
		entity "Jackob" on_tick = "null_script";
		entity "Jackob" on_interact = "interact-ch2-zappy";
		entity "Jackob" type = "lightning_boy2";
		entity "Jackob" direction = north;
	} else if ("ch2-storyflag-round" != 1) {
		entity "Jackob" on_tick = "yeet";
	}
	// hide stuff
	if (
		"ch2-installed-manual"
		|| "ch2-carrying-manual"
	) {
		copy!("ch2-hide-manual")
	}

	if (warp_state == "walk_from-north") {
		player_control = off;
		player position = geometry "walk_from-north";
	}
	// player control comes on after this next script is over:
	copy!("ch2-map-init")
}

"on_load-ch2-magehouse" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>YOUR HOUSE</>..." };
	if (
		"ch2-storyflag-round" == 0
	) {
		entity "Aunt Zippy" position = geometry "alt-spot1";
		entity "Uncle Zappy" position = geometry "alt-spot3";
	} else if (
		"ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" == 4
	) {
		entity "Aunt Zippy" on_tick = "yeet";
		entity "Uncle Zappy" on_tick = "yeet";
	} else if ("ch2-storyflag-round" == 5) {
		entity "Aunt Zippy" position = geometry "alt-spot2";
		entity "Uncle Zappy" position = geometry "alt-spot1";
	}
	copy!("ch2-map-init")
}

"on_load-ch2-oldcouplehouse" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>BEATRICE'S HOUSE</>..." };
	// do unique stuff first (but player_control = serial / off first, if you do)
	if (!"ch2-delmar-in-house") {
		entity "Delmar" on_tick = "yeet";
	} else {
		if (!"ch2-delmar-is-man") {
			entity "Beatrice" on_tick = "face-player";
			entity "Delmar" on_tick = "face-player";
		} else {
			entity "Beatrice" direction = entity "Delmar";
			entity "Delmar" direction = entity "Beatrice";
			entity "Delmar" type = "old_man";
		}
	}

	copy!("ch2-map-init")
}

"on_tick-ch2-oldcouplehouse" {
	if (player intersects geometry "south-hitbox") {
		goto "on_walk-ch2-oldcouplehouse-south";
	}
	if ("ch2-cutseen-delmar") {
		// and just leave him watching...
		if (entity "Delmar" type != "old_man") {
			entity "Delmar" on_tick = "face-player";
			"interrupt" = true;
		}
		// He'll watch Bea until he's changed into anyting else,
		// then he'll stare at you suspiciously, even if you fix him afterward
	}
}

"ch2-check-if-sheep" {
	if ("ch2-delmar-is-man") {
		goto "null_script";
	}
	if (entity "Delmar" type == "old_man") {
		"ch2-delmar-is-man" = true;
		if (!"ch2-cutseen-delmar") {
			goto "ch2-cutscene-delmar-reconnect";
		}
	}
}

"interact-ch2-delmar" {
	copy!("face-player")
	if ("interrupt") {
		if (entity "Delmar" type == "sheep "|| entity "Delmar" type == "helga") {
			show dialog { SELF "...." };
		} else {
			show dialog { SELF "I've got my eye on you, sonny...." };
		}
	} else if (entity "Delmar" type == "old_man") {
		show dialog { SELF "Thanks a lot, lad. I'll try to be a little more attentive from here on, eh?" };
		self direction = entity "Beatrice";
	} else {
		show dialog { SELF "...." };
	}
}

"on_load-ch2-smithfamily" {
	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>SMITH'S HOUSE</>..." };
	// do unique stuff first (but player_control = serial / off first, if you do)
	copy!("ch2-map-init")
}

"on_load-ch2-town" {
	// cutscene interrupt:
	if (warp_state == "cutscene-escort") {
		goto "ch2-escort-cutscene";
	}

	// entrance text
	show serial_dialog "spacer";
	show serial_dialog { "Entering <bold>TOWN</>..." };
	// sending entities to their places
	// elders
	entity "Bert" on_tick = "yeet"; // always hiding
	if ("ch2-storyflag-round" < 5) {
		entity "Jackob" on_tick = "yeet"; // always hiding before end
		if ("ch2-storyflag-round" == 2) {
			copy!("ch2-setup-alfonso-verthandi")
		} else {
			entity "Alfonso" on_tick = "yeet";
		}
	}
	// shepherd
	if (
		"ch2-storyflag-round" == 1
		|| "ch2-storyflag-round" == 2
	) {
		entity "Shepherd" position = geometry "shepherd2";
		entity "Shepherd" direction = east;
		entity "Shepherd" on_tick = "null_script";
	} else if (
		"ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" == 4
	) {
		entity "Shepherd" position = geometry "shepherd1";
	}
	// verthandi
	if ("ch2-storyflag-round" == 0) {
		entity "Verthandi" position = geometry "verthandi1";
		entity "Verthandi" direction = west;
	} else if (
		"ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" == 4
	) {
		entity "Verthandi" position = geometry "verthandi2";
		entity "Verthandi" direction = north;
	}
	// marta
	if (
		"ch2-storyflag-round" == 1
		|| "ch2-storyflag-round" == 2
	) {
		entity "Marta" position = geometry "marta1";
		entity "Marta" direction = west;
	} else if (
		"ch2-storyflag-round" == 3
		|| "ch2-storyflag-round" == 4
	) {
		entity "Marta" position = geometry "marta2";
		entity "Marta" direction = south;
	}
	// delmar
	if ("ch2-delmar-in-house") {
		entity "Delmar" on_tick = "yeet";
	}

	// walking out of doorways:
	player_control = off;
	if (warp_state == "raw_game_load-ch2") {
		copy!("restore_player_state")
	} else if (warp_state == "exit_from-credits") {
		player position = geometry "from-credits-spot";
		camera fade in -> #000000 over 800ms;
	} else if (warp_state == "walk_from-east") {
		player path = "walk_from-east"
		player on_tick = "on_tick-ch2-town-walkfadein";
		camera fade in -> #000000 over 400ms;
	} else if (warp_state == "walk_from-west") {
		player path = "walk_from-west";
		player on_tick = "on_tick-ch2-town-walkfadein";
		camera fade in -> #000000 over 400ms;
	} else if (warp_state == "walk_from-bobsclub") {
		player position -> geometry "walk_from-bobsclub" length over 200ms;
	} else if (warp_state == "walk_from-bakery") {
		player position -> geometry "walk_from-bakery" length over 200ms;
	} else if (warp_state == "walk_from-lodge") {
		player position -> geometry "walk_from-lodge" length over 200ms;
	} else if (warp_state == "walk_from-greenhouse") {
		player position -> geometry "walk_from-greenhouse" length over 200ms;
	} else if (warp_state == "walk_from-magehouse") {
		player position -> geometry "walk_from-magehouse" length over 200ms;
	} else if (warp_state == "walk_from-oldcouplehouse") {
		player position -> geometry "walk_from-oldcouplehouse" length over 200ms;
	} else if (warp_state == "walk_from-smithfamily") {
		player position -> geometry "walk_from-smithfamily" length over 200ms;
	} else if (warp_state == "walk_from-woprhouse") {
		player position -> geometry "walk_from-woprhouse" length over 200ms;
	} else if (warp_state == "walk_from-bobsclub") {
		player position -> geometry "walk_from-bobsclub" length over 200ms;
	}
	copy!("ch2-map-init")
	if (debug_mode) {
		command "cutbug" = "cutbug";
		command "cutbug" + "auto" = "cutbug-auto";
		show serial_dialog {
			" "
			"<y>DEBUG></> town</>"
			"<y>></> <c>CUTBUG</>: use player Y position for test"
			"<y>></> <c>CUTBUG AUTO</>: run cutbugs 0-1030"
		};
	}
	copy!("ch2-player-spawn-click-protection")
}

"interact-ch2-jackob-end" {
	if ("ch2-storyflag-round" < 5) {
		goto "null_script";
	}
	copy!("face-player")
	show dialog {
		SELF "Ah, %PLAYER%, good work today."
	};
	if (!"ch1_finished") {
		if (!"ch1_unfinished_backstory") {
			show dialog {
				SELF "But you know, it seems like you still haven't finished chapter 1 in this save file."
				"I'm not angry. Just disappointed."
				"Just kidding! If the game didn't want you to beat chapter 2 before chapter 1, it should have tried harder to stop you."
				"In all seriousness, do feel free to give chapter 1 a go."
			};
			"ch1_unfinished_backstory" = true;
		}
	}
	show dialog {
		Alfonso "Stop getting distracted! You must remember what you've forgotten!"
		Jackob "I can't remember any more \"old songs\", %Alfonso%. This isn't working, and I need a break."
		Alfonso "We don't have time for breaks! Sing \"Danny Boy\" again, and this time, try to really -- really -- remember where you learned it."
		Jackob "The more I sing \"Danny Boy,\" the more I remember the last time I sang it -- which is right here, right now."
	};
}

"interact-ch2-alfonso-end" {
	if ("ch2-storyflag-round" < 5) {
		goto "null_script";
	}
	copy!("face-player")
	show dialog {
		SELF "I never congratulated you on acquiring the artifact and repairing its fundamental functions, %PLAYER%. Good job."
		"The next challenge will test you further, but you should still try to remember everything you've learned so far."
		"Remember... yes, remember everything you've learned. We all must remember...."
	};
}

"register-colors" {
	command "colors" = "command-colors";
	command "colors + bg" = "command-colors-bg";
	command "colors + bold" = "command-colors-bold";
	command "colors + dim" = "command-colors-dim";
}

"register-commentary" {
	command "commentary" = "command-commentary-solo";
	command "commentary + on" = "command-commentary-on";
	command "commentary + off" = "command-commentary-off";
}

"register-inventory" {
	command "man + inventory" = "man-inventory";
	command "inventory" = "command-inventory";
	alias "i" = "inventory";
	alias "examine" = "look";
	alias "x" = "look";
}

"command-inventory" {
	// set the `count-inventory` flag "first"; if true, don't print anything! just count!
	"ch2-count-inventory" = 0;
	if (!"only-count-inventory") {
		show serial_dialog "spacer";
		show serial_dialog {
			"<c>INVENTORY:</>"
		};
	}
	// normal
	if ("ch2-carrying-cactuscooler") {
		if (!"only-count-inventory") {
			show serial_dialog { "	can of Cactus Cooler" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-heatsink") {
		if (!"only-count-inventory") {
			show serial_dialog { "	heat sink" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-powersupply") {
		if (!"only-count-inventory") {
			show serial_dialog { "	power supply" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-monitor") {
		if (!"only-count-inventory") {
			show serial_dialog { "	monitor" };
		}
		"ch2-count-inventory" += 1;
	}
	// abstract
	if ("ch2-carrying-harddrive") {
		if (!"only-count-inventory") {
			show serial_dialog { "	hard drive" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-plate") {
		if (!"only-count-inventory") {
			show serial_dialog { "	dinner plate" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-needle") {
		if (!"only-count-inventory") {
			show serial_dialog { "	phonograph needle" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-keyboard") {
		if (!"only-count-inventory") {
			show serial_dialog { "	keyboard" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-mouse") {
		if (!"only-count-inventory") {
			show serial_dialog { "	mouse" };
		}
		"ch2-count-inventory" += 1;
	}
	// desperate
	if ("ch2-carrying-ramchips") {
		if (!"only-count-inventory") {
			show serial_dialog { "	ramchips" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-clock") {
		if (!"only-count-inventory") {
			show serial_dialog { "	clock" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-cpu") {
		if (!"only-count-inventory") {
			show serial_dialog { "	cpu" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-goldfish") {
		if (!"only-count-inventory") {
			show serial_dialog { "	goldfish" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-manual") {
		if (!"only-count-inventory") {
			show serial_dialog { "	calculator manual" };
		}
		"ch2-count-inventory" += 1;
	}
	if ("ch2-carrying-abacus") {
		if (!"only-count-inventory") {
			show serial_dialog { "	abacus" };
		}
		"ch2-count-inventory" += 1;
	}
	// final
	if ("ch2-carrying-mainframeos") {
		if (!"only-count-inventory") {
			show serial_dialog { "	mainframe OS CD" };
		}
		"ch2-count-inventory" += 1;
	}
	// mini-rake quest
	if ("ch2-carrying-minirake-99") {
		if (!"only-count-inventory") {
			show serial_dialog { "	mini rake" };
		}
		"ch2-count-inventory" += 1;
	}
	// wrapup:
	if ("ch2-count-inventory" == 0) {
		if (!"only-count-inventory") {
			show serial_dialog { "	(nothing)" };
		}
	}
	"only-count-inventory" = false;
	"ch2-counted-inventory" = ch2-count-inventory;
	"ch2-count-inventory" = 0;
}

"register-manual" {
	// the default set
	command "man" = "command-man";
	command "man + man" = "man-man";
	command "man + look" = "man-look";
	command "man + go" = "man-go";
	command "man + help" = "man-help";
	command "man + rtfm" = "man-rtfm";
	command "man" fail = "man-fail";
}

"command-man-normal" {
	if ("ch2-cutseen-bert-secret") {
		if (!"ch2-lambda-bert-backstory") {
			goto "ch2-bert-secret-lambda-intro";
		} else if (!"ch2-parts-round-2-backstory") {
			goto "ch2-lambda-round-2-parts1";
		}
	}
	if ("ch2-cutseen-bert-message") {
		if (!"ch2-parts-round-3-backstory") {
			goto "ch2-bert-message-lambda-intro";
		}
	}
	if ("ch2-cutseen-last-parts-done") {
		if (!"ch2-parts-round-4-backstory") {
			goto "ch2-lambda-round-4";
		}
	}
	
	if ("ch2-toot-done") {
		goto "command-man-normal-convo";
	}

	// You're talking to Lambda over serial for the first time:
	// (You need to finish the toot)
	goto "ch2-toot-check";
}

"command-parts-keyboard" {
	if ("ch2-storyflag-round" < 2) {
		goto "command-parts-ahead";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-keyboard") {
		show serial_dialog { "<m>LAMBDA</>: You've got a keyboard plugged in already... though I realize it's not going to be the easiest to use. But hey, did you know that very early keyboards used a lot of \"chords\" as part of their normal input paradigm?\n\t...Yeah, they kind of sucked. QWERTY is much nicer." };
	} else if ("ch2-carrying-keyboard") {
		show serial_dialog { "<m>LAMBDA</>: I've checked up on that specific model of keytar, and fortunately it can connect to a computer over USB. Just plug it into the outside of the case and you're good to go.\n\tA MIDI interface would have been trickier, but I'm sure we could have found an adaptor around somewhere." };
	} else {
		copy!("ch2-describe-keyboard")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-mouse" {
	if ("ch2-storyflag-round" < 2) {
		goto "command-parts-ahead";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-mouse") {
		show serial_dialog { "<m>LAMBDA</>: You've got your mouse dongle plugged in, so the mouse will work fine now once we get the rest of the machine up and running. Oh, that's assuming its batteries are charged, I guess." };
	} else if ("ch2-carrying-mouse") {
		show serial_dialog { "<m>LAMBDA</>: Installing the mouse is easy. All you have to do is plug the end into a USB port. If it's an optical mouse, you can tell it's plugged in correctly if the red laser comes on once you turn on the computer.\n\tOh, whoops, yours is wireless, huh? Well, then, just plug the dongle into one of the USB ports, and make sure the mouse has fresh batteries." };
	} else {
		copy!("ch2-describe-mouse")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-harddrive" {
	if ("ch2-storyflag-round" < 2) {
		goto "command-parts-ahead";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-harddrive") {
		show serial_dialog { "<m>LAMBDA</>: The hard drive is already in place, so we'll have all the on-board storage we'll need. Not sure how much space we'll have, given how it was constructed, but... I'm sure it'll be fine." };
	} else if ("ch2-carrying-harddrive") {
		show serial_dialog { "<m>LAMBDA</>: The hard drive will need to be plugged into two cables: first, a power cable from the power supply, and second, a SATA cable off the motherboard.\n\tSince that hard drive is... uh, unconventional... just try your best to attach those cables somehow. You'll know if it fits." };
	} else {
		copy!("ch2-describe-harddrive")
		show serial_dialog {
			"\tUse one of the solder stations in the workshop to combine both items into a <m>HARD DRIVE</>."
		};
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-plate" {
	if ("ch2-storyflag-round" < 2) {
		goto "command-parts-ahead-confused";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-plate") {
		show serial_dialog { "<m>LAMBDA</>: You've already... um, \"used\" the plate to make a <m>hard drive</>. You're good." };
	} else if ("ch2-carrying-plate") {
		if (!"ch2-carrying-needle") {
			show serial_dialog { "<m>LAMBDA</>: You've got a good <m>plate</> already. So now what you need is a phonograph <m>needle</> to act as a read head." };
		} else {
			show serial_dialog { "<m>LAMBDA</>: Now that you have both the <m>plate</> and <m>needle</>, you can use one of the solder stations to combine them.\n\tHuh, I can confirm that the iron content of the plate is high enough for this to actually work. Not that I was worried...." };
		}
	} else {
		copy!("ch2-describe-plate")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-needle" {
	if ("ch2-storyflag-round" < 2) {
		goto "command-parts-ahead-confused";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-needle") {
		show serial_dialog { "<m>LAMBDA</>: You've already... um, \"used\" the <m>needle</> to make a <m>hard drive</>. You're good." };
	} else if ("ch2-carrying-needle") {
		if (!"ch2-carrying-plate") {
			show serial_dialog { "<m>LAMBDA</>: You've got a <m>needle</> for a read head already. So now what you need is a dinner <m>plate</> to act as a hard drive platter." };
		} else {
			show serial_dialog { "<m>LAMBDA</>: Now that you have both the <m>needle</> and <m>plate</>, you can use one of the solder stations to combine them.\n\tOh, wow, it looks like that phonograph needle is electric. Weird, but also serendipitous." };
		}
	} else {
		copy!("ch2-describe-needle")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-ramchips" {
	if ("ch2-storyflag-round" < 2) {
		goto "command-parts-ahead";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-ramchips") {
		show serial_dialog { "<m>LAMBDA</>: The RAM is in place, nice and tight. They're all set." };
	} else if ("ch2-carrying-ramchips") {
		show serial_dialog { "<m>LAMBDA</>: To install RAM... \"chips...\" you'll need to find pairs of matching RAM slots on the motherboard. Usually you'd want to use two or four -- it just can't be an odd number. And then....\n\tWell, it's going to be really freaky, but you need to <bold>SHOVE</> them in there, all right? They need to really <bold>CRUNCH</> on in there." };
	} else {
		copy!("ch2-describe-ramchips")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-clock" {
	if ("ch2-storyflag-round" < 3) {
		goto "command-parts-ahead";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-clock") {
		show serial_dialog { "<m>LAMBDA</>: The clock's installed already. It's just... you know... clocking away." };
	} else if ("ch2-carrying-clock") {
		show serial_dialog { "<m>LAMBDA</>: So the system clock is normally built in, and -- well, you know what? You got that giant grandfather clock to fit inside your pocket somehow, so just... uh... do that again, but for the mainframe enclosure instead." };
	} else {
		copy!("ch2-describe-clock")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-cpu" {
	if ("ch2-storyflag-round" < 3) {
		goto "command-parts-ahead";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-cpu") {
		show serial_dialog { "<m>LAMBDA</>: Your CPU is in place already, ready to go off and be the brain of the whole operation." };
	} else if ("ch2-carrying-cpu") {
		show serial_dialog { "<m>LAMBDA</>: Line up the CPU with the slot, and gently set it down. Then press the clamp down to lock it in place.\n\tNow the icky part. You got to put thermal paste on there. Try not to get any on your hands, and try to place it so there won't be any bubbles when you press the heat sink on top. Then... well, press the heat sink on top." };
	} else {
		copy!("ch2-describe-cpu")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-goldfish" {
	if ("ch2-storyflag-round" < 3) {
		goto "command-parts-ahead-confused";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-goldfish") {
		show serial_dialog { "<m>LAMBDA</>: You've already... um, \"used\" the goldfish to make a CPU. You're good." };
	} else if ("ch2-carrying-goldfish") {
		if (!"ch2-carrying-abacus") {
			show serial_dialog { "<m>LAMBDA</>: You've got the goldfish already, the \"thinking\" part of the CPU, so you'll need to pick up the other half: the abacus." };
		} else {
			show serial_dialog { "<m>LAMBDA</>: Now that you have both the goldfish and abacus, you can use one of the solder stations to combine them.\n\tAh... don't worry about the fact that the goldfish is sentient and its identity will be transmogrified by this. It's all going to be fine." };
		}
	} else {
		copy!("ch2-describe-goldfish")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"command-parts-abacus" {
	if ("ch2-storyflag-round" < 3) {
		goto "command-parts-ahead-confused";
	}
	show serial_dialog "spacer";
	if ("ch2-installed-abacus") {
		show serial_dialog { "<m>LAMBDA</>: You've already got the abacus combined with the goldfish into a CPU, so don't worry about the abacus half of things now." };
	} else if ("ch2-carrying-abacus") {
		if (!"ch2-carrying-goldfish") {
			show serial_dialog { "<m>LAMBDA</>: You've got an abacus already, the \"data\" part of the CPU, so you'll need to pick up the other half: the goldfish." };
		} else {
			show serial_dialog { "<m>LAMBDA</>: Now that you have both the abacus and goldfish, you can use one of the solder stations to combine them." };
		}
	} else {
		copy!("ch2-describe-abacus")
	}
	show serial_dialog {" "};
	show serial_dialog "lambda-over";
}

"warp-common" {
	if ("ch2-wait-for-hat-touch") {
		goto "ch2-wait-for-hat-touch-message";
	}
	// all warps will fail before the computer is ok
	// if you're PHYSICALLY OUTSIDE the castle
	if (!"ch2-ring-zero-enabled-in-castle") {
		if (!debug_mode) {
			if ("ch2-in-room" == 0) {
				goto "warp-ch2-town-check-fail-message";
			}
		}
	}
	"ch2-in-room" = 0;
	"current-chapter" = 2; // todo: remove this; it's here for ch2 debug mode protection for the WOPR room
	copy!("warping-out-fade-out")
}

"warp-ch2-castle-exterior" {
	copy!("warp-common")
	load map "ch2-castle-outside";
}

"warp-ch2-1" {
	copy!("warp-common")
	copy!("ch2-load-castle-1-special")
}

"warp-ch2-11" {
	copy!("warp-common")
	copy!("ch2-load-castle-11-special")
}

"warp-ch2-12" {
	copy!("warp-common")
	copy!("ch2-load-castle-12-special")
}

"warp-ch2-13" {
	copy!("warp-common")
	copy!("ch2-load-castle-13-special")
}

"warp-ch2-14" {
	copy!("warp-common")
	copy!("ch2-load-castle-14-special")
}

"warp-ch2-21" {
	copy!("warp-common")
	copy!("ch2-load-castle-21-special")
}

"warp-ch2-22" {
	copy!("warp-common")
	copy!("ch2-load-castle-22-special")
}

"warp-ch2-23" {
	copy!("warp-common")
	copy!("ch2-load-castle-23-special")
}

"warp-ch2-31" {
	copy!("warp-common")
	copy!("ch2-load-castle-31-special")
}

"warp-ch2-32" {
	copy!("warp-common")
	copy!("ch2-load-castle-32-special")
}

"warp-ch2-33" {
	copy!("warp-common")
	load map "ch2-castle-33";
}

"warp-ch2-34" {
	copy!("warp-common")
	load map "ch2-castle-34";
}

"warp-ch2-99" {
	copy!("warp-common")
	load map "ch2-castle-99";
}

"warp-ch2-town-destination-check" {
	// all warps will fail before the computer is ok
	// if your DESTINATION is outside the castle
	if (!"ch2-ring-zero-enabled-in-castle") {
		if (!debug_mode) {
			goto "warp-ch2-town-check-fail-message";
		}
	}
}

"warp-ch2-town" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-town";
}

"warp-ch2-bakery" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-bakery";
}

"warp-ch2-greenhouse" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-greenhouse";
}

"warp-ch2-wopr" {
	if (
		"wopr-backdoor-found"
		|| debug_mode
	) {
		copy!("warp-ch2-town-destination-check")
		copy!("warp-common")
		load map "woprhouse";
	} else {
		goto "warp-fail";
	}
}

"warp-ch2-library" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-lodge";
}

"warp-ch2-rtfmroom" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-lodge-rtfm";
}

"warp-ch2-magehouse" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-magehouse";
}

"warp-ch2-bobsclub" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-bobsclub";
}

"warp-ch2-bobsclub-basement" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-bobsclub-basement";
}

"warp-ch2-oldcouplehouse" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-oldcouplehouse";
}

"warp-ch2-smithfamily" {
	copy!("warp-ch2-town-destination-check")
	copy!("warp-common")
	load map "ch2-smithfamily";
}

"on_load-main_menu" {
	"current-chapter" = 0;
	copy!("register-colors")

	// todo: write commentary

	// copy!("register-commentary")
	// if (!ch1-commentary-notice) {
	// 	serial-commentary = true;
	// 	show serial dialog {
	// 		" "
	// 		"<c><bold>Serial commentary</> <c>is available for chapter 1!</> (This is on by default.) To enable or disable this commentary, type <c>COMMENTARY ON</> or <c>COMMENTARY OFF</> at the main menu."
	// 	}
	// 	ch1-commentary-notice = true;
	// }

	/* DEBUG QUICK STUFFS */
	if (debug_mode) {
		command debug = "debug";
		command hub = "debug-hub";
		command honk = "system_bell";
		command bob = "debug-bob";
		command bob2 = "debug-bob2";
		command bob3 = "debug-bob3";
		command simon = "debug-menu-simon";
		command king = "debug-king";
		command ch2 = "menu-chapter_select-2";
		command rtfm = "command-rtfm";
		command buffer + "test" = "debug-buffertest";
		command boot = "ch2-bootup";
		command post = "debug-post";
		// command cutbug = ch2-toot-step3-end2;
		command skip + "1" = "debug-jump-to-round1";
		command skip + "2" = "debug-jump-to-round2";
		command skip + "3" = "debug-jump-to-round3";
		command skip + "4" = "debug-jump-to-round4";
		copy!("register-warp")
		copy!("register-storyflag")
	}
}

"debug-post" {
	"ch2-wizard-backstory" = true;
	copy!("debug-set-flags-to-round4")
	"ch2-seen-room-99" = true;
	"ch2-map-mainframeos" = false;
	"ch2-carrying-mainframeos" = true;
	"ch2-cutseen-castle99" = true;
	"ch2-carrying-mainframeos" = false;
	copy!("ch2-install-mainframeos")
	"ch2-ring-zero-enabled-in-castle" = true;
	"ch2-storyflag-round" = 5;
	"credits-from-menu" = false;
	warp_state = "ch2-ending";
	load map "ch2-castle-outside";
}

"debug-menu-simon" {
	serial_control = true;
	"ch2-has-artifact" = true;
	hex_control = true;
	"current-chapter" = 2;
	copy!("debug-finish-toot")
	"ch2-storyflag-round" = 2;
	copy!("warp-ch2-31") // this has a load_map in it
}

"system_bell" {
	show serial_dialog {
		"Honk!"
	};
}

"main_menu" {
	player on_tick = null_script;
	show dialog {
		name " "
		border_tileset menu
		"CHOOSE YOUR FATE"
		> "Play Game" = "menu-play_game"
		> "Play Demo" = "load_map-demo_map"
		> "Bling Mode" = "menu-bling-mode"
		> "Credits" = "menu-credits-choice"
	};
}

"menu-credits-choice" {
	show dialog {
		name " "
		border_tileset menu
		"CREDITS"
		> "Chapter 1 credits" = "menu-credits"
		> "Chapter 2 credits" = "menu-credits2"
		> "Back" = "main_menu"
	};
}

"menu-bling-mode" {
	show dialog {
		name " "
		border_tileset menu
		"SAVE YOUR SCREEN"
		> "DC801 showcase" = "menu-bling-dc801-showcase"
		> "Flying \"Toasters\"" = "start_bling-flying-toasters"
		> "QR Codes" = "start_bling-qr"
		> "Back" = "main_menu"
	};
}

"menu-bling-dc801-showcase" {
	show dialog {
		name " "
		border_tileset menu
		"DC801 SHOWCASE"
		> "Auto mode" = "start_bling-rotate-auto"
		> "Manual mode" = "start_bling-rotate-manual"
		> "Back" = "menu-bling-mode"
	};
}

"menu-play_game" {
	show dialog {
		name " "
		border_tileset menu
		"PLAY GAME"
		> "Load Game" = "menu-load_game"
		> "New Game" = "menu-new_game"
		> "Erase Save" = "menu-erase_save"
		> "Back" = "main_menu"
	};
}

"menu-erase_save" {
	show dialog {
		name " "
		border_tileset menu
		"BOOM TIME!"
		> "Erase slot 0" = "menu-erase_save-0"
		> "Erase slot 1" = "menu-erase_save-1"
		> "Erase slot 2" = "menu-erase_save-2"
		> "Back" = "menu-play_game"
	};
}

"menu-load_game" {
	show dialog {
		name " "
		border_tileset menu
		"LOAD GAME"
		> "Slot 0" = "menu-load_game-0"
		> "Slot 1" = "menu-load_game-1"
		> "Slot 2" = "menu-load_game-2"
		> "Back" = "menu-play_game"
	};
}

"menu-new_game" {
	show dialog {
		name " "
		border_tileset menu
		"NEW GAME"
		> "Slot 0" = "menu-new_game-0"
		> "Slot 1" = "menu-new_game-1"
		> "Slot 2" = "menu-new_game-2"
		> "Back" = "menu-play_game"
	};
}

"menu-player-name-q" {
	show dialog {
		name " "
		border_tileset menu
		"NEW GAME: Pick your name."
		> "Red" = "menu-player-name-preset1"
		> "Bubbles" = "menu-player-name-preset2"
		> "Black Mage" = "menu-player-name-preset3"
		> "Gimme something random" = "menu-player-name-random"
	};
}

"menu-player-name-confirm" {
	show dialog {
		name " "
		border_tileset menu
		"Your name is %PLAYER%?"
		> "Yes" = "start-new-game-with-name"
		> "No" = "menu-player-name-reset"
	};
}

"menu-player-name-random" {
	rand!(
		player name = [
			"Chara",
			"Buster",
			"Tidus",
			"Frisk",
			"Farnsworth",
			"Cloud",
			"Ash",
			"Crono",
			"Terra",
			"Kremit",
			"Zidane",
			"Cecil",
			"Squall",
			"Roxas",
			"Steamed Hams",
			"Spy",
			"Tom Honks",
			"VeeVee",
			"XDDCC",
			"Bub"
		];
	)
	show dialog {
		name " "
		border_tileset menu
		"Your name is %PLAYER%?"
		> "Reroll random name" = "menu-player-name-random"
		> "Yes" = "start-new-game-with-name"
		> "No" = "menu-player-name-reset"
	};
}

"menu-chapter_select-q" {
	copy!("ch1-count-flags")
	copy!("ch2-count-flags")
	show dialog {
		name " "
		border_tileset menu
		"PLAY (slot $slot-number$: \"%PLAYER%\")"
		> "Chapter 1 ($ch1-storyflags-tally$/11)" = "menu-chapter_select-1"
		> "Chapter 2 ($ch2-storyflags-tally$/10)" = "menu-chapter_select-2-check"
		> "Back" = "menu-play_game"
	};
}

"menu-chapter_select-2-check" {
	if ("ch1_finished" || "warned_ch1_incomplete") {
		// passthrough
		goto "menu-chapter_select-2";
	} else {
		"warned_ch1_incomplete" = true;
		show dialog {
			name " "
			border_tileset menu
			"Chapter 1 is unfinished!"
			> "Play chapter 2 anyway" = "menu-chapter_select-2"
			> "Never mind" = "menu-chapter_select-q"
		};
	}
}

"menu-save_game" {
	show dialog {
		name "Save Game"
		border_tileset codec
		portrait floppy
		"Would you like to save your progress?"
		> "Yes" = "menu-save_game-yes"
		> "No" = "menu-save_game-no"
		> "Return to Main Menu" = "menu-save_game-main_menu"
	};
}

"on_load-woprhouse" {
	if ("tuesdayd") {
		command "rtfm" = "command-rtfm";
	}
	if ("current-chapter" == 2) {
		// entrance text
		show serial_dialog "spacer";
		show serial_dialog { "Entering <bold>WOPR ROOM</>..." };
		copy!("ch2-map-init")
	}
	if (!"wopr-backdoor-found") {
		player_control = off;
		"wopr-backdoor-found" = true;
		if (warp_state != "warped") {
			player position -> geometry "walk_from-north" length over 600ms;
		}
		wait 400ms;
		show dialog {
			PLAYER "Whoa! It looks like I found some kind of back door."
		};
		player_control = on;
	}
}
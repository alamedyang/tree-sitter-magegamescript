include!("header.mgs")

/* ---------- on_tick ---------- */

billy_glitchwatch {
	if entity Billy is not glitched then goto billy_now_unglitched;
}
billy_now_unglitched {
	set flag billy_unglitched to true;
	goto null_script;
}
kid_glitchwatch {
	if entity Kid is not glitched then goto kid_now_unglitched;
}
kid_now_unglitched {
	set flag kid_unglitched to true;
	goto null_script;
}

/* ---------- goat handler (on_tick) ---------- */

check_if_player_is_goat_high {
	if entity "%PLAYER%" is inside geometry high then goto move_goats_to_low
}
check_if_player_is_goat_low {
	if entity "%PLAYER%" is inside geometry low then goto move_goats_to_high
}
move_goats_to_low {
	set entity Billy on_tick to move_billy_to_low;
	set entity Kid on_tick to move_kid_to_low;
	set entity Verthandi on_tick to check_if_player_is_goat_low;
}
move_goats_to_high {
	set entity Billy on_tick to move_billy_to_high;
	set entity Kid on_tick to move_kid_to_high;
	set entity Verthandi on_tick to check_if_player_is_goat_high;
}
move_billy_to_low {
	walk entity Billy to geometry low1 over 900ms;
	loop entity Billy along geometry low1 over 3000ms;
}
move_kid_to_low {
	walk entity Kid to geometry low2 over 1100ms;
	loop entity Kid along geometry low2 over 3400ms;
}
move_billy_to_high {
	walk entity Billy to geometry high1 over 700ms;
	loop entity Billy along geometry high1 over 3000ms;
}
move_kid_to_high {
	walk entity Kid to geometry high2 over 800ms;
	loop entity Kid along geometry high2 over 3400ms;
}

/* ---------- dialog: glitched lesson ---------- */

show_dialog_verthandi_glitched {
	if flag glitch_lesson is true then goto show_dialog_verthandi_glitched_q
	show dialog {
		SELF "Oh! It looks like you would like a lesson on glitched entities! Please allow me to explain."
	}
	goto show_dialog_verthandi_glitched_lesson;
}
show_dialog_verthandi_glitched_q {
	show dialog {
		SELF "Would you like to hear the lesson again?"
		> "Yes" : goto "show_dialog_verthandi_glitched_lesson"
		> "No" : goto "show_dialog_verthandi_glitched_s"
	}
}
show_dialog_verthandi_glitched_lesson {
	show dialog {
		SELF "Ring Zero provides you access to our world's superficial state, but there is also a deeper state you cannot see, nor control."
		"Our physical appearance is only superficial, and our deeper soul remembers our true identities, even if our superficial apperance has changed."
		"Given enough time, any superficial changes will revert on their own --"
		"Unless you have severed the body and soul, too, like the Big Bad did when he was last here."
		"But once restored, the body and soul can reconnect again, and after that, not even Ring Zero can glitch them for long!"
		"That's why I'm not worried about being glitched! I know that my body and soul are still connected, and I will return to normal soon!"
		"I hope this explanation was enlightening!"
	}
	set flag glitch_lesson to true;
	goto show_dialog_verthandi_wrapup;
}
show_dialog_verthandi_glitched_s {
	show dialog { SELF "I might be glitched for now, but my soul is quite unharmed! My appearance will return to normal soon." }
	goto show_dialog_verthandi_wrapup;
}

/* ---------- dialog: other ---------- */


show_dialog_verthandi_start {
	copy face_player;
	if (entity "%SELF%" is glitched) {
		goto show_dialog_verthandi_glitched; // JUMP
	}
	if (flag storyflag_verthandi is true) {
		show dialog { SELF "Thank you for everything you've done!" }
	} else {
		// find unglitch count
		mutate unglitch_count = 0;
		if (flag goldfish_unglitched is true) { mutate unglitch_count + 1; }
		if (flag timmy_unglitched is true) { mutate unglitch_count + 1; }
		if (flag fountain_unglitched is true) { mutate unglitch_count + 1; }
		if (flag lodge_cat_unglitched is true) { mutate unglitch_count + 1; }
		if (flag billy_unglitched is true) { mutate unglitch_count + 1; }
		if (flag kid_unglitched is true) { mutate unglitch_count + 1; }
		if (flag main_hamster_unglitched is true) { mutate unglitch_count + 1; }
		mutate total_glitches = 7;
		mutate total_glitches - unglitch_count;
		// use unglitch count
		if (variable total_glitches is 0) {
			if (flag verthandi_backstory is false) {
				show dialog {
					SELF "Oh! It appears you've already restored everyone that was glitched!"
					"How wonderful! I can't thank you enough!"
				}
			} else {
				show dialog {
					SELF "You've restored everyone! Oh, how wonderful!"
					"Oh, thank you, %PLAYER%!"
				}
			}
			copy calculate_hint_tracking_series;
			if (variable hint_tracking_check is 11) {
				copy set_hint_none;
			}
			set flag storyflag_verthandi to true;
			set flag goats_both_unglitched to true;
		} else if (flag verthandi_backstory is true) {
			if (flag goats_both_unglitched is true) {
				if (variable total_glitches is 1) {
					show dialog { SELF "I hear one more glitched soul that needs help!" }
				} else {
					show dialog { SELF "I can hear the cries of $total_glitches$ glitched souls...." }
				}
				if (flag timmy_unglitched is false || flag lodge_cat_unglitched is false) {
					show dialog { SELF "Perhaps... somewhere in the library?" }
				} else if (flag main_hamster_unglitched is false || flag fountain_unglitched is false) {
					show dialog { SELF "Perhaps... somewhere outdoors?" }
				} else if (flag goldfish_unglitched is false) {
					show dialog { SELF "Perhaps... somewhere in your home?" }
				}
			} else if (entity Billy is glitched || entity Kid is glitched) {
				show dialog { SELF "Oh, won't you help the baby goats?" }
			} else {
				show dialog {
					SELF "You've restored the baby goats! Oh, thank you!"
					"But I still hear cries for help elsewhere in town. Please, can you help?"
				}
				set flag goats_both_unglitched to true;
			}
			copy set_hint_glitch;
		} else {
			show dialog {
				SELF "Some time ago, the Big Bad brought chaos to this place."
				"To amuse himself, he scrambled the outward appearance of many of the people, animals, and objects around town."
			}
			if (entity Billy is glitched || entity Kid is glitched) {
				show dialog {
					SELF "These dear baby goats were among his many victims."
					"They are so young, and so full of life.... yet you cannot even hear their cheerful bleats!"
					"You have been blessed with the power to undo what had been done to them. Would you please help them?"
				}
			} else {
				show dialog {
					SELF "These dear baby goats are back to normal, but I still hear cries for help elsewhere in town."
					"There is more to unglitch! Please, will you set things right?"
				}
				set flag goats_both_unglitched to true;
			}
			set flag verthandi_backstory to true;
			copy set_hint_glitch;
		}
	}
	goto show_dialog_verthandi_wrapup;
}

show_dialog_verthandi_wrapup {
	turn entity Verthandi toward entity Kid;
	// RESET
	set entity "%SELF%" on_interact to show_dialog_verthandi_start;
}

show_dialog_goat {
	if (entity "%SELF%" is glitched) {
		show dialog { SELF "ba15456`-------++++++gf\n+++++-//==========/*8901ikg" }
	} else {
		show dialog { SELF "Baaahhh!" }
	}
	if (flag goats_both_unglitched is false) {
		copy set_hint_glitch;
	}
	set entity "%SELF%" on_interact to show_dialog_goat;
}

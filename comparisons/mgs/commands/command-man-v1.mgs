include!("header.mgs")

// REGISTER

register_manual {
	// the default set
	register man -> command-man;
	register man + man -> man_man;
	register man + look -> man_look;
	register man + go -> man_go;
	register man + help -> man_help;
	register man + rtfm -> man_rtfm;
	register man fail -> man_fail;
}

// MAN PAGE

man_man {
	show serial dialog spacer;
	show serial dialog {
		"<c><bold>MGE GENERAL COMMANDS MANUAL - MAN</>"
		" "
		"Displays manual pages for various MGE serial commands. Type <c>MAN</> followed by the name of the command you want to read about, e.g. <c>MAN LOOK</>"
		" "
		"<m>NOTE</>: Hi, there, birthday mage! I've rigged this thing to call me if you use <c>MAN</> as a single word. I \"hacked\" the man page to tell you that!"
	}
}

// FAIL

man_fail {
	show serial dialog spacer;
	show serial dialog {
		"<bold>MAN PAGE NOT FOUND!</> There is no documentation for that command, or that command does not exist."
	}
}

// COMMAND

command-man {
	if (dialog is open) {
		if (flag can_interrupt_dialog is true) {
			end dialog;
			set flag can_interrupt_dialog to false;
		}
	}
	if (variable ch2_in_room is 99) {
		show dialog {
			name Lambda portrait lambda "Sorry, it's a little awkward to text chat with you when you're looking over my shoulder."
		}
	} else if (
		flag ch2_ring_zero_enabled_in_castle is true // the artifact is full power
		|| variable ch2_in_room is not 0 // OR you're in the castle
	) {
		// `man` works normally
		goto command_man_normal;
	} else {
		// otherwise, `man` cannot reach Lambda
		copy ch2_wireless_error;
	}
}

ch2_wireless_error {
	show serial dialog spacer;
	show serial dialog {
		"<bold><r>ERROR</>: <bold>lambda-talk</> timed out"
		" "
		"Connection to secure network \"GIBSON\" could not be established. Please move artifact closer to castle base station and try again."
		" "
		"<bold>lambda-talk</>: exited with code 1"
	}
}

command_man_normal {
	if (flag ch2_cutseen_bert_secret is true) {
		if (flag ch2_lambda_bert_backstory is false) {
			goto ch2_bert_secret_lambda_intro;
		} else if (flag ch2_parts_round_2_backstory is false) {
			goto ch2_lambda_round_2_parts1;
		}
	}
	if (flag ch2_cutseen_bert_message is true) {
		if (flag ch2_parts_round_3_backstory is false) {
			goto ch2_bert_message_lambda_intro;
		}
	}
	if (flag ch2_cutseen_last_parts_done is true) {
		if (flag ch2_parts_round_4_backstory is false) {
			goto ch2_lambda_round_4;
		}
	}
	
	if (flag ch2_toot_done is true) {
		goto command_man_normal_convo;
	}

	// You're talking to Lambda over serial for the first time:
	// (You need to finish the toot)
	goto ch2_toot_check;
}

/* ---------- LAMBDA NORMAL CONVO ---------- */

command_man_normal_convo {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: What do you want to know?"
		" "
	}
	goto ch2_lambda_topic_q;
}

ch2_lambda_topic_q {
	if (variable ch2_storyflag_round is < 5) {
		goto ch2_lambda_topic_q_midgame;
	} else {
		goto ch2_lambda_topic_q_end;
	}
}
ch2_lambda_topic_q_midgame {
	show serial dialog {
		"(Ask about:)"
		# "Parts" : ch2_lambda_topic_parts
		# "Using the artifact" : ch2_lambda_topic_artifact
		# "The mainframe" : ch2_lambda_topic_mainframe
		# "The castle" : ch2_lambda_topic_castle
		# "Someone specific" : ch2_lambda_topic_person_start
		# "(Quit)" : ch2_lambda_ishouldgo
	}
}
ch2_lambda_topic_q_end {
	show serial dialog {
		"(Ask about:)"
		# "Using the artifact" : ch2_lambda_topic_artifact
		# "The mainframe" : ch2_lambda_topic_mainframe
		# "The castle" : ch2_lambda_topic_castle
		# "Someone specific" : ch2_lambda_topic_person_start
		# "(Quit)" : ch2_lambda_ishouldgo
	}
}

ch2_lambda_ishouldgo {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: I should go."
		" "
		"<m>LAMBDA</>: No problem! Just feel free to type <c>MAN</> if you want to ask me a question about anything, and <c>HELP</> if you want to know all the commands you can use."
		" "
	}
	show serial dialog lambda_over;
}

/* ---------- ARTIFACT ---------- */

ch2_lambda_topic_parts {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: You had a question about the parts?"
		" "
	}
	goto ch2_lambda_topic_parts_q;
}
ch2_lambda_topic_parts_q {
	show serial dialog {
		"(Ask about:)"
		# "Parts list" : ch2_lambda_topic_parts_list
		# "Installing parts" : ch2_lambda_topic_parts_installation
		# "(Go back)" : command_man_normal_convo
	}
}
ch2_lambda_topic_parts_list {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What is the parts list?"
		" "
		"<m>LAMBDA</>: To see the parts list, use the magic word -- that is, the command -- <c>PARTS</>. To see information about a specific part, type <c>PARTS</> and then the name of the part. For example, to ask about the monitor, type: <c>PARTS <c>MONITOR</>."
		" "
	}
	goto ch2_lambda_topic_parts_q;
	
}

ch2_lambda_topic_parts_installation {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: How do I install the parts once I've got them?"
		" "
		"<m>LAMBDA</>: Just bring them to the mainframe enclosure in the first room of the castle. That's the sort of beige-looking computer box by the northernmost exit. The parts themselves should be straightforward to install, but do feel free to ask me for help."
		" "
	}
	goto ch2_lambda_topic_parts_q;
}

ch2_lambda_topic_artifact {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: You had a question about the artifact?"
		" "
	}
	goto ch2_lambda_topic_artifact_q;
}

ch2_lambda_topic_artifact_q {
		show serial dialog {
		"(Ask about:)"
		# "Magic words (Commands)" : ch2_lambda_topic_artifact_words
		# "(Go back)" : command_man_normal_convo
	}
}

ch2_lambda_topic_artifact_words {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What can you tell me about \"magic words?\" You said they were commands?"
		" "
		"<m>LAMBDA</>: Yeah, so, when I say \"magic words\" I mean serial commands -- that is, things you type in the terminal to make the castle artifact do something."
		"\tYou can use the command <c>HELP</> to see a list of commands that are valid at the moment. To learn more about a specific command, type <c>MAN</> plus the name of the command. For example, type <c>MAN LOOK</> to see the manual page for the <c>LOOK</> command."
		" "
	}
	goto ch2_lambda_topic_artifact_q;
}

/* ---------- MAINFRAME ---------- */

ch2_lambda_topic_mainframe {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: You had a question about the mainframe?"
		" "
	}
	goto ch2_lambda_topic_mainframe_q;
}

ch2_lambda_topic_mainframe_q {
		show serial dialog {
		"(Ask about:)"
		# "Why did you break it?" : ch2_lambda_mainframe_broken
		# "How broken is it?" : ch2_lambda_mainframe_broken_1
		# "How do we fix it?" : ch2_lambda_mainframe_fix_1
		# "(Go back)" : command_man_normal_convo
	}
}

ch2_lambda_mainframe_broken {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Why did you break it?"
		" "
		"<m>LAMBDA</>: Like I said, I broke it to keep it out of the <r>Big <r>Bad</>'s hands."
		"\tThat artifact is capable of doing quite a lot of damage, you know. It's only a problem that we're lacking it now because of that recent earthquake."
		" "
	}
	goto ch2_lambda_topic_mainframe_q;
}

ch2_lambda_mainframe_broken_1 {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What exactly about it is broken?"
		" "
		"<m>LAMBDA</>: Well, sort of... everything. It's in a million pieces, to be precise."
		" "
		# "Thorough. Nice!" : ch2_lambda_mainframe_broken_2
		# "Was that necessary?" : ch2_lambda_mainframe_broken_2
	}
}
ch2_lambda_mainframe_broken_2 {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: Yeah, so, um... it might not have been necessary, strictly speaking. I wiped its software first. That would've been enough on its own, to be honest."
		"\tI don't know. I just wanted to be <bold>sure</>. I sort of regret it now."
		" "
	}
	goto ch2_lambda_topic_mainframe_q;
}

ch2_lambda_mainframe_fix_1 {
	show serial dialog spacer;
	if (variable ch2_storyflag_round is < 4) {
		show serial dialog {
			"<c>YOU</>: How do we fix it? What do we need?"
			" "
			"<m>LAMBDA</>: We'll have to build a new computer from scratch. The old bits are... well, just bits -- bits of copper and plastic and silicon debris."
			"\tBut there should be enough <m>computer parts</> scattered throughout the castle. I have my parts list right here. The software though... I'll, um, get back to you about that."
			" "
		}
	} else if (variable ch2_storyflag_round is 4) {
		show serial dialog {
			"<c>YOU</>: How do we fix it? What do we need?"
			" "
			"<m>LAMBDA</>: We've rebuilt the computer itself, so all we need now is its operating system. I've got it ready now, so come on up to my secret lab and I'll give it to you."
			" "
		}
	} else {
		show serial dialog {
			"<c>YOU</>: How do we fix it? What do we need?"
			" "
			"<m>LAMBDA</>: The mainframe itself is all fixed -- which is to say, we've bodged things well enough for now."
			"\tThough there's still the matter of Aurelius. I've already sent for a CPU to come in the mail, so all we have to do is wait for it to get here, then we can swap it out and put him back to normal."
			"\tAs for the other bodges... you know, maybe it's best not to mess with anything else if it's all working."
			" "
		}

	}
	goto ch2_lambda_topic_mainframe_q;
}

/* ---------- CASTLE ---------- */

ch2_lambda_topic_castle {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: You had a question about the castle?"
		" "
	}
	goto ch2_lambda_topic_castle_q;
}

ch2_lambda_topic_castle_q {
		show serial dialog {
		"(Ask about:)"
		# "Whose castle is this?" : ch2_lambda_castle_who
		# "The earthquake caused damage?" : ch2_lambda_castle_damage
		# "(Go back)" : command_man_normal_convo
	}
}

ch2_lambda_castle_who {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Whose castle is this?"
		" "
		"<m>LAMBDA</>: I'm kind of surprised you didn't know, but it's King Gibson's castle. He's in charge of the whole place. He used to be in charge of the whole geographical area, too, not just the castle structure itself, but -- well, the bits of land around here have become abruptly more isolated recently. It's complicated."
		" "
	}
	goto ch2_lambda_topic_castle_q;
}
ch2_lambda_castle_damage {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: The earthquake caused some damage?"
		" "
		"<m>LAMBDA</>: A bunch of doors got jammed or caved in. That's one of the reasons I'm letting you have the portable interface -- it'll let you get past blockages, and just about everyone inside the castle is trapped in place."
		"\tIf the mainframe were still working, we would've been able to... well, it would have enabled people to get around, anyway."
		" "
	}
	goto ch2_lambda_topic_castle_q;
}

/* ---------- PEOPLE (CONVO START) ---------- */

ch2_lambda_topic_person_start {
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: Who did you want to ask about?"
		" "
	}
	goto ch2_lambda_topic_person_q;
}
ch2_lambda_topic_person_s {
	show serial dialog {
		"\tUm, did you want to ask about anyone else?"
		" "
	}
	goto ch2_lambda_topic_person_q;
}

ch2_lambda_topic_person_q {
	show serial dialog {
		"(Type a name, or type <c>BACK</> to go back)"

		// people (brief)

		// central wing
		_ "WIZARD" : ch2_lambda_person_wizard
		_ "RACCOON" : ch2_lambda_person_raccoon
		_ "KURO" : ch2_lambda_person_kuro
		_ "CONCIERGE" : ch2_lambda_person_concierge
		_ "THE CONCIERGE" : ch2_lambda_person_concierge
		_ "TEMPLETON" : ch2_lambda_person_templeton
		_ "SEBASTIAN" : ch2_lambda_person_sebastian
		_ "THE GOLDFISH" : ch2_lambda_person_goldfish
		_ "GOLDFISH" : ch2_lambda_person_goldfish
		_ "AURELIUS" : ch2_lambda_person_aurelius
		_ "KING" : ch2_lambda_person_kinggibson
		_ "THE KING" : ch2_lambda_person_kinggibson
		_ "GIBSON" : ch2_lambda_person_kinggibson
		_ "KING GIBSON" : ch2_lambda_person_kinggibson
		// west wing
		_ "ALVIN" : ch2_lambda_person_alvin
		_ "SIMON" : ch2_lambda_person_simon
		_ "THEODORE" : ch2_lambda_person_theodore
		_ "SEA MOSS" : ch2_lambda_person_seamoss
		_ "GLORIA" : ch2_lambda_person_gloria
		_ "SAMSON" : ch2_lambda_person_samson
		_ "GREGORY" : ch2_lambda_person_gregory
		_ "THE CAT" : ch2_lambda_person_the_cat
		_ "A CAT" : ch2_lambda_person_a_cat
		_ "CAT" : ch2_lambda_person_a_cat
		_ "CLARA" : ch2_lambda_person_clara
		// east wing
		_ "JEANPAUL" : ch2_lambda_person_jeanpaul
		_ "JEAN PAUL" : ch2_lambda_person_jeanpaul
		_ "JEAN-PAUL" : ch2_lambda_person_jeanpaul
		_ "FRANKIE" : ch2_lambda_person_frankie
		_ "SCUZZY" : ch2_lambda_person_scuzzy
		_ "C K WATT" : ch2_lambda_person_ckwatt
		_ "CKWATT" : ch2_lambda_person_ckwatt
		_ "ROCCO" : ch2_lambda_person_rocco
		_ "TRACY" : ch2_lambda_person_tracy
		_ "HELVETICA" : ch2_lambda_person_helvetica
		// general
		_ "BOB" : ch2_lambda_person_bob
		_ "MARATHON BOB" : ch2_lambda_person_marathonbob
		_ "GUARDIAN BOB" : ch2_lambda_person_guardianbob
		_ "SOLID SNEK" : ch2_lambda_person_solidsnek

		// people (complicated)

		_ "ME" : ch2_lambda_person_player
		_ "BLACK MAGE" : ch2_lambda_person_player
		_ "MAGE" : ch2_lambda_person_player
		
		_ "YOU" : ch2_lambda_person_lambda
		_ "LAMBDA" : ch2_lambda_person_lambda

		_ "THE BIG BAD" : ch2_lambda_person_big_bad
		_ "BIG BAD" : ch2_lambda_person_big_bad

		_ "ALFONSO" : ch2_lambda_person_alfonso
		_ "JACKOB" : ch2_lambda_person_jackob
		_ "BERT" : ch2_lambda_person_bert

		_ "XA" : ch2_lambda_person_xa
		_ "XB" : ch2_lambda_person_xb
		_ "XC" : ch2_lambda_person_xc
		
		// admin

		_ "BACK" : command_man_normal_convo
		_ "Q" : command_man_normal_convo
		_ "QUIT" : command_man_normal_convo
		_ "STOP" : command_man_normal_convo
	}
	show serial dialog spacer;
	show serial dialog {
		"<m>LAMBDA</>: Sorry, not sure who you mean. You might have to be more specific."
		// "\t...Or perhaps even less specific." // Use this in case we find there's a limit for the quantity of free response options!
		" "
	}
	goto ch2_lambda_topic_person_q;
}

/* ---------- PEOPLE (BRIEF) ---------- */

// CENTRAL WING

// Wizard
ch2_lambda_person_wizard {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What's with this \"Wizard\" guy?"
		" "
		"<m>LAMBDA</>: Oh, yeah, the Wiz is pretty rad. He's awesome at setting up custom software configurations."
	}
	goto ch2_lambda_person_wizard_continued;
}
ch2_lambda_person_raccoon {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What's with the raccoon?"
		" "
		"<m>LAMBDA</>: The raccoon? Oh, you mean the Wiz. He's awesome at setting up custom software configurations."
	}
	goto ch2_lambda_person_wizard_continued;
}
ch2_lambda_person_wizard_continued {
	show serial dialog {
		"\tYou should have seen him at King Gibson's last Halloween party! He'd found this little blue wizard's hat and cape...."
	}
	goto ch2_lambda_topic_person_s;
}
// Kuro
ch2_lambda_person_kuro {
	show serial dialog spacer;
	if (flag ch2_seen_room_11 is false) {
		show serial dialog {
			"<c>YOU</>: Tell me about Kuro."
			" "
			"<m>LAMBDA</>: Sorry, I don't know anyone named Kuro."
		}
	} else {
		show serial dialog {
			"<c>YOU</>: Tell me about Kuro -- I mean, the little black bird in the front hallway."
			" "
			"<m>LAMBDA</>: Sorry, I don't know any little black birds. Kuro must be a visitor. If he's in the front hallway, then he didn't get very far into the castle and must be trapped, separated from whoever he must have wanted to visit. Poor thing."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Concierge
ch2_lambda_person_concierge {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about the castle concierge."
		" "
	}
	if (flag ch2_seen_room_12 is false) {
		show serial dialog {
			"<m>LAMBDA</>: The concierge? Have you been so deep into the castle hallway yet? But oh, you've probably guessed there's a concierge, right? It's true that this is <bold>that</> kind of castle. Overly formal, I mean."
			"\tI don't remember too much about that guy, but... oh, I guess I don't remember him at all. We must never have crossed paths much."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Oh yeah, that guy! He looks fierce but he's actually really friendly. His growling is a side effect of his condition, chronic lycanthropy."
			"\tHe's a music lover, if I'm remembering right. He's a little compulsive about it, always wanting something playing...."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Templeton
ch2_lambda_person_templeton {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Templeton."
		" "
	}
	if (flag ch2_seen_room_13 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Templeton, Templeton. One of King Gibson's advisors, I think. Or was he a giant blancmange? Sorry, I guess I don't know much about that guy."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Templeton is one of the king's advisors. You've met him, so you understand how paranoid he can be, but in practice he provides a good balance to Sebastian, who is more aggressive and who doesn't tend to think things through enough. He's really friendly, and a very heavy reader."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Sebastian
ch2_lambda_person_sebastian {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Sebastian."
		" "
	}
	if (flag ch2_seen_room_13 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Sebastian? He was one of King Gibson's advisors, wasn't he? I seem to recall him being combatative fairly often. Some kind of magic user, too."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Sebastian's heart is in the right place, but he's stubborn enough and brash enough that it can be hard to remember that, particularly if he has an opinion about something. But there's a reason King Gibson keeps him around, after all. He's good at his job."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Goldfish
ch2_lambda_person_aurelius {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Aurelius."
		" "
		"<m>LAMBDA</>: Aurelius, the goldfish? He's the King's regent."
	}
	goto ch2_lambda_person_goldfish_aurelius;
}
ch2_lambda_person_goldfish {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about the goldfish."
		" "
		"<m>LAMBDA</>: The goldfish? You mean the castle goldfish? Aurelius, his name is. He's the King's regent."
	}
	goto ch2_lambda_person_goldfish_aurelius;
}
ch2_lambda_person_goldfish_aurelius {
	show serial dialog {
		"\tHe mostly just goes to all the meetings and observes everything quietly. But when King Gibson is away, Aurelius is put in charge, and he does a fantastic job. He's a reasonable guy."
	}
	goto ch2_lambda_topic_person_s;
}
// King Gibson
ch2_lambda_person_kinggibson {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about King Gibson."
		" "
		"<m>LAMBDA</>: Well, he's king of the castle. That means he makes most of the logistical decisions, and bears most of the responsibility for what happens here. He knows a thing or two about tech but not to the level needed to maintain this place, so he's made an effort to hire and train technicians and advisors to help him keep everything running."
	}
	goto ch2_lambda_topic_person_s;
}

// WEST WING

// Alvin, Theodore, Simon
ch2_lambda_person_alvin {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Alvin."
		" "
	}
	if (flag band_backstory is false) {
		show serial dialog {
			"<m>LAMBDA</>: Alvin? Oh, you mean the Alvin from the band \"1023 MB.\" Oh yeah, they were supposed to play tonight in the grand hall."
		}
		set flag band_backstory to true;
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Alvin? Oh, you mean the Alvin from the band \"1023 MB.\""
		}
	}
	show serial dialog {
		"\tYeah, so, Alvin -- by reputation, she's the quiet, mysterious one of the group -- that's all I know."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_theodore {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Theodore."
		" "
	}
	if (flag band_backstory is false) {
		show serial dialog {
			"<m>LAMBDA</>: Theodore? Oh, you mean the Theodore from the band \"1023 MB.\" Oh yeah, they were supposed to play tonight in the grand hall."
		}
		set flag band_backstory to true;
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Theodore? Oh, you mean the Theodore from the band \"1023 MB.\""
		}
	}
	show serial dialog {
		"\tYeah, so, Theodore -- I've never met them personally. I've heard they're the straightforward, stoic type, though."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_simon {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Simon."
		" "
	}
	if (flag band_backstory is false) {
		show serial dialog {
			"<m>LAMBDA</>: Simon? Oh, you mean the Simon from the band \"1023 MB.\" Oh yeah, they were supposed to play tonight in the grand hall."
		}
		set flag band_backstory to true;
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Simon? Oh, you mean the Simon from the band \"1023 MB.\""
		}
	}
	show serial dialog {
		"\tYeah, so, Simon -- from what I understand he's brash and kind of a pain to be around. Never met him, but I don't really <bold>want</> to meet him, you know?"
	}
	goto ch2_lambda_topic_person_s;
}
// Sea Moss
ch2_lambda_person_seamoss {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Sea Moss."
		" "
	}
	if (flag ch2_seen_room_32 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Sea Moss? Sea Moss... I-I think I...."
			"\tI think I used to be good friends with him, but... what did we do together?"
			"\tI seem to remember we... no, it's gone. I'm sorry."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Yes! Sea Moss! He's a big computer tinkerer. Knows everything about all the weird, low-level layers of computer circuitry, all the way down to the transistors themselves."
			"\tAnd he makes the best crepes, too, believe it or not!"
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Gloria
ch2_lambda_person_gloria {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Gloria."
		" "
	}
	if (flag ch2_seen_room_32 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Gloria? I think I recognize the name, but I can't picture a face. Maybe if I could just see who it was...."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Oh, Gloria, the golden beetle. She's, um, a little prone to panic, but honestly she's good at her job. She manages the castle payroll... that is, when she's not trapped in the employee break room with her toddler after an earthquake."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Samson
ch2_lambda_person_samson {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Samson."
		" "
	}
	if (flag ch2_seen_room_32 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Samson? That name doesn't ring a bell."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: I think Samson was the name of Gloria's kid, wasn't it? Was he two or three? Or five or six? I don't know. I was never that good with children."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Gregory
ch2_lambda_person_gregory {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Gregory."
		" "
	}
	if (flag ch2_seen_room_33 is false) {
		show serial dialog {
			"<m>LAMBDA</>: I think Gregory was the castle chef... maybe? I feel like he's been there forever, but I can't remember what he looks like."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Ah, Gregory! He runs the castle kitchens. He's a bit gray around the whiskers, but is still as quick as ever. Excellent taste, and great at improvising recipes."
		}
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_a_cat {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about a cat."
		" "
	}
	show serial dialog {
		"<m>LAMBDA</>: A cat? The only cat I know is Gregory, I think. He's the castle chef."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_the_cat {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about the cat."
		" "
	}
	show serial dialog {
		"<m>LAMBDA</>: The cat? The only cat I know is Gregory, I think. He's the castle chef."
	}
	goto ch2_lambda_topic_person_s;
}
// Clara
ch2_lambda_person_clara {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Clara."
		" "
	}
	show serial dialog {
		"<m>LAMBDA</>: Clara? Clara... I think I remember seeing her name on the new hires list recently, but I haven't met her. She's kitchen staff, though. Logistics, I think it was. Inventory management or something."
	}
	goto ch2_lambda_topic_person_s;
}

// EAST WING

//Jean-Paul
ch2_lambda_person_jeanpaul {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Jean-Paul."
		" "
	}
	if (flag ch2_seen_room_21 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Jean-Paul. A French... hen? Chicken? Some kind of bird? Gosh, I really can't remember, I'm sorry."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Ah, Jean-Paul! He's a cockatiel -- that's a kind of parakeet. He's always tidy about his workspace. Unlike me, ha ha.... Oh! You should hear him whistle sometime!"
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Frankie
ch2_lambda_person_frankie {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Frankie."
		" "
	}
	if (flag ch2_seen_room_21 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Hmm, \"Frankie,\" let's see.... Was that one of the hardware guys? I can't remember anything else, sorry."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Frankie is a great guy to have around if you're experiencing a hardware issue. They're our printer-wrangler, be they 2D or 3D printers."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Scuzzy
ch2_lambda_person_scuzzy {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Scuzzy."
		" "
	}
	if (flag ch2_seen_room_22 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Scuzzy? Or did you mean SCSI, that old data interface? It was kind of a pain, to be honest. You couldn't just connect things together -- you had to daisy chain the devices, and have a SCSI terminator at the end or none of it would work. Good riddance."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Scuzzy? Oh yeah, that guy from the server room."
			"\tScuzzy likes to see how things connect to each other. He's always coming up with ways people can connect to each other, or ways for unrelated objects to fit together to build something cool. It's usually stuff you wouldn't think of, too."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// C.K.Watt
ch2_lambda_person_ckwatt {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about C. K. Watt."
		" "
	}
	if (flag ch2_seen_room_22 is false) {
		show serial dialog {
			"<m>LAMBDA</>: C. K. Watt? Isn't that a bit from Fawlty Towers? I mean, it's a bit of an obnoxious reference, isn't it?"
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Oh, yeah, Charles. Oh, I'm sorry, I guess I should call him Mr. Watt now. He recently got promoted, so he's technically my boss when it comes to my responsibilities within the castle. Er, not that the normal castle hierarchy is much in play at the moment."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Tracy
ch2_lambda_person_tracy {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Tracy."
		" "
	}
	if (flag ch2_seen_room_23 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Tracy. Hmm. I think there was someone named Tracy in the power plant. Can't remember what their job was, though."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: That's right, Tracy is the logistics manager for the power plant. Makes sure the whole operation is funded and supplied which in turn keeps the whole castle running."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Rocco
ch2_lambda_person_rocco {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Rocco."
		" "
	}
	if (flag ch2_seen_room_23 is false) {
		show serial dialog {
			"<m>LAMBDA</>: Rocco was... hmm, let me see... was he someone from the workshop? I think that's right. I don't know if we ever interacted much."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Rocco builds and maintains the castle's computers. The normal-sized computers, I mean. I guess once in a while he also works on the castle itself. The castle is a computer, too, you know. That's why there's circuitry all over the place."
			"\tHuh, I just remembered this old project we did together a few years ago. It was this tiny LED screen and some random SOC on this board he drew up. We got a pair of really cheap joysticks, and I programmed a bunch of little arcade games for it."
			"\tAw, man. He and I used to make a lot of cool stuff. I'd do the software half, he the hardware half. I... I miss those times. How did I forget about that?"
			"\tI guess it's been a while since I've seen him in person. I hope he's doing okay."
		}
	}
	goto ch2_lambda_topic_person_s;
}
// Helvetica
ch2_lambda_person_helvetica {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Helvetica."
		" "
	}
	show serial dialog {
		"<m>LAMBDA</>: It's a classy font! Old school, maybe, but it's tightly designed. Don't let its simplicity fool you...."
		"\t...Oh, you meant a person named Helvetica? Hmm. I wonder if I know anyone named after a font."
	}
	goto ch2_lambda_topic_person_s;
}

// GENERAL

// Bob
ch2_lambda_person_bob {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Bob."
		" "
		"<m>LAMBDA</>: Bob? Which one? I know plenty. Fat Bobs, skinny Bobs, Bobs who climb on rocks. Oh yeah, and Bobs who ARE rocks."
		"\t...Well, okay, I actually don't <bold>know</> any of them, but I know <bold>of</> them."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_guardianbob {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Guardian Bob."
		" "
		"<m>LAMBDA</>: Guardian Bob? Oh, right, that Lambert-or-Phong looking guy. He's some kind of internet vigilante, I think. He knows a few hacking tricks, but he seems white hat to me. I trust him."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_solidsnek {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Solid Snek."
		" "
		"<m>LAMBDA</>: Hmm.... Did I know somebody who was called that? I might be thinking of a movie I saw a while back. It sounds kinda like the name of a movie hero, y'know?"
		" "
		"<c>YOU</>: A movie hero? Called \"snek\"?"
		" "
		"<m>LAMBDA</>: Well, I think so."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_marathonbob {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about the Marathon Bobs."
		" "
		"<m>LAMBDA</>: Right, so thirty years ago or more, gaming on the Macintosh was a <bold>doom</>ed prospect. But then came a contender that <bold>quake</>d the very foundations of the platform: Marathon!"
		"\tAnyway, \"BoBs\" were just some of the NPCs. Most of them were good guys, but some of them were all evil and explodey."
		"\tDon't worry, no assimilated Bobs around here."
		// todo: more game name puns?
		// duke nuken
		// hexen
		// strife
	}
	goto ch2_lambda_topic_person_s;
}

/* ---------- PEOPLE (COMPLICATED) ---------- */

ch2_lambda_person_xa {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about XA."
		" "
		"<m>LAMBDA</>: XA is a device called an Exa, which is a tool I use to do certain kinds of administrative work. Mostly networking."
		"\tExas are easy to program, but they take up a lot of space when I use them inside the castle -- that is, in physical space -- so I don't tend to use them much anymore. I guess I mostly like using them once in a while as a tinking project, like as a form a play."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_xb {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about XB."
		" "
		"<m>LAMBDA</>: Oh, sure, XB. That was one of the Exas we used to have around here. I'm afraid I stopped needing it for what I was using it for, so I despawned it ages ago. Frankly, I forgot I used to have it."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_xc {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about XC."
		" "
	}
	if (flag ch2_seen_room_99 is false) {
		show serial dialog {
			"<m>LAMBDA</>: I mean, it's true I have an Exa named XC in here with me. I guess you extrapolated the name XC, right?"
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: Oh, sure, XC. That's the Exa I've got in my lab."
		}
	}
	show serial dialog {
		"\tWell, it's just another Exa, I guess, much like XA. In this case, XC and XA are directly connected, so it's what I use as an intercom into that front room."
	}
	goto ch2_lambda_topic_person_s;
}

// The player

ch2_lambda_person_player {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about me!"
		" "
		"<m>LAMBDA</>: Oh, um, I don't actually know anything about you."
		"\tI guess... if anything... you've got a cool hat. That's not nothing, I suppose."
		" "
		# "How did you know I'm wearing a hat?" : ch2_lambda_person_player_2
	}
}
ch2_lambda_person_player_2 {
	set flag ch2_cameras_explanation to true;
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: How did you know I'm wearing a hat?"
		" "
		"<m>LAMBDA</>: That's, um... that would be because of the... well, the cameras."
		" "
		# "Cameras? That's creepy!" : ch2_lambda_person_player_2a
		# "Cameras? That's sensible." : ch2_lambda_person_player_2b
	}
}
ch2_lambda_person_player_2a {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Cameras? That's creepy."
		" "
		"<m>LAMBDA</>: Yeah, I realize it doesn't sound great, having cameras everywhere. The cameras made a bit more sense back when there was a lot more traffic in and out, but thinking about it, I guess it's pretty invasive. Funny, the things you just get used to."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_player_2b {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Cameras? That's a sensible measure to take."
		" "
		"<m>LAMBDA</>: You almost sound like you approve. They don't really do much good, certainly not anymore, and it's a little invasive, don't you think?"
		" "
		# "It's not that invasive." : ch2_lambda_person_player_3b
		# "Okay, maybe it's a little invasive." : ch2_lambda_person_player_3a
	}
}
ch2_lambda_person_player_3a {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Okay, maybe it's a little invasive."
		" "
		"<m>LAMBDA</>: Yeah. They've made it easier for me to help people in the castle from time to time, but I'm a little embarrassed to admit that they're everywhere."
	}
	goto ch2_lambda_topic_person_s;
}
ch2_lambda_person_player_3b {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: It's not that invasive."
		" "
		"<m>LAMBDA</>: It's true I would feel more nervous about a stranger inside the castle if the cameras were turned off or removed, but I'm not going to argue they're not invasive."
	}
	goto ch2_lambda_topic_person_s;
}

// Lambda

ch2_lambda_person_lambda {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about you!"
		" "
		"<m>LAMBDA</>: Me? Ohh, ummm... what's to know? I mean, I'm not that interesting, really...."
	}
	goto ch2_lambda_person_lambda_q;
}

ch2_lambda_person_lambda_q {
	show serial dialog {
		" "
		"(Ask:)"
		# "Where are you?" : ch2_lambda_person_lambda_where
		# "What's your real name?" : ch2_lambda_person_lambda_name
		# "(Go back)" : ch2_lambda_topic_person_start
	}
}
ch2_lambda_person_lambda_where {
	show serial dialog spacer;
	if (flag ch2_seen_room_99 is false) {
		show serial dialog {
			"<c>YOU</>: Where are you?"
			" "
			"<m>LAMBDA</>: You know... um... it's kind of complicated. In a manner of speaking, I'm inside the castle. Let's just say I'm nearby but not close."
		}
	} else {
		if (variable ch2_in_room is 99) {
			show serial dialog {
				"<c>YOU</>: Where are you? I mean, where are WE? There aren't any doors here."
			}
		} else {
			show serial dialog {
				"<c>YOU</>: Where are you? I mean -- spatially, where is that lab of yours? There weren't any doors inside."
			}
		}
		show serial dialog {
			" "
			"<m>LAMBDA</>: I'd say it's a pocket dimension, but it's more mundane than that. It's just its own separate space somewhere under the mountain. I set it all up back before everything went south, back when everyone was using the mainframe for all sorts of trivial nonsense."
		}
	}
	goto ch2_lambda_person_lambda_q;
}
ch2_lambda_person_lambda_name {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What's your real name? It's not really \"Lambda,\" is it?"
		" "
	}
	show serial dialog {
		"<m>LAMBDA</>: Well, no. But you see... this is a little embarrassing, but...."
		"\tI... sort of... don't remember my real name."
		" "
		# "You're kidding, right?" : ch2_lambda_person_lambda_name_2a
		# "How could you forget your own name? What happened?" : ch2_lambda_person_lambda_name_2b
	}
}
ch2_lambda_person_lambda_name_2a {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: You're kidding, right?"
		" "
		"<m>LAMBDA</>: You have to understand... this place, our memories... it's all ones and zeroes."
		"\tWhen everything is digital, it is <bold>absolutely</> possible for information to disappear permanently. In my case...."
	}
	goto ch2_lambda_person_lambda_name_2c;
}
ch2_lambda_person_lambda_name_2b {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: How could you forget your own name? What happened?"
		" "
		"<m>LAMBDA</>: Our world is entirely digital. All ones and zeroes. Even you and me. So what happened was...."
	}
	goto ch2_lambda_person_lambda_name_2c;
}
ch2_lambda_person_lambda_name_2c {
	show serial dialog {
		"\t...I found the place in the world where my name linked to my data as an entity... and destroyed it."
	}
	if (variable ch2_storyflag_round is < 5) {
		show serial dialog {
			" "
			# "What? But why?" : ch2_lambda_person_lambda_name_3
		}
	} else {
		show serial dialog {
			"\tThe <r>Big Bad</> couldn't target me with hacks without knowing my name, you see, so I made it impossible to learn my name, or even know my name."
			"\tI severed more than I intended, but...."
		}
		goto ch2_lambda_person_lambda_name_followup;
	}
}
ch2_lambda_person_lambda_name_3 {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What? But why?"
		" "
		"<m>LAMBDA</>: I did it to protect myself from the <r>Big Bad</>. He couldn't target me with hacks without knowing my name, so I made it impossible to learn my name, or even know my name."
		"\tI severed more than I intended, but...."
	}
	goto ch2_lambda_person_lambda_name_followup;
}

ch2_lambda_person_lambda_name_2c_alt {
	show serial dialog {
		"\t...I found the place in the world where my name linked to my data as an entity... and destroyed it. The <r>Big Bad</> couldn't target me with hacks without knowing my name, you see, so I made it impossible to learn my name, or even know my name."
		"\tI severed more than I intended, but...."
	}
	goto ch2_lambda_person_lambda_name_followup;
}
ch2_lambda_person_lambda_name_followup {
	show serial dialog {
		" "
		"(Ask a followup question:)"
		# "What else was severed?" : ch2_lambda_person_lambda_name_followup_severed
		# "Is that why the Big Bad doesn't have a name?" : ch2_lambda_person_lambda_name_followup_bigbad
		# "Does a nickname not count as a name?" : ch2_lambda_person_lambda_name_followup_nickname
		# "Why \"Lambda\" though?" : ch2_lambda_person_lambda_name_followup_lambda
		# "(Go back)" : ch2_lambda_person_lambda_q
	}
}

ch2_lambda_person_lambda_name_followup_severed {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What else was severed?"
		" "
		"<m>LAMBDA</>: There are gaps in my mind. I... I think they might have appeared when I deleted my name. Hard to tell."
		"\tIt's a lot harder to remember people, for a start. My skills seem to be intact, but I feel... disconnected. It's like everything I <bold>can</> remember is stripped of context."
	}
	set flag ch2_lambda_deletion_backstory to true;
	goto ch2_lambda_person_lambda_name_followup;
}
ch2_lambda_person_lambda_name_followup_bigbad {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Is that why the <r>Big Bad</> doesn't have a name? Did he destroy his name, too, so that other hackers can't target him for hacks?"
		" "
		"<m>LAMBDA</>: Probably. Good insight."
		"\tIn his case, though, I think he likes the mystique, too."
	}
	set flag hackbook_backstory to true; // otherwise, the mage will realize he doesn't know the Big Bad's name when the "Town History" book is read, despite realizing it here with Lambda
	goto ch2_lambda_person_lambda_name_followup;
}
ch2_lambda_person_lambda_name_followup_nickname {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Does a nickname not count as a name? I've been calling you \"Lambda,\" after all. Isn't that a name?"
		" "
		"<m>LAMBDA</>: No, by \"name\" I don't mean the label on my messages, or what someone calls me."
		"\tI destroyed my <m>name</>, which is to say I damaged the world's mechanism of referring to me at all. If someone else's memories link to me, that link has been severed, because my name is now a broken reference. I am an unreachable entity."
		"\tI've since learned that many links go in two directions...."
	}
	goto ch2_lambda_person_lambda_name_followup;
}

ch2_lambda_person_lambda_name_followup_lambda {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Why \"Lambda\" though?"
		" "
		"<m>LAMBDA</>: I thought of it on the spot. It's because I'm a <bold>functionary with no name</>, you see! You see?"
		"\tNo? Oh, um... never mind."
	}
	goto ch2_lambda_person_lambda_name_followup;
}

// Big Bad

ch2_lambda_person_big_bad {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about the <r>Big Bad</>."
		" "
		"<m>LAMBDA</>: Oh, um, that's complicated."
		"\tBut he was ruthless. Smart, yes, and capable, but he seemed to lack compassion. Like it was a bother to him when other people brought up the problems his actions were causing for other people. Like he might not have even noticed otherwise."
		" "
		# "You're making it sound like you knew him." : ch2_lambda_person_big_bad2
	}
}
ch2_lambda_person_big_bad2 {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: You're making it sound like you knew him."
		" "
		"<m>LAMBDA</>: I mean -- that is, we -- we were...."
		"\tUm, y-yes, we were acquainted, you could say. We'd certainly met. More than once. He always rubbed me the wrong way, though, even before he decided to do all the terrible things he did."
		"\tIt's, um... it's been long enough that the details are fuzzy. But even if I can't remember exactly how things might have gone down, I can definitely remember the way he made me feel when we interacted. I guess that's all I have to say about that."
	}
	goto ch2_lambda_topic_person_s;
}

// Elders

ch2_lambda_person_alfonso {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Alfonso."
	}
	if (flag ch2_cutseen_secret_ending is false) {
		show serial dialog {
			" "
			"<m>LAMBDA</>: Alfonso? That name rings a bell... maybe? I-I feel like I should know who that is."
			"\tAw, man. I feel terrible. I'm having this sort of painful nostalgia about that name right now. Did I let him down about something? Hmm."
		}
	} else {
		show serial dialog {
			" "
			"<m>LAMBDA</>: Alfonso, yes! I look up to him a lot. And he's fond of me -- or, um, I guess he <bold>was</> fond of me. N-not anymore, I guess."
			"\tI hope... I really do hope he'll try to get to know me again. I was the rookie of the group, so I feel like they were all sort of hard on me sometimes, but we mostly got along back then...."
		}
	}
	goto ch2_lambda_topic_person_s;
}

ch2_lambda_person_jackob {
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Tell me about Jackob."
	}
	if (flag ch2_cutseen_secret_ending is false) {
		show serial dialog {
			" "
			"<m>LAMBDA</>: Jackob... Jackob.... That name is a bit odd, isn't it? There's something about that name... like there's something wrong about it. Is that really how it's spelled?"
		}
	} else {
		show serial dialog {
			" "
			"<m>LAMBDA</>: Jackob! He's the oldest village elder, of course, so he's the most knowledgeable of all of us. Or... at least he <bold>was</>. I-I confess he looked old and confused to me just now. That was hard to watch. The Big Bad must have really done a number on him."
		}
	}
	goto ch2_lambda_topic_person_s;
}

// Bert

ch2_lambda_person_bert {
	show serial dialog spacer;
	if (flag ch2_cutseen_bert_secret is false) {
		show serial dialog {
			"<c>YOU</>: Tell me about Bert."
			" "
			"<m>LAMBDA</>: Bert? I don't know any Berts... I think? You know, maybe -- no, no, I think I'm mixing myself up. I just had the image of Sasquatch in my head for a second when you said that."
		}
	} else {
		show serial dialog {
			"<c>YOU</>: About Bert...."
		}
	
		goto ch2_lambda_bert_q;
	}
	goto ch2_lambda_topic_person_s;
}

ch2_lambda_bert_q {
	show serial dialog {
		" "
		"(Ask about:)"
		# "What is Bert like?" : ch2_lambda_bert_like
		# "Bert's never mentioned you." : ch2_lambda_bert_mentioned
		# "What did he mean by 'back door?'" : ch2_lambda_bert_door
		# "Do you know if Bert left a message yet?" : ch2_lambda_bert_message
		# "(Quit)" : ch2_lambda_bert_quit
	}
}

ch2_lambda_bert_like {
	set flag ch2_lambdabert_q1 to true;
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What is Bert like?"
		" "
		"<m>LAMBDA</>: Bert is a surprisingly sweet guy. He doesn't say much, but he's actually pretty smart. And he's irritatingly stubborn when he gets stuck on something though. Once, way back, when...."
		"\tBack when... hmmm."
		" "
		"<c>YOU</>: What is it?"
		" "
		"<m>LAMBDA</>: It was a fleeting thought, but it's gone now. Sorry, I can't remember what I was going to say."
	}
	goto ch2_lambda_bert_autocontinue_check;
}
ch2_lambda_bert_mentioned {
	set flag ch2_lambdabert_q2 to true;
	if (flag ch2_cutseen_castle99 is false) {
		show serial dialog spacer;
		show serial dialog {
			"<c>YOU</>: Bert's never mentioned you."
			" "
			"<m>LAMBDA</>: Well... he might not know I'm here. In the castle."
			" "
			"<c>YOU</>: But the village elders knew XA was here. In the castle."
			" "
			"<m>LAMBDA</>: Yes, well, that's because...."
			"\tLook... um... sometimes it's not so bad being left behind, you know? They're all better off without me. It's complicated, but by staying apart, I'm keeping everyone safer, believe it or not."
		}
		goto ch2_lambda_bert_autocontinue_check;
	} else {
		show serial dialog spacer;
		show serial dialog {
			"<c>YOU</>: Bert's never mentioned you."
			" "
			"<m>LAMBDA</>: Well... he wouldn't have. He doesn't remember me at all."
			"\tI have a lot of regrets about everything, but he was actually one of the ones who argued that I take this course of action -- to sever the connection between <bold>me</> and my <bold>name</> and make everyone forget me. It's tragic, but this <bold>is</> what he wanted."
		}
		goto ch2_lambda_bert_autocontinue_check;
	}
}
ch2_lambda_bert_door {
	set flag ch2_lambdabert_q3 to true;
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: What did Bert mean by 'back door?'"
		" "
		"<m>LAMBDA</>: A backdoor is a secret way into a secure area. Hackers will create backdoors so they can still get in somewhere after the normal entrance is no longer accessable to them."
		" "
		"<c>YOU</>: But Bert's not a hacker. Or can <bold>anyone</> use a backdoor?"
		" "
		"<m>LAMBDA</>: I mean, it's probably <bold>easier</> if you're a hacker, but a door's a door. Say, there's probably still a backdoor or two in the village you could find if you tried. No hacking required."
	}
	goto ch2_lambda_bert_autocontinue_check;
}

ch2_lambda_bert_message {
	set flag ch2_lambdabert_q4 to true;
	show serial dialog spacer;
	show serial dialog {
		"<c>YOU</>: Do you know if Bert left a message yet?"
		" "
	}
	if (flag interrupt is true) {
		show serial dialog {
			"<m>LAMBDA</>: Haha! He's only been gone a moment! Be patient."
		}
	} else {
		show serial dialog {
			"<m>LAMBDA</>: You might want to double check with the Wiz, but I haven't heard anything so far, sorry."
		}
	}
	goto ch2_lambda_bert_autocontinue_check;
}

ch2_lambda_bert_autocontinue_check {
	if (
		flag ch2_parts_round_2_backstory is true
		|| flag ch2_lambdabert_q1 is false
		|| flag ch2_lambdabert_q2 is false
		|| flag ch2_lambdabert_q3 is false
		|| flag ch2_lambdabert_q4 is false
	) {
		goto ch2_lambda_bert_q;
	} else {
		set flag ch2_lambdabert_skip_spacer to true;
		goto ch2_lambda_round_2_parts1;	
	}
}

ch2_lambda_bert_quit {
	if (variable CALLBACK is 1) {
		mutate CALLBACK = 0;
		goto ch2_lambda_round_2_parts1;
	} else {
		goto ch2_lambda_topic_person_s;
	}
}
